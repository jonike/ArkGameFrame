// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: AFMsgBase.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "AFMsgBase.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace AFMsg {

namespace {

const ::google::protobuf::Descriptor* Ident_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Ident_reflection_ = NULL;
const ::google::protobuf::Descriptor* Point3D_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Point3D_reflection_ = NULL;
const ::google::protobuf::Descriptor* PropertyPBData_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PropertyPBData_reflection_ = NULL;
const ::google::protobuf::Descriptor* RecordPBData_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  RecordPBData_reflection_ = NULL;
const ::google::protobuf::Descriptor* PBData_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PBData_reflection_ = NULL;
const ::google::protobuf::Descriptor* DataListPBData_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  DataListPBData_reflection_ = NULL;
const ::google::protobuf::Descriptor* RecordAddRowStruct_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  RecordAddRowStruct_reflection_ = NULL;
const ::google::protobuf::Descriptor* ObjectRecordBase_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ObjectRecordBase_reflection_ = NULL;
const ::google::protobuf::Descriptor* ObjectPropertyList_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ObjectPropertyList_reflection_ = NULL;
const ::google::protobuf::Descriptor* MultiObjectPropertyList_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MultiObjectPropertyList_reflection_ = NULL;
const ::google::protobuf::Descriptor* ObjectRecordList_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ObjectRecordList_reflection_ = NULL;
const ::google::protobuf::Descriptor* MultiObjectRecordList_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MultiObjectRecordList_reflection_ = NULL;
const ::google::protobuf::Descriptor* ObjectPropertyPBData_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ObjectPropertyPBData_reflection_ = NULL;
const ::google::protobuf::Descriptor* ObjectRecordPBData_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ObjectRecordPBData_reflection_ = NULL;
const ::google::protobuf::Descriptor* ObjectRecordSwap_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ObjectRecordSwap_reflection_ = NULL;
const ::google::protobuf::Descriptor* ObjectRecordAddRow_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ObjectRecordAddRow_reflection_ = NULL;
const ::google::protobuf::Descriptor* ObjectRecordRemove_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ObjectRecordRemove_reflection_ = NULL;
const ::google::protobuf::Descriptor* PlayerPropertyBase_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PlayerPropertyBase_reflection_ = NULL;
const ::google::protobuf::Descriptor* PlayerRecordBase_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PlayerRecordBase_reflection_ = NULL;
const ::google::protobuf::Descriptor* PlayerRecordList_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PlayerRecordList_reflection_ = NULL;
const ::google::protobuf::Descriptor* BrocastMsg_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  BrocastMsg_reflection_ = NULL;
const ::google::protobuf::Descriptor* Position_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Position_reflection_ = NULL;
const ::google::protobuf::Descriptor* ReqCommand_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ReqCommand_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* ReqCommand_EGameCommandType_descriptor_ = NULL;

}  // namespace


void protobuf_AssignDesc_AFMsgBase_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_AFMsgBase_2eproto() {
  protobuf_AddDesc_AFMsgBase_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "AFMsgBase.proto");
  GOOGLE_CHECK(file != NULL);
  Ident_descriptor_ = file->message_type(0);
  static const int Ident_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Ident, svrid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Ident, index_),
  };
  Ident_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Ident_descriptor_,
      Ident::default_instance_,
      Ident_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Ident, _has_bits_[0]),
      -1,
      -1,
      sizeof(Ident),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Ident, _internal_metadata_),
      -1);
  Point3D_descriptor_ = file->message_type(1);
  static const int Point3D_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Point3D, x_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Point3D, y_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Point3D, z_),
  };
  Point3D_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Point3D_descriptor_,
      Point3D::default_instance_,
      Point3D_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Point3D, _has_bits_[0]),
      -1,
      -1,
      sizeof(Point3D),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Point3D, _internal_metadata_),
      -1);
  PropertyPBData_descriptor_ = file->message_type(2);
  static const int PropertyPBData_offsets_[11] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PropertyPBData, property_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PropertyPBData, ndatatype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PropertyPBData, mbvalue_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PropertyPBData, mnvalue_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PropertyPBData, mn64value_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PropertyPBData, mfvalue_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PropertyPBData, mdvalue_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PropertyPBData, mstrvalue_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PropertyPBData, mpvaule_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PropertyPBData, mpuserdata_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PropertyPBData, mguid_),
  };
  PropertyPBData_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PropertyPBData_descriptor_,
      PropertyPBData::default_instance_,
      PropertyPBData_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PropertyPBData, _has_bits_[0]),
      -1,
      -1,
      sizeof(PropertyPBData),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PropertyPBData, _internal_metadata_),
      -1);
  RecordPBData_descriptor_ = file->message_type(3);
  static const int RecordPBData_offsets_[12] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RecordPBData, row_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RecordPBData, col_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RecordPBData, ndatatype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RecordPBData, mbvalue_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RecordPBData, mnvalue_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RecordPBData, mn64value_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RecordPBData, mfvalue_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RecordPBData, mdvalue_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RecordPBData, mstrvalue_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RecordPBData, mpvaule_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RecordPBData, mpuserdata_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RecordPBData, mguid_),
  };
  RecordPBData_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      RecordPBData_descriptor_,
      RecordPBData::default_instance_,
      RecordPBData_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RecordPBData, _has_bits_[0]),
      -1,
      -1,
      sizeof(RecordPBData),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RecordPBData, _internal_metadata_),
      -1);
  PBData_descriptor_ = file->message_type(4);
  static const int PBData_offsets_[10] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBData, ndatatype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBData, mbvalue_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBData, mnvalue_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBData, mn64value_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBData, mfvalue_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBData, mdvalue_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBData, mstrvalue_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBData, mpvaule_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBData, mpuserdata_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBData, mguid_),
  };
  PBData_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PBData_descriptor_,
      PBData::default_instance_,
      PBData_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBData, _has_bits_[0]),
      -1,
      -1,
      sizeof(PBData),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBData, _internal_metadata_),
      -1);
  DataListPBData_descriptor_ = file->message_type(5);
  static const int DataListPBData_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DataListPBData, data_list_),
  };
  DataListPBData_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      DataListPBData_descriptor_,
      DataListPBData::default_instance_,
      DataListPBData_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DataListPBData, _has_bits_[0]),
      -1,
      -1,
      sizeof(DataListPBData),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DataListPBData, _internal_metadata_),
      -1);
  RecordAddRowStruct_descriptor_ = file->message_type(6);
  static const int RecordAddRowStruct_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RecordAddRowStruct, row_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RecordAddRowStruct, record_data_list_),
  };
  RecordAddRowStruct_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      RecordAddRowStruct_descriptor_,
      RecordAddRowStruct::default_instance_,
      RecordAddRowStruct_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RecordAddRowStruct, _has_bits_[0]),
      -1,
      -1,
      sizeof(RecordAddRowStruct),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RecordAddRowStruct, _internal_metadata_),
      -1);
  ObjectRecordBase_descriptor_ = file->message_type(7);
  static const int ObjectRecordBase_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ObjectRecordBase, record_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ObjectRecordBase, row_struct_),
  };
  ObjectRecordBase_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ObjectRecordBase_descriptor_,
      ObjectRecordBase::default_instance_,
      ObjectRecordBase_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ObjectRecordBase, _has_bits_[0]),
      -1,
      -1,
      sizeof(ObjectRecordBase),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ObjectRecordBase, _internal_metadata_),
      -1);
  ObjectPropertyList_descriptor_ = file->message_type(8);
  static const int ObjectPropertyList_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ObjectPropertyList, player_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ObjectPropertyList, property_data_list_),
  };
  ObjectPropertyList_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ObjectPropertyList_descriptor_,
      ObjectPropertyList::default_instance_,
      ObjectPropertyList_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ObjectPropertyList, _has_bits_[0]),
      -1,
      -1,
      sizeof(ObjectPropertyList),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ObjectPropertyList, _internal_metadata_),
      -1);
  MultiObjectPropertyList_descriptor_ = file->message_type(9);
  static const int MultiObjectPropertyList_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MultiObjectPropertyList, multi_player_property_),
  };
  MultiObjectPropertyList_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      MultiObjectPropertyList_descriptor_,
      MultiObjectPropertyList::default_instance_,
      MultiObjectPropertyList_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MultiObjectPropertyList, _has_bits_[0]),
      -1,
      -1,
      sizeof(MultiObjectPropertyList),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MultiObjectPropertyList, _internal_metadata_),
      -1);
  ObjectRecordList_descriptor_ = file->message_type(10);
  static const int ObjectRecordList_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ObjectRecordList, player_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ObjectRecordList, record_list_),
  };
  ObjectRecordList_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ObjectRecordList_descriptor_,
      ObjectRecordList::default_instance_,
      ObjectRecordList_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ObjectRecordList, _has_bits_[0]),
      -1,
      -1,
      sizeof(ObjectRecordList),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ObjectRecordList, _internal_metadata_),
      -1);
  MultiObjectRecordList_descriptor_ = file->message_type(11);
  static const int MultiObjectRecordList_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MultiObjectRecordList, multi_player_record_),
  };
  MultiObjectRecordList_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      MultiObjectRecordList_descriptor_,
      MultiObjectRecordList::default_instance_,
      MultiObjectRecordList_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MultiObjectRecordList, _has_bits_[0]),
      -1,
      -1,
      sizeof(MultiObjectRecordList),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MultiObjectRecordList, _internal_metadata_),
      -1);
  ObjectPropertyPBData_descriptor_ = file->message_type(12);
  static const int ObjectPropertyPBData_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ObjectPropertyPBData, player_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ObjectPropertyPBData, property_list_),
  };
  ObjectPropertyPBData_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ObjectPropertyPBData_descriptor_,
      ObjectPropertyPBData::default_instance_,
      ObjectPropertyPBData_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ObjectPropertyPBData, _has_bits_[0]),
      -1,
      -1,
      sizeof(ObjectPropertyPBData),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ObjectPropertyPBData, _internal_metadata_),
      -1);
  ObjectRecordPBData_descriptor_ = file->message_type(13);
  static const int ObjectRecordPBData_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ObjectRecordPBData, player_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ObjectRecordPBData, record_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ObjectRecordPBData, record_list_),
  };
  ObjectRecordPBData_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ObjectRecordPBData_descriptor_,
      ObjectRecordPBData::default_instance_,
      ObjectRecordPBData_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ObjectRecordPBData, _has_bits_[0]),
      -1,
      -1,
      sizeof(ObjectRecordPBData),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ObjectRecordPBData, _internal_metadata_),
      -1);
  ObjectRecordSwap_descriptor_ = file->message_type(14);
  static const int ObjectRecordSwap_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ObjectRecordSwap, player_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ObjectRecordSwap, origin_record_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ObjectRecordSwap, target_record_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ObjectRecordSwap, row_origin_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ObjectRecordSwap, row_target_),
  };
  ObjectRecordSwap_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ObjectRecordSwap_descriptor_,
      ObjectRecordSwap::default_instance_,
      ObjectRecordSwap_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ObjectRecordSwap, _has_bits_[0]),
      -1,
      -1,
      sizeof(ObjectRecordSwap),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ObjectRecordSwap, _internal_metadata_),
      -1);
  ObjectRecordAddRow_descriptor_ = file->message_type(15);
  static const int ObjectRecordAddRow_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ObjectRecordAddRow, player_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ObjectRecordAddRow, record_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ObjectRecordAddRow, row_data_),
  };
  ObjectRecordAddRow_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ObjectRecordAddRow_descriptor_,
      ObjectRecordAddRow::default_instance_,
      ObjectRecordAddRow_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ObjectRecordAddRow, _has_bits_[0]),
      -1,
      -1,
      sizeof(ObjectRecordAddRow),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ObjectRecordAddRow, _internal_metadata_),
      -1);
  ObjectRecordRemove_descriptor_ = file->message_type(16);
  static const int ObjectRecordRemove_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ObjectRecordRemove, player_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ObjectRecordRemove, record_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ObjectRecordRemove, remove_row_),
  };
  ObjectRecordRemove_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ObjectRecordRemove_descriptor_,
      ObjectRecordRemove::default_instance_,
      ObjectRecordRemove_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ObjectRecordRemove, _has_bits_[0]),
      -1,
      -1,
      sizeof(ObjectRecordRemove),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ObjectRecordRemove, _internal_metadata_),
      -1);
  PlayerPropertyBase_descriptor_ = file->message_type(17);
  static const int PlayerPropertyBase_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerPropertyBase, property_data_list_),
  };
  PlayerPropertyBase_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PlayerPropertyBase_descriptor_,
      PlayerPropertyBase::default_instance_,
      PlayerPropertyBase_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerPropertyBase, _has_bits_[0]),
      -1,
      -1,
      sizeof(PlayerPropertyBase),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerPropertyBase, _internal_metadata_),
      -1);
  PlayerRecordBase_descriptor_ = file->message_type(18);
  static const int PlayerRecordBase_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerRecordBase, record_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerRecordBase, record_data_list_),
  };
  PlayerRecordBase_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PlayerRecordBase_descriptor_,
      PlayerRecordBase::default_instance_,
      PlayerRecordBase_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerRecordBase, _has_bits_[0]),
      -1,
      -1,
      sizeof(PlayerRecordBase),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerRecordBase, _internal_metadata_),
      -1);
  PlayerRecordList_descriptor_ = file->message_type(19);
  static const int PlayerRecordList_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerRecordList, record_list_),
  };
  PlayerRecordList_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PlayerRecordList_descriptor_,
      PlayerRecordList::default_instance_,
      PlayerRecordList_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerRecordList, _has_bits_[0]),
      -1,
      -1,
      sizeof(PlayerRecordList),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerRecordList, _internal_metadata_),
      -1);
  BrocastMsg_descriptor_ = file->message_type(20);
  static const int BrocastMsg_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BrocastMsg, player_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BrocastMsg, msg_data_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BrocastMsg, nmsgid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BrocastMsg, player_client_list_),
  };
  BrocastMsg_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      BrocastMsg_descriptor_,
      BrocastMsg::default_instance_,
      BrocastMsg_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BrocastMsg, _has_bits_[0]),
      -1,
      -1,
      sizeof(BrocastMsg),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BrocastMsg, _internal_metadata_),
      -1);
  Position_descriptor_ = file->message_type(21);
  static const int Position_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Position, x_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Position, y_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Position, z_),
  };
  Position_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Position_descriptor_,
      Position::default_instance_,
      Position_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Position, _has_bits_[0]),
      -1,
      -1,
      sizeof(Position),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Position, _internal_metadata_),
      -1);
  ReqCommand_descriptor_ = file->message_type(22);
  static const int ReqCommand_offsets_[9] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReqCommand, control_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReqCommand, command_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReqCommand, command_str_value_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReqCommand, command_value_int_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReqCommand, command_value_float_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReqCommand, command_value_str_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReqCommand, command_value_object_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReqCommand, row_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReqCommand, col_),
  };
  ReqCommand_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ReqCommand_descriptor_,
      ReqCommand::default_instance_,
      ReqCommand_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReqCommand, _has_bits_[0]),
      -1,
      -1,
      sizeof(ReqCommand),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReqCommand, _internal_metadata_),
      -1);
  ReqCommand_EGameCommandType_descriptor_ = ReqCommand_descriptor_->enum_type(0);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_AFMsgBase_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Ident_descriptor_, &Ident::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Point3D_descriptor_, &Point3D::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PropertyPBData_descriptor_, &PropertyPBData::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      RecordPBData_descriptor_, &RecordPBData::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PBData_descriptor_, &PBData::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      DataListPBData_descriptor_, &DataListPBData::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      RecordAddRowStruct_descriptor_, &RecordAddRowStruct::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ObjectRecordBase_descriptor_, &ObjectRecordBase::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ObjectPropertyList_descriptor_, &ObjectPropertyList::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      MultiObjectPropertyList_descriptor_, &MultiObjectPropertyList::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ObjectRecordList_descriptor_, &ObjectRecordList::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      MultiObjectRecordList_descriptor_, &MultiObjectRecordList::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ObjectPropertyPBData_descriptor_, &ObjectPropertyPBData::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ObjectRecordPBData_descriptor_, &ObjectRecordPBData::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ObjectRecordSwap_descriptor_, &ObjectRecordSwap::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ObjectRecordAddRow_descriptor_, &ObjectRecordAddRow::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ObjectRecordRemove_descriptor_, &ObjectRecordRemove::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PlayerPropertyBase_descriptor_, &PlayerPropertyBase::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PlayerRecordBase_descriptor_, &PlayerRecordBase::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PlayerRecordList_descriptor_, &PlayerRecordList::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      BrocastMsg_descriptor_, &BrocastMsg::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Position_descriptor_, &Position::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ReqCommand_descriptor_, &ReqCommand::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_AFMsgBase_2eproto() {
  delete Ident::default_instance_;
  delete Ident_reflection_;
  delete Point3D::default_instance_;
  delete Point3D_reflection_;
  delete PropertyPBData::default_instance_;
  delete PropertyPBData_reflection_;
  delete RecordPBData::default_instance_;
  delete RecordPBData_reflection_;
  delete PBData::default_instance_;
  delete PBData_reflection_;
  delete DataListPBData::default_instance_;
  delete DataListPBData_reflection_;
  delete RecordAddRowStruct::default_instance_;
  delete RecordAddRowStruct_reflection_;
  delete ObjectRecordBase::default_instance_;
  delete ObjectRecordBase_reflection_;
  delete ObjectPropertyList::default_instance_;
  delete ObjectPropertyList_reflection_;
  delete MultiObjectPropertyList::default_instance_;
  delete MultiObjectPropertyList_reflection_;
  delete ObjectRecordList::default_instance_;
  delete ObjectRecordList_reflection_;
  delete MultiObjectRecordList::default_instance_;
  delete MultiObjectRecordList_reflection_;
  delete ObjectPropertyPBData::default_instance_;
  delete ObjectPropertyPBData_reflection_;
  delete ObjectRecordPBData::default_instance_;
  delete ObjectRecordPBData_reflection_;
  delete ObjectRecordSwap::default_instance_;
  delete ObjectRecordSwap_reflection_;
  delete ObjectRecordAddRow::default_instance_;
  delete ObjectRecordAddRow_reflection_;
  delete ObjectRecordRemove::default_instance_;
  delete ObjectRecordRemove_reflection_;
  delete PlayerPropertyBase::default_instance_;
  delete PlayerPropertyBase_reflection_;
  delete PlayerRecordBase::default_instance_;
  delete PlayerRecordBase_reflection_;
  delete PlayerRecordList::default_instance_;
  delete PlayerRecordList_reflection_;
  delete BrocastMsg::default_instance_;
  delete BrocastMsg_reflection_;
  delete Position::default_instance_;
  delete Position_reflection_;
  delete ReqCommand::default_instance_;
  delete ReqCommand_reflection_;
}

void protobuf_AddDesc_AFMsgBase_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AddDesc_AFMsgBase_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::AFMsg::protobuf_AddDesc_AFDefine_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\017AFMsgBase.proto\022\005AFMsg\032\016AFDefine.proto"
    "\"%\n\005Ident\022\r\n\005svrid\030\001 \002(\005\022\r\n\005index\030\002 \002(\005\""
    "*\n\007Point3D\022\t\n\001x\030\001 \002(\002\022\t\n\001y\030\002 \002(\002\022\t\n\001z\030\003 "
    "\002(\002\"\346\001\n\016PropertyPBData\022\025\n\rproperty_name\030"
    "\001 \002(\014\022\021\n\tndataType\030\002 \002(\005\022\017\n\007mbValue\030\003 \001("
    "\010\022\017\n\007mnValue\030\004 \001(\005\022\021\n\tmn64Value\030\005 \001(\003\022\017\n"
    "\007mfValue\030\006 \001(\002\022\017\n\007mdValue\030\007 \001(\001\022\021\n\tmstrV"
    "alue\030\010 \001(\014\022\017\n\007mpVaule\030\t \001(\003\022\022\n\nmpUserDat"
    "a\030\n \001(\014\022\033\n\005mGuid\030\013 \001(\0132\014.AFMsg.Ident\"\347\001\n"
    "\014RecordPBData\022\013\n\003row\030\001 \002(\005\022\013\n\003col\030\002 \002(\005\022"
    "\021\n\tndataType\030\003 \002(\005\022\017\n\007mbValue\030\004 \001(\010\022\017\n\007m"
    "nValue\030\005 \001(\005\022\021\n\tmn64Value\030\006 \001(\003\022\017\n\007mfVal"
    "ue\030\007 \001(\002\022\017\n\007mdValue\030\010 \001(\001\022\021\n\tmstrValue\030\t"
    " \001(\014\022\017\n\007mpVaule\030\n \001(\003\022\022\n\nmpUserData\030\013 \001("
    "\014\022\033\n\005mGuid\030\014 \001(\0132\014.AFMsg.Ident\"\307\001\n\006PBDat"
    "a\022\021\n\tndataType\030\001 \002(\005\022\017\n\007mbValue\030\002 \001(\010\022\017\n"
    "\007mnValue\030\003 \001(\005\022\021\n\tmn64Value\030\004 \001(\003\022\017\n\007mfV"
    "alue\030\005 \001(\002\022\017\n\007mdValue\030\006 \001(\001\022\021\n\tmstrValue"
    "\030\007 \001(\014\022\017\n\007mpVaule\030\010 \001(\003\022\022\n\nmpUserData\030\t "
    "\001(\014\022\033\n\005mGuid\030\n \001(\0132\014.AFMsg.Ident\"2\n\016Data"
    "ListPBData\022 \n\tdata_list\030\001 \003(\0132\r.AFMsg.PB"
    "Data\"P\n\022RecordAddRowStruct\022\013\n\003row\030\001 \002(\005\022"
    "-\n\020record_data_list\030\002 \003(\0132\023.AFMsg.Record"
    "PBData\"V\n\020ObjectRecordBase\022\023\n\013record_nam"
    "e\030\001 \002(\014\022-\n\nrow_struct\030\002 \003(\0132\031.AFMsg.Reco"
    "rdAddRowStruct\"h\n\022ObjectPropertyList\022\037\n\t"
    "player_id\030\001 \002(\0132\014.AFMsg.Ident\0221\n\022propert"
    "y_data_list\030\002 \003(\0132\025.AFMsg.PropertyPBData"
    "\"S\n\027MultiObjectPropertyList\0228\n\025multi_pla"
    "yer_property\030\001 \003(\0132\031.AFMsg.ObjectPropert"
    "yList\"a\n\020ObjectRecordList\022\037\n\tplayer_id\030\001"
    " \002(\0132\014.AFMsg.Ident\022,\n\013record_list\030\002 \003(\0132"
    "\027.AFMsg.ObjectRecordBase\"M\n\025MultiObjectR"
    "ecordList\0224\n\023multi_player_record\030\001 \003(\0132\027"
    ".AFMsg.ObjectRecordList\"e\n\024ObjectPropert"
    "yPBData\022\037\n\tplayer_id\030\001 \002(\0132\014.AFMsg.Ident"
    "\022,\n\rproperty_list\030\002 \003(\0132\025.AFMsg.Property"
    "PBData\"t\n\022ObjectRecordPBData\022\037\n\tplayer_i"
    "d\030\001 \002(\0132\014.AFMsg.Ident\022\023\n\013record_name\030\002 \002"
    "(\014\022(\n\013record_list\030\003 \003(\0132\023.AFMsg.RecordPB"
    "Data\"\223\001\n\020ObjectRecordSwap\022\037\n\tplayer_id\030\001"
    " \002(\0132\014.AFMsg.Ident\022\032\n\022origin_record_name"
    "\030\002 \002(\014\022\032\n\022target_record_name\030\003 \001(\014\022\022\n\nro"
    "w_origin\030\004 \002(\005\022\022\n\nrow_target\030\005 \002(\005\"w\n\022Ob"
    "jectRecordAddRow\022\037\n\tplayer_id\030\001 \002(\0132\014.AF"
    "Msg.Ident\022\023\n\013record_name\030\002 \002(\014\022+\n\010row_da"
    "ta\030\003 \003(\0132\031.AFMsg.RecordAddRowStruct\"^\n\022O"
    "bjectRecordRemove\022\037\n\tplayer_id\030\001 \002(\0132\014.A"
    "FMsg.Ident\022\023\n\013record_name\030\002 \002(\014\022\022\n\nremov"
    "e_row\030\003 \003(\005\"G\n\022PlayerPropertyBase\0221\n\022pro"
    "perty_data_list\030\001 \003(\0132\025.AFMsg.PropertyPB"
    "Data\"V\n\020PlayerRecordBase\022\023\n\013record_name\030"
    "\001 \002(\t\022-\n\020record_data_list\030\002 \003(\0132\023.AFMsg."
    "RecordPBData\"@\n\020PlayerRecordList\022,\n\013reco"
    "rd_list\030\001 \003(\0132\027.AFMsg.PlayerRecordBase\"y"
    "\n\nBrocastMsg\022\037\n\tplayer_id\030\001 \002(\0132\014.AFMsg."
    "Ident\022\020\n\010msg_data\030\002 \002(\014\022\016\n\006nMsgID\030\003 \002(\003\022"
    "(\n\022player_Client_list\030\004 \003(\0132\014.AFMsg.Iden"
    "t\"+\n\010Position\022\t\n\001x\030\001 \002(\002\022\t\n\001y\030\002 \002(\002\022\t\n\001z"
    "\030\003 \002(\002\"\213\003\n\nReqCommand\022 \n\ncontrol_id\030\001 \002("
    "\0132\014.AFMsg.Ident\0226\n\ncommand_id\030\002 \002(\0162\".AF"
    "Msg.ReqCommand.EGameCommandType\022\031\n\021comma"
    "nd_str_value\030\003 \001(\014\022\031\n\021command_value_int\030"
    "\004 \001(\003\022\033\n\023command_value_float\030\005 \001(\002\022\031\n\021co"
    "mmand_value_str\030\006 \001(\014\022*\n\024command_value_o"
    "bject\030\007 \001(\0132\014.AFMsg.Ident\022\013\n\003row\030\010 \001(\005\022\013"
    "\n\003col\030\t \001(\005\"o\n\020EGameCommandType\022\027\n\023EGCT_"
    "MODIY_PROPERTY\020\000\022\023\n\017EGCT_MODIY_ITEM\020\001\022\026\n"
    "\022EGCT_CREATE_OBJECT\020\002\022\025\n\021EGCT_ADD_ROLE_E"
    "XP\020\003", 2764);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "AFMsgBase.proto", &protobuf_RegisterTypes);
  Ident::default_instance_ = new Ident();
  Point3D::default_instance_ = new Point3D();
  PropertyPBData::default_instance_ = new PropertyPBData();
  RecordPBData::default_instance_ = new RecordPBData();
  PBData::default_instance_ = new PBData();
  DataListPBData::default_instance_ = new DataListPBData();
  RecordAddRowStruct::default_instance_ = new RecordAddRowStruct();
  ObjectRecordBase::default_instance_ = new ObjectRecordBase();
  ObjectPropertyList::default_instance_ = new ObjectPropertyList();
  MultiObjectPropertyList::default_instance_ = new MultiObjectPropertyList();
  ObjectRecordList::default_instance_ = new ObjectRecordList();
  MultiObjectRecordList::default_instance_ = new MultiObjectRecordList();
  ObjectPropertyPBData::default_instance_ = new ObjectPropertyPBData();
  ObjectRecordPBData::default_instance_ = new ObjectRecordPBData();
  ObjectRecordSwap::default_instance_ = new ObjectRecordSwap();
  ObjectRecordAddRow::default_instance_ = new ObjectRecordAddRow();
  ObjectRecordRemove::default_instance_ = new ObjectRecordRemove();
  PlayerPropertyBase::default_instance_ = new PlayerPropertyBase();
  PlayerRecordBase::default_instance_ = new PlayerRecordBase();
  PlayerRecordList::default_instance_ = new PlayerRecordList();
  BrocastMsg::default_instance_ = new BrocastMsg();
  Position::default_instance_ = new Position();
  ReqCommand::default_instance_ = new ReqCommand();
  Ident::default_instance_->InitAsDefaultInstance();
  Point3D::default_instance_->InitAsDefaultInstance();
  PropertyPBData::default_instance_->InitAsDefaultInstance();
  RecordPBData::default_instance_->InitAsDefaultInstance();
  PBData::default_instance_->InitAsDefaultInstance();
  DataListPBData::default_instance_->InitAsDefaultInstance();
  RecordAddRowStruct::default_instance_->InitAsDefaultInstance();
  ObjectRecordBase::default_instance_->InitAsDefaultInstance();
  ObjectPropertyList::default_instance_->InitAsDefaultInstance();
  MultiObjectPropertyList::default_instance_->InitAsDefaultInstance();
  ObjectRecordList::default_instance_->InitAsDefaultInstance();
  MultiObjectRecordList::default_instance_->InitAsDefaultInstance();
  ObjectPropertyPBData::default_instance_->InitAsDefaultInstance();
  ObjectRecordPBData::default_instance_->InitAsDefaultInstance();
  ObjectRecordSwap::default_instance_->InitAsDefaultInstance();
  ObjectRecordAddRow::default_instance_->InitAsDefaultInstance();
  ObjectRecordRemove::default_instance_->InitAsDefaultInstance();
  PlayerPropertyBase::default_instance_->InitAsDefaultInstance();
  PlayerRecordBase::default_instance_->InitAsDefaultInstance();
  PlayerRecordList::default_instance_->InitAsDefaultInstance();
  BrocastMsg::default_instance_->InitAsDefaultInstance();
  Position::default_instance_->InitAsDefaultInstance();
  ReqCommand::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_AFMsgBase_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_AFMsgBase_2eproto {
  StaticDescriptorInitializer_AFMsgBase_2eproto() {
    protobuf_AddDesc_AFMsgBase_2eproto();
  }
} static_descriptor_initializer_AFMsgBase_2eproto_;

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Ident::kSvridFieldNumber;
const int Ident::kIndexFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Ident::Ident()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:AFMsg.Ident)
}

void Ident::InitAsDefaultInstance() {
}

Ident::Ident(const Ident& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:AFMsg.Ident)
}

void Ident::SharedCtor() {
  _cached_size_ = 0;
  svrid_ = 0;
  index_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Ident::~Ident() {
  // @@protoc_insertion_point(destructor:AFMsg.Ident)
  SharedDtor();
}

void Ident::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Ident::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Ident::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Ident_descriptor_;
}

const Ident& Ident::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_AFMsgBase_2eproto();
  return *default_instance_;
}

Ident* Ident::default_instance_ = NULL;

Ident* Ident::New(::google::protobuf::Arena* arena) const {
  Ident* n = new Ident;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Ident::Clear() {
// @@protoc_insertion_point(message_clear_start:AFMsg.Ident)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(Ident, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<Ident*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(svrid_, index_);

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool Ident::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:AFMsg.Ident)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 svrid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &svrid_)));
          set_has_svrid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_index;
        break;
      }

      // required int32 index = 2;
      case 2: {
        if (tag == 16) {
         parse_index:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &index_)));
          set_has_index();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:AFMsg.Ident)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:AFMsg.Ident)
  return false;
#undef DO_
}

void Ident::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:AFMsg.Ident)
  // required int32 svrid = 1;
  if (has_svrid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->svrid(), output);
  }

  // required int32 index = 2;
  if (has_index()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->index(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:AFMsg.Ident)
}

::google::protobuf::uint8* Ident::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:AFMsg.Ident)
  // required int32 svrid = 1;
  if (has_svrid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->svrid(), target);
  }

  // required int32 index = 2;
  if (has_index()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->index(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AFMsg.Ident)
  return target;
}

int Ident::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:AFMsg.Ident)
  int total_size = 0;

  if (has_svrid()) {
    // required int32 svrid = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->svrid());
  }

  if (has_index()) {
    // required int32 index = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->index());
  }

  return total_size;
}
int Ident::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:AFMsg.Ident)
  int total_size = 0;

  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required int32 svrid = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->svrid());

    // required int32 index = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->index());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Ident::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:AFMsg.Ident)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Ident* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Ident>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:AFMsg.Ident)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:AFMsg.Ident)
    MergeFrom(*source);
  }
}

void Ident::MergeFrom(const Ident& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:AFMsg.Ident)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_svrid()) {
      set_svrid(from.svrid());
    }
    if (from.has_index()) {
      set_index(from.index());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void Ident::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:AFMsg.Ident)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Ident::CopyFrom(const Ident& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:AFMsg.Ident)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Ident::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void Ident::Swap(Ident* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Ident::InternalSwap(Ident* other) {
  std::swap(svrid_, other->svrid_);
  std::swap(index_, other->index_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Ident::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Ident_descriptor_;
  metadata.reflection = Ident_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Ident

// required int32 svrid = 1;
bool Ident::has_svrid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Ident::set_has_svrid() {
  _has_bits_[0] |= 0x00000001u;
}
void Ident::clear_has_svrid() {
  _has_bits_[0] &= ~0x00000001u;
}
void Ident::clear_svrid() {
  svrid_ = 0;
  clear_has_svrid();
}
 ::google::protobuf::int32 Ident::svrid() const {
  // @@protoc_insertion_point(field_get:AFMsg.Ident.svrid)
  return svrid_;
}
 void Ident::set_svrid(::google::protobuf::int32 value) {
  set_has_svrid();
  svrid_ = value;
  // @@protoc_insertion_point(field_set:AFMsg.Ident.svrid)
}

// required int32 index = 2;
bool Ident::has_index() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void Ident::set_has_index() {
  _has_bits_[0] |= 0x00000002u;
}
void Ident::clear_has_index() {
  _has_bits_[0] &= ~0x00000002u;
}
void Ident::clear_index() {
  index_ = 0;
  clear_has_index();
}
 ::google::protobuf::int32 Ident::index() const {
  // @@protoc_insertion_point(field_get:AFMsg.Ident.index)
  return index_;
}
 void Ident::set_index(::google::protobuf::int32 value) {
  set_has_index();
  index_ = value;
  // @@protoc_insertion_point(field_set:AFMsg.Ident.index)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Point3D::kXFieldNumber;
const int Point3D::kYFieldNumber;
const int Point3D::kZFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Point3D::Point3D()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:AFMsg.Point3D)
}

void Point3D::InitAsDefaultInstance() {
}

Point3D::Point3D(const Point3D& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:AFMsg.Point3D)
}

void Point3D::SharedCtor() {
  _cached_size_ = 0;
  x_ = 0;
  y_ = 0;
  z_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Point3D::~Point3D() {
  // @@protoc_insertion_point(destructor:AFMsg.Point3D)
  SharedDtor();
}

void Point3D::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Point3D::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Point3D::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Point3D_descriptor_;
}

const Point3D& Point3D::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_AFMsgBase_2eproto();
  return *default_instance_;
}

Point3D* Point3D::default_instance_ = NULL;

Point3D* Point3D::New(::google::protobuf::Arena* arena) const {
  Point3D* n = new Point3D;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Point3D::Clear() {
// @@protoc_insertion_point(message_clear_start:AFMsg.Point3D)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(Point3D, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<Point3D*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(x_, z_);

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool Point3D::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:AFMsg.Point3D)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required float x = 1;
      case 1: {
        if (tag == 13) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &x_)));
          set_has_x();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(21)) goto parse_y;
        break;
      }

      // required float y = 2;
      case 2: {
        if (tag == 21) {
         parse_y:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &y_)));
          set_has_y();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(29)) goto parse_z;
        break;
      }

      // required float z = 3;
      case 3: {
        if (tag == 29) {
         parse_z:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &z_)));
          set_has_z();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:AFMsg.Point3D)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:AFMsg.Point3D)
  return false;
#undef DO_
}

void Point3D::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:AFMsg.Point3D)
  // required float x = 1;
  if (has_x()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(1, this->x(), output);
  }

  // required float y = 2;
  if (has_y()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->y(), output);
  }

  // required float z = 3;
  if (has_z()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->z(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:AFMsg.Point3D)
}

::google::protobuf::uint8* Point3D::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:AFMsg.Point3D)
  // required float x = 1;
  if (has_x()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(1, this->x(), target);
  }

  // required float y = 2;
  if (has_y()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->y(), target);
  }

  // required float z = 3;
  if (has_z()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->z(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AFMsg.Point3D)
  return target;
}

int Point3D::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:AFMsg.Point3D)
  int total_size = 0;

  if (has_x()) {
    // required float x = 1;
    total_size += 1 + 4;
  }

  if (has_y()) {
    // required float y = 2;
    total_size += 1 + 4;
  }

  if (has_z()) {
    // required float z = 3;
    total_size += 1 + 4;
  }

  return total_size;
}
int Point3D::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:AFMsg.Point3D)
  int total_size = 0;

  if (((_has_bits_[0] & 0x00000007) ^ 0x00000007) == 0) {  // All required fields are present.
    // required float x = 1;
    total_size += 1 + 4;

    // required float y = 2;
    total_size += 1 + 4;

    // required float z = 3;
    total_size += 1 + 4;

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Point3D::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:AFMsg.Point3D)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Point3D* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Point3D>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:AFMsg.Point3D)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:AFMsg.Point3D)
    MergeFrom(*source);
  }
}

void Point3D::MergeFrom(const Point3D& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:AFMsg.Point3D)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_x()) {
      set_x(from.x());
    }
    if (from.has_y()) {
      set_y(from.y());
    }
    if (from.has_z()) {
      set_z(from.z());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void Point3D::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:AFMsg.Point3D)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Point3D::CopyFrom(const Point3D& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:AFMsg.Point3D)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Point3D::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;

  return true;
}

void Point3D::Swap(Point3D* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Point3D::InternalSwap(Point3D* other) {
  std::swap(x_, other->x_);
  std::swap(y_, other->y_);
  std::swap(z_, other->z_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Point3D::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Point3D_descriptor_;
  metadata.reflection = Point3D_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Point3D

// required float x = 1;
bool Point3D::has_x() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Point3D::set_has_x() {
  _has_bits_[0] |= 0x00000001u;
}
void Point3D::clear_has_x() {
  _has_bits_[0] &= ~0x00000001u;
}
void Point3D::clear_x() {
  x_ = 0;
  clear_has_x();
}
 float Point3D::x() const {
  // @@protoc_insertion_point(field_get:AFMsg.Point3D.x)
  return x_;
}
 void Point3D::set_x(float value) {
  set_has_x();
  x_ = value;
  // @@protoc_insertion_point(field_set:AFMsg.Point3D.x)
}

// required float y = 2;
bool Point3D::has_y() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void Point3D::set_has_y() {
  _has_bits_[0] |= 0x00000002u;
}
void Point3D::clear_has_y() {
  _has_bits_[0] &= ~0x00000002u;
}
void Point3D::clear_y() {
  y_ = 0;
  clear_has_y();
}
 float Point3D::y() const {
  // @@protoc_insertion_point(field_get:AFMsg.Point3D.y)
  return y_;
}
 void Point3D::set_y(float value) {
  set_has_y();
  y_ = value;
  // @@protoc_insertion_point(field_set:AFMsg.Point3D.y)
}

// required float z = 3;
bool Point3D::has_z() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void Point3D::set_has_z() {
  _has_bits_[0] |= 0x00000004u;
}
void Point3D::clear_has_z() {
  _has_bits_[0] &= ~0x00000004u;
}
void Point3D::clear_z() {
  z_ = 0;
  clear_has_z();
}
 float Point3D::z() const {
  // @@protoc_insertion_point(field_get:AFMsg.Point3D.z)
  return z_;
}
 void Point3D::set_z(float value) {
  set_has_z();
  z_ = value;
  // @@protoc_insertion_point(field_set:AFMsg.Point3D.z)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PropertyPBData::kPropertyNameFieldNumber;
const int PropertyPBData::kNdataTypeFieldNumber;
const int PropertyPBData::kMbValueFieldNumber;
const int PropertyPBData::kMnValueFieldNumber;
const int PropertyPBData::kMn64ValueFieldNumber;
const int PropertyPBData::kMfValueFieldNumber;
const int PropertyPBData::kMdValueFieldNumber;
const int PropertyPBData::kMstrValueFieldNumber;
const int PropertyPBData::kMpVauleFieldNumber;
const int PropertyPBData::kMpUserDataFieldNumber;
const int PropertyPBData::kMGuidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PropertyPBData::PropertyPBData()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:AFMsg.PropertyPBData)
}

void PropertyPBData::InitAsDefaultInstance() {
  mguid_ = const_cast< ::AFMsg::Ident*>(&::AFMsg::Ident::default_instance());
}

PropertyPBData::PropertyPBData(const PropertyPBData& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:AFMsg.PropertyPBData)
}

void PropertyPBData::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  property_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ndatatype_ = 0;
  mbvalue_ = false;
  mnvalue_ = 0;
  mn64value_ = GOOGLE_LONGLONG(0);
  mfvalue_ = 0;
  mdvalue_ = 0;
  mstrvalue_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mpvaule_ = GOOGLE_LONGLONG(0);
  mpuserdata_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mguid_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PropertyPBData::~PropertyPBData() {
  // @@protoc_insertion_point(destructor:AFMsg.PropertyPBData)
  SharedDtor();
}

void PropertyPBData::SharedDtor() {
  property_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mstrvalue_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mpuserdata_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
    delete mguid_;
  }
}

void PropertyPBData::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PropertyPBData::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PropertyPBData_descriptor_;
}

const PropertyPBData& PropertyPBData::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_AFMsgBase_2eproto();
  return *default_instance_;
}

PropertyPBData* PropertyPBData::default_instance_ = NULL;

PropertyPBData* PropertyPBData::New(::google::protobuf::Arena* arena) const {
  PropertyPBData* n = new PropertyPBData;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PropertyPBData::Clear() {
// @@protoc_insertion_point(message_clear_start:AFMsg.PropertyPBData)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(PropertyPBData, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<PropertyPBData*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  if (_has_bits_[0 / 32] & 255u) {
    ZR_(ndatatype_, mdvalue_);
    if (has_property_name()) {
      property_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_mstrvalue()) {
      mstrvalue_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }
  if (_has_bits_[8 / 32] & 1792u) {
    mpvaule_ = GOOGLE_LONGLONG(0);
    if (has_mpuserdata()) {
      mpuserdata_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_mguid()) {
      if (mguid_ != NULL) mguid_->::AFMsg::Ident::Clear();
    }
  }

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool PropertyPBData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:AFMsg.PropertyPBData)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required bytes property_name = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_property_name()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_ndataType;
        break;
      }

      // required int32 ndataType = 2;
      case 2: {
        if (tag == 16) {
         parse_ndataType:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &ndatatype_)));
          set_has_ndatatype();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_mbValue;
        break;
      }

      // optional bool mbValue = 3;
      case 3: {
        if (tag == 24) {
         parse_mbValue:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &mbvalue_)));
          set_has_mbvalue();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_mnValue;
        break;
      }

      // optional int32 mnValue = 4;
      case 4: {
        if (tag == 32) {
         parse_mnValue:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &mnvalue_)));
          set_has_mnvalue();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_mn64Value;
        break;
      }

      // optional int64 mn64Value = 5;
      case 5: {
        if (tag == 40) {
         parse_mn64Value:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &mn64value_)));
          set_has_mn64value();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(53)) goto parse_mfValue;
        break;
      }

      // optional float mfValue = 6;
      case 6: {
        if (tag == 53) {
         parse_mfValue:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &mfvalue_)));
          set_has_mfvalue();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(57)) goto parse_mdValue;
        break;
      }

      // optional double mdValue = 7;
      case 7: {
        if (tag == 57) {
         parse_mdValue:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &mdvalue_)));
          set_has_mdvalue();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(66)) goto parse_mstrValue;
        break;
      }

      // optional bytes mstrValue = 8;
      case 8: {
        if (tag == 66) {
         parse_mstrValue:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_mstrvalue()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(72)) goto parse_mpVaule;
        break;
      }

      // optional int64 mpVaule = 9;
      case 9: {
        if (tag == 72) {
         parse_mpVaule:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &mpvaule_)));
          set_has_mpvaule();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(82)) goto parse_mpUserData;
        break;
      }

      // optional bytes mpUserData = 10;
      case 10: {
        if (tag == 82) {
         parse_mpUserData:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_mpuserdata()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(90)) goto parse_mGuid;
        break;
      }

      // optional .AFMsg.Ident mGuid = 11;
      case 11: {
        if (tag == 90) {
         parse_mGuid:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_mguid()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:AFMsg.PropertyPBData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:AFMsg.PropertyPBData)
  return false;
#undef DO_
}

void PropertyPBData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:AFMsg.PropertyPBData)
  // required bytes property_name = 1;
  if (has_property_name()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->property_name(), output);
  }

  // required int32 ndataType = 2;
  if (has_ndatatype()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->ndatatype(), output);
  }

  // optional bool mbValue = 3;
  if (has_mbvalue()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->mbvalue(), output);
  }

  // optional int32 mnValue = 4;
  if (has_mnvalue()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->mnvalue(), output);
  }

  // optional int64 mn64Value = 5;
  if (has_mn64value()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(5, this->mn64value(), output);
  }

  // optional float mfValue = 6;
  if (has_mfvalue()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(6, this->mfvalue(), output);
  }

  // optional double mdValue = 7;
  if (has_mdvalue()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(7, this->mdvalue(), output);
  }

  // optional bytes mstrValue = 8;
  if (has_mstrvalue()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      8, this->mstrvalue(), output);
  }

  // optional int64 mpVaule = 9;
  if (has_mpvaule()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(9, this->mpvaule(), output);
  }

  // optional bytes mpUserData = 10;
  if (has_mpuserdata()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      10, this->mpuserdata(), output);
  }

  // optional .AFMsg.Ident mGuid = 11;
  if (has_mguid()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      11, *this->mguid_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:AFMsg.PropertyPBData)
}

::google::protobuf::uint8* PropertyPBData::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:AFMsg.PropertyPBData)
  // required bytes property_name = 1;
  if (has_property_name()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->property_name(), target);
  }

  // required int32 ndataType = 2;
  if (has_ndatatype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->ndatatype(), target);
  }

  // optional bool mbValue = 3;
  if (has_mbvalue()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->mbvalue(), target);
  }

  // optional int32 mnValue = 4;
  if (has_mnvalue()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->mnvalue(), target);
  }

  // optional int64 mn64Value = 5;
  if (has_mn64value()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(5, this->mn64value(), target);
  }

  // optional float mfValue = 6;
  if (has_mfvalue()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(6, this->mfvalue(), target);
  }

  // optional double mdValue = 7;
  if (has_mdvalue()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(7, this->mdvalue(), target);
  }

  // optional bytes mstrValue = 8;
  if (has_mstrvalue()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        8, this->mstrvalue(), target);
  }

  // optional int64 mpVaule = 9;
  if (has_mpvaule()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(9, this->mpvaule(), target);
  }

  // optional bytes mpUserData = 10;
  if (has_mpuserdata()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        10, this->mpuserdata(), target);
  }

  // optional .AFMsg.Ident mGuid = 11;
  if (has_mguid()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        11, *this->mguid_, false, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AFMsg.PropertyPBData)
  return target;
}

int PropertyPBData::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:AFMsg.PropertyPBData)
  int total_size = 0;

  if (has_property_name()) {
    // required bytes property_name = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->property_name());
  }

  if (has_ndatatype()) {
    // required int32 ndataType = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->ndatatype());
  }

  return total_size;
}
int PropertyPBData::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:AFMsg.PropertyPBData)
  int total_size = 0;

  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required bytes property_name = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->property_name());

    // required int32 ndataType = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->ndatatype());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_has_bits_[2 / 32] & 252u) {
    // optional bool mbValue = 3;
    if (has_mbvalue()) {
      total_size += 1 + 1;
    }

    // optional int32 mnValue = 4;
    if (has_mnvalue()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->mnvalue());
    }

    // optional int64 mn64Value = 5;
    if (has_mn64value()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->mn64value());
    }

    // optional float mfValue = 6;
    if (has_mfvalue()) {
      total_size += 1 + 4;
    }

    // optional double mdValue = 7;
    if (has_mdvalue()) {
      total_size += 1 + 8;
    }

    // optional bytes mstrValue = 8;
    if (has_mstrvalue()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->mstrvalue());
    }

  }
  if (_has_bits_[8 / 32] & 1792u) {
    // optional int64 mpVaule = 9;
    if (has_mpvaule()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->mpvaule());
    }

    // optional bytes mpUserData = 10;
    if (has_mpuserdata()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->mpuserdata());
    }

    // optional .AFMsg.Ident mGuid = 11;
    if (has_mguid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->mguid_);
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PropertyPBData::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:AFMsg.PropertyPBData)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const PropertyPBData* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const PropertyPBData>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:AFMsg.PropertyPBData)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:AFMsg.PropertyPBData)
    MergeFrom(*source);
  }
}

void PropertyPBData::MergeFrom(const PropertyPBData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:AFMsg.PropertyPBData)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_property_name()) {
      set_has_property_name();
      property_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.property_name_);
    }
    if (from.has_ndatatype()) {
      set_ndatatype(from.ndatatype());
    }
    if (from.has_mbvalue()) {
      set_mbvalue(from.mbvalue());
    }
    if (from.has_mnvalue()) {
      set_mnvalue(from.mnvalue());
    }
    if (from.has_mn64value()) {
      set_mn64value(from.mn64value());
    }
    if (from.has_mfvalue()) {
      set_mfvalue(from.mfvalue());
    }
    if (from.has_mdvalue()) {
      set_mdvalue(from.mdvalue());
    }
    if (from.has_mstrvalue()) {
      set_has_mstrvalue();
      mstrvalue_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.mstrvalue_);
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_mpvaule()) {
      set_mpvaule(from.mpvaule());
    }
    if (from.has_mpuserdata()) {
      set_has_mpuserdata();
      mpuserdata_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.mpuserdata_);
    }
    if (from.has_mguid()) {
      mutable_mguid()->::AFMsg::Ident::MergeFrom(from.mguid());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void PropertyPBData::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:AFMsg.PropertyPBData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PropertyPBData::CopyFrom(const PropertyPBData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:AFMsg.PropertyPBData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PropertyPBData::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  if (has_mguid()) {
    if (!this->mguid_->IsInitialized()) return false;
  }
  return true;
}

void PropertyPBData::Swap(PropertyPBData* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PropertyPBData::InternalSwap(PropertyPBData* other) {
  property_name_.Swap(&other->property_name_);
  std::swap(ndatatype_, other->ndatatype_);
  std::swap(mbvalue_, other->mbvalue_);
  std::swap(mnvalue_, other->mnvalue_);
  std::swap(mn64value_, other->mn64value_);
  std::swap(mfvalue_, other->mfvalue_);
  std::swap(mdvalue_, other->mdvalue_);
  mstrvalue_.Swap(&other->mstrvalue_);
  std::swap(mpvaule_, other->mpvaule_);
  mpuserdata_.Swap(&other->mpuserdata_);
  std::swap(mguid_, other->mguid_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PropertyPBData::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PropertyPBData_descriptor_;
  metadata.reflection = PropertyPBData_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PropertyPBData

// required bytes property_name = 1;
bool PropertyPBData::has_property_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void PropertyPBData::set_has_property_name() {
  _has_bits_[0] |= 0x00000001u;
}
void PropertyPBData::clear_has_property_name() {
  _has_bits_[0] &= ~0x00000001u;
}
void PropertyPBData::clear_property_name() {
  property_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_property_name();
}
 const ::std::string& PropertyPBData::property_name() const {
  // @@protoc_insertion_point(field_get:AFMsg.PropertyPBData.property_name)
  return property_name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PropertyPBData::set_property_name(const ::std::string& value) {
  set_has_property_name();
  property_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:AFMsg.PropertyPBData.property_name)
}
 void PropertyPBData::set_property_name(const char* value) {
  set_has_property_name();
  property_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:AFMsg.PropertyPBData.property_name)
}
 void PropertyPBData::set_property_name(const void* value, size_t size) {
  set_has_property_name();
  property_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:AFMsg.PropertyPBData.property_name)
}
 ::std::string* PropertyPBData::mutable_property_name() {
  set_has_property_name();
  // @@protoc_insertion_point(field_mutable:AFMsg.PropertyPBData.property_name)
  return property_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* PropertyPBData::release_property_name() {
  // @@protoc_insertion_point(field_release:AFMsg.PropertyPBData.property_name)
  clear_has_property_name();
  return property_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PropertyPBData::set_allocated_property_name(::std::string* property_name) {
  if (property_name != NULL) {
    set_has_property_name();
  } else {
    clear_has_property_name();
  }
  property_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), property_name);
  // @@protoc_insertion_point(field_set_allocated:AFMsg.PropertyPBData.property_name)
}

// required int32 ndataType = 2;
bool PropertyPBData::has_ndatatype() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void PropertyPBData::set_has_ndatatype() {
  _has_bits_[0] |= 0x00000002u;
}
void PropertyPBData::clear_has_ndatatype() {
  _has_bits_[0] &= ~0x00000002u;
}
void PropertyPBData::clear_ndatatype() {
  ndatatype_ = 0;
  clear_has_ndatatype();
}
 ::google::protobuf::int32 PropertyPBData::ndatatype() const {
  // @@protoc_insertion_point(field_get:AFMsg.PropertyPBData.ndataType)
  return ndatatype_;
}
 void PropertyPBData::set_ndatatype(::google::protobuf::int32 value) {
  set_has_ndatatype();
  ndatatype_ = value;
  // @@protoc_insertion_point(field_set:AFMsg.PropertyPBData.ndataType)
}

// optional bool mbValue = 3;
bool PropertyPBData::has_mbvalue() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void PropertyPBData::set_has_mbvalue() {
  _has_bits_[0] |= 0x00000004u;
}
void PropertyPBData::clear_has_mbvalue() {
  _has_bits_[0] &= ~0x00000004u;
}
void PropertyPBData::clear_mbvalue() {
  mbvalue_ = false;
  clear_has_mbvalue();
}
 bool PropertyPBData::mbvalue() const {
  // @@protoc_insertion_point(field_get:AFMsg.PropertyPBData.mbValue)
  return mbvalue_;
}
 void PropertyPBData::set_mbvalue(bool value) {
  set_has_mbvalue();
  mbvalue_ = value;
  // @@protoc_insertion_point(field_set:AFMsg.PropertyPBData.mbValue)
}

// optional int32 mnValue = 4;
bool PropertyPBData::has_mnvalue() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void PropertyPBData::set_has_mnvalue() {
  _has_bits_[0] |= 0x00000008u;
}
void PropertyPBData::clear_has_mnvalue() {
  _has_bits_[0] &= ~0x00000008u;
}
void PropertyPBData::clear_mnvalue() {
  mnvalue_ = 0;
  clear_has_mnvalue();
}
 ::google::protobuf::int32 PropertyPBData::mnvalue() const {
  // @@protoc_insertion_point(field_get:AFMsg.PropertyPBData.mnValue)
  return mnvalue_;
}
 void PropertyPBData::set_mnvalue(::google::protobuf::int32 value) {
  set_has_mnvalue();
  mnvalue_ = value;
  // @@protoc_insertion_point(field_set:AFMsg.PropertyPBData.mnValue)
}

// optional int64 mn64Value = 5;
bool PropertyPBData::has_mn64value() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void PropertyPBData::set_has_mn64value() {
  _has_bits_[0] |= 0x00000010u;
}
void PropertyPBData::clear_has_mn64value() {
  _has_bits_[0] &= ~0x00000010u;
}
void PropertyPBData::clear_mn64value() {
  mn64value_ = GOOGLE_LONGLONG(0);
  clear_has_mn64value();
}
 ::google::protobuf::int64 PropertyPBData::mn64value() const {
  // @@protoc_insertion_point(field_get:AFMsg.PropertyPBData.mn64Value)
  return mn64value_;
}
 void PropertyPBData::set_mn64value(::google::protobuf::int64 value) {
  set_has_mn64value();
  mn64value_ = value;
  // @@protoc_insertion_point(field_set:AFMsg.PropertyPBData.mn64Value)
}

// optional float mfValue = 6;
bool PropertyPBData::has_mfvalue() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void PropertyPBData::set_has_mfvalue() {
  _has_bits_[0] |= 0x00000020u;
}
void PropertyPBData::clear_has_mfvalue() {
  _has_bits_[0] &= ~0x00000020u;
}
void PropertyPBData::clear_mfvalue() {
  mfvalue_ = 0;
  clear_has_mfvalue();
}
 float PropertyPBData::mfvalue() const {
  // @@protoc_insertion_point(field_get:AFMsg.PropertyPBData.mfValue)
  return mfvalue_;
}
 void PropertyPBData::set_mfvalue(float value) {
  set_has_mfvalue();
  mfvalue_ = value;
  // @@protoc_insertion_point(field_set:AFMsg.PropertyPBData.mfValue)
}

// optional double mdValue = 7;
bool PropertyPBData::has_mdvalue() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void PropertyPBData::set_has_mdvalue() {
  _has_bits_[0] |= 0x00000040u;
}
void PropertyPBData::clear_has_mdvalue() {
  _has_bits_[0] &= ~0x00000040u;
}
void PropertyPBData::clear_mdvalue() {
  mdvalue_ = 0;
  clear_has_mdvalue();
}
 double PropertyPBData::mdvalue() const {
  // @@protoc_insertion_point(field_get:AFMsg.PropertyPBData.mdValue)
  return mdvalue_;
}
 void PropertyPBData::set_mdvalue(double value) {
  set_has_mdvalue();
  mdvalue_ = value;
  // @@protoc_insertion_point(field_set:AFMsg.PropertyPBData.mdValue)
}

// optional bytes mstrValue = 8;
bool PropertyPBData::has_mstrvalue() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
void PropertyPBData::set_has_mstrvalue() {
  _has_bits_[0] |= 0x00000080u;
}
void PropertyPBData::clear_has_mstrvalue() {
  _has_bits_[0] &= ~0x00000080u;
}
void PropertyPBData::clear_mstrvalue() {
  mstrvalue_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_mstrvalue();
}
 const ::std::string& PropertyPBData::mstrvalue() const {
  // @@protoc_insertion_point(field_get:AFMsg.PropertyPBData.mstrValue)
  return mstrvalue_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PropertyPBData::set_mstrvalue(const ::std::string& value) {
  set_has_mstrvalue();
  mstrvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:AFMsg.PropertyPBData.mstrValue)
}
 void PropertyPBData::set_mstrvalue(const char* value) {
  set_has_mstrvalue();
  mstrvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:AFMsg.PropertyPBData.mstrValue)
}
 void PropertyPBData::set_mstrvalue(const void* value, size_t size) {
  set_has_mstrvalue();
  mstrvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:AFMsg.PropertyPBData.mstrValue)
}
 ::std::string* PropertyPBData::mutable_mstrvalue() {
  set_has_mstrvalue();
  // @@protoc_insertion_point(field_mutable:AFMsg.PropertyPBData.mstrValue)
  return mstrvalue_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* PropertyPBData::release_mstrvalue() {
  // @@protoc_insertion_point(field_release:AFMsg.PropertyPBData.mstrValue)
  clear_has_mstrvalue();
  return mstrvalue_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PropertyPBData::set_allocated_mstrvalue(::std::string* mstrvalue) {
  if (mstrvalue != NULL) {
    set_has_mstrvalue();
  } else {
    clear_has_mstrvalue();
  }
  mstrvalue_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), mstrvalue);
  // @@protoc_insertion_point(field_set_allocated:AFMsg.PropertyPBData.mstrValue)
}

// optional int64 mpVaule = 9;
bool PropertyPBData::has_mpvaule() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
void PropertyPBData::set_has_mpvaule() {
  _has_bits_[0] |= 0x00000100u;
}
void PropertyPBData::clear_has_mpvaule() {
  _has_bits_[0] &= ~0x00000100u;
}
void PropertyPBData::clear_mpvaule() {
  mpvaule_ = GOOGLE_LONGLONG(0);
  clear_has_mpvaule();
}
 ::google::protobuf::int64 PropertyPBData::mpvaule() const {
  // @@protoc_insertion_point(field_get:AFMsg.PropertyPBData.mpVaule)
  return mpvaule_;
}
 void PropertyPBData::set_mpvaule(::google::protobuf::int64 value) {
  set_has_mpvaule();
  mpvaule_ = value;
  // @@protoc_insertion_point(field_set:AFMsg.PropertyPBData.mpVaule)
}

// optional bytes mpUserData = 10;
bool PropertyPBData::has_mpuserdata() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
void PropertyPBData::set_has_mpuserdata() {
  _has_bits_[0] |= 0x00000200u;
}
void PropertyPBData::clear_has_mpuserdata() {
  _has_bits_[0] &= ~0x00000200u;
}
void PropertyPBData::clear_mpuserdata() {
  mpuserdata_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_mpuserdata();
}
 const ::std::string& PropertyPBData::mpuserdata() const {
  // @@protoc_insertion_point(field_get:AFMsg.PropertyPBData.mpUserData)
  return mpuserdata_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PropertyPBData::set_mpuserdata(const ::std::string& value) {
  set_has_mpuserdata();
  mpuserdata_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:AFMsg.PropertyPBData.mpUserData)
}
 void PropertyPBData::set_mpuserdata(const char* value) {
  set_has_mpuserdata();
  mpuserdata_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:AFMsg.PropertyPBData.mpUserData)
}
 void PropertyPBData::set_mpuserdata(const void* value, size_t size) {
  set_has_mpuserdata();
  mpuserdata_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:AFMsg.PropertyPBData.mpUserData)
}
 ::std::string* PropertyPBData::mutable_mpuserdata() {
  set_has_mpuserdata();
  // @@protoc_insertion_point(field_mutable:AFMsg.PropertyPBData.mpUserData)
  return mpuserdata_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* PropertyPBData::release_mpuserdata() {
  // @@protoc_insertion_point(field_release:AFMsg.PropertyPBData.mpUserData)
  clear_has_mpuserdata();
  return mpuserdata_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PropertyPBData::set_allocated_mpuserdata(::std::string* mpuserdata) {
  if (mpuserdata != NULL) {
    set_has_mpuserdata();
  } else {
    clear_has_mpuserdata();
  }
  mpuserdata_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), mpuserdata);
  // @@protoc_insertion_point(field_set_allocated:AFMsg.PropertyPBData.mpUserData)
}

// optional .AFMsg.Ident mGuid = 11;
bool PropertyPBData::has_mguid() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
void PropertyPBData::set_has_mguid() {
  _has_bits_[0] |= 0x00000400u;
}
void PropertyPBData::clear_has_mguid() {
  _has_bits_[0] &= ~0x00000400u;
}
void PropertyPBData::clear_mguid() {
  if (mguid_ != NULL) mguid_->::AFMsg::Ident::Clear();
  clear_has_mguid();
}
const ::AFMsg::Ident& PropertyPBData::mguid() const {
  // @@protoc_insertion_point(field_get:AFMsg.PropertyPBData.mGuid)
  return mguid_ != NULL ? *mguid_ : *default_instance_->mguid_;
}
::AFMsg::Ident* PropertyPBData::mutable_mguid() {
  set_has_mguid();
  if (mguid_ == NULL) {
    mguid_ = new ::AFMsg::Ident;
  }
  // @@protoc_insertion_point(field_mutable:AFMsg.PropertyPBData.mGuid)
  return mguid_;
}
::AFMsg::Ident* PropertyPBData::release_mguid() {
  // @@protoc_insertion_point(field_release:AFMsg.PropertyPBData.mGuid)
  clear_has_mguid();
  ::AFMsg::Ident* temp = mguid_;
  mguid_ = NULL;
  return temp;
}
void PropertyPBData::set_allocated_mguid(::AFMsg::Ident* mguid) {
  delete mguid_;
  mguid_ = mguid;
  if (mguid) {
    set_has_mguid();
  } else {
    clear_has_mguid();
  }
  // @@protoc_insertion_point(field_set_allocated:AFMsg.PropertyPBData.mGuid)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RecordPBData::kRowFieldNumber;
const int RecordPBData::kColFieldNumber;
const int RecordPBData::kNdataTypeFieldNumber;
const int RecordPBData::kMbValueFieldNumber;
const int RecordPBData::kMnValueFieldNumber;
const int RecordPBData::kMn64ValueFieldNumber;
const int RecordPBData::kMfValueFieldNumber;
const int RecordPBData::kMdValueFieldNumber;
const int RecordPBData::kMstrValueFieldNumber;
const int RecordPBData::kMpVauleFieldNumber;
const int RecordPBData::kMpUserDataFieldNumber;
const int RecordPBData::kMGuidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RecordPBData::RecordPBData()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:AFMsg.RecordPBData)
}

void RecordPBData::InitAsDefaultInstance() {
  mguid_ = const_cast< ::AFMsg::Ident*>(&::AFMsg::Ident::default_instance());
}

RecordPBData::RecordPBData(const RecordPBData& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:AFMsg.RecordPBData)
}

void RecordPBData::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  row_ = 0;
  col_ = 0;
  ndatatype_ = 0;
  mbvalue_ = false;
  mnvalue_ = 0;
  mn64value_ = GOOGLE_LONGLONG(0);
  mfvalue_ = 0;
  mdvalue_ = 0;
  mstrvalue_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mpvaule_ = GOOGLE_LONGLONG(0);
  mpuserdata_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mguid_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

RecordPBData::~RecordPBData() {
  // @@protoc_insertion_point(destructor:AFMsg.RecordPBData)
  SharedDtor();
}

void RecordPBData::SharedDtor() {
  mstrvalue_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mpuserdata_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
    delete mguid_;
  }
}

void RecordPBData::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RecordPBData::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return RecordPBData_descriptor_;
}

const RecordPBData& RecordPBData::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_AFMsgBase_2eproto();
  return *default_instance_;
}

RecordPBData* RecordPBData::default_instance_ = NULL;

RecordPBData* RecordPBData::New(::google::protobuf::Arena* arena) const {
  RecordPBData* n = new RecordPBData;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RecordPBData::Clear() {
// @@protoc_insertion_point(message_clear_start:AFMsg.RecordPBData)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(RecordPBData, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<RecordPBData*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  if (_has_bits_[0 / 32] & 255u) {
    ZR_(row_, mdvalue_);
  }
  if (_has_bits_[8 / 32] & 3840u) {
    if (has_mstrvalue()) {
      mstrvalue_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    mpvaule_ = GOOGLE_LONGLONG(0);
    if (has_mpuserdata()) {
      mpuserdata_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_mguid()) {
      if (mguid_ != NULL) mguid_->::AFMsg::Ident::Clear();
    }
  }

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool RecordPBData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:AFMsg.RecordPBData)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 row = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &row_)));
          set_has_row();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_col;
        break;
      }

      // required int32 col = 2;
      case 2: {
        if (tag == 16) {
         parse_col:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &col_)));
          set_has_col();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_ndataType;
        break;
      }

      // required int32 ndataType = 3;
      case 3: {
        if (tag == 24) {
         parse_ndataType:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &ndatatype_)));
          set_has_ndatatype();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_mbValue;
        break;
      }

      // optional bool mbValue = 4;
      case 4: {
        if (tag == 32) {
         parse_mbValue:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &mbvalue_)));
          set_has_mbvalue();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_mnValue;
        break;
      }

      // optional int32 mnValue = 5;
      case 5: {
        if (tag == 40) {
         parse_mnValue:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &mnvalue_)));
          set_has_mnvalue();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_mn64Value;
        break;
      }

      // optional int64 mn64Value = 6;
      case 6: {
        if (tag == 48) {
         parse_mn64Value:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &mn64value_)));
          set_has_mn64value();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(61)) goto parse_mfValue;
        break;
      }

      // optional float mfValue = 7;
      case 7: {
        if (tag == 61) {
         parse_mfValue:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &mfvalue_)));
          set_has_mfvalue();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(65)) goto parse_mdValue;
        break;
      }

      // optional double mdValue = 8;
      case 8: {
        if (tag == 65) {
         parse_mdValue:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &mdvalue_)));
          set_has_mdvalue();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(74)) goto parse_mstrValue;
        break;
      }

      // optional bytes mstrValue = 9;
      case 9: {
        if (tag == 74) {
         parse_mstrValue:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_mstrvalue()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(80)) goto parse_mpVaule;
        break;
      }

      // optional int64 mpVaule = 10;
      case 10: {
        if (tag == 80) {
         parse_mpVaule:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &mpvaule_)));
          set_has_mpvaule();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(90)) goto parse_mpUserData;
        break;
      }

      // optional bytes mpUserData = 11;
      case 11: {
        if (tag == 90) {
         parse_mpUserData:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_mpuserdata()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(98)) goto parse_mGuid;
        break;
      }

      // optional .AFMsg.Ident mGuid = 12;
      case 12: {
        if (tag == 98) {
         parse_mGuid:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_mguid()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:AFMsg.RecordPBData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:AFMsg.RecordPBData)
  return false;
#undef DO_
}

void RecordPBData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:AFMsg.RecordPBData)
  // required int32 row = 1;
  if (has_row()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->row(), output);
  }

  // required int32 col = 2;
  if (has_col()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->col(), output);
  }

  // required int32 ndataType = 3;
  if (has_ndatatype()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->ndatatype(), output);
  }

  // optional bool mbValue = 4;
  if (has_mbvalue()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->mbvalue(), output);
  }

  // optional int32 mnValue = 5;
  if (has_mnvalue()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->mnvalue(), output);
  }

  // optional int64 mn64Value = 6;
  if (has_mn64value()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(6, this->mn64value(), output);
  }

  // optional float mfValue = 7;
  if (has_mfvalue()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(7, this->mfvalue(), output);
  }

  // optional double mdValue = 8;
  if (has_mdvalue()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(8, this->mdvalue(), output);
  }

  // optional bytes mstrValue = 9;
  if (has_mstrvalue()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      9, this->mstrvalue(), output);
  }

  // optional int64 mpVaule = 10;
  if (has_mpvaule()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(10, this->mpvaule(), output);
  }

  // optional bytes mpUserData = 11;
  if (has_mpuserdata()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      11, this->mpuserdata(), output);
  }

  // optional .AFMsg.Ident mGuid = 12;
  if (has_mguid()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      12, *this->mguid_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:AFMsg.RecordPBData)
}

::google::protobuf::uint8* RecordPBData::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:AFMsg.RecordPBData)
  // required int32 row = 1;
  if (has_row()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->row(), target);
  }

  // required int32 col = 2;
  if (has_col()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->col(), target);
  }

  // required int32 ndataType = 3;
  if (has_ndatatype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->ndatatype(), target);
  }

  // optional bool mbValue = 4;
  if (has_mbvalue()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->mbvalue(), target);
  }

  // optional int32 mnValue = 5;
  if (has_mnvalue()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->mnvalue(), target);
  }

  // optional int64 mn64Value = 6;
  if (has_mn64value()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(6, this->mn64value(), target);
  }

  // optional float mfValue = 7;
  if (has_mfvalue()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(7, this->mfvalue(), target);
  }

  // optional double mdValue = 8;
  if (has_mdvalue()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(8, this->mdvalue(), target);
  }

  // optional bytes mstrValue = 9;
  if (has_mstrvalue()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        9, this->mstrvalue(), target);
  }

  // optional int64 mpVaule = 10;
  if (has_mpvaule()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(10, this->mpvaule(), target);
  }

  // optional bytes mpUserData = 11;
  if (has_mpuserdata()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        11, this->mpuserdata(), target);
  }

  // optional .AFMsg.Ident mGuid = 12;
  if (has_mguid()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        12, *this->mguid_, false, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AFMsg.RecordPBData)
  return target;
}

int RecordPBData::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:AFMsg.RecordPBData)
  int total_size = 0;

  if (has_row()) {
    // required int32 row = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->row());
  }

  if (has_col()) {
    // required int32 col = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->col());
  }

  if (has_ndatatype()) {
    // required int32 ndataType = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->ndatatype());
  }

  return total_size;
}
int RecordPBData::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:AFMsg.RecordPBData)
  int total_size = 0;

  if (((_has_bits_[0] & 0x00000007) ^ 0x00000007) == 0) {  // All required fields are present.
    // required int32 row = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->row());

    // required int32 col = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->col());

    // required int32 ndataType = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->ndatatype());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_has_bits_[3 / 32] & 248u) {
    // optional bool mbValue = 4;
    if (has_mbvalue()) {
      total_size += 1 + 1;
    }

    // optional int32 mnValue = 5;
    if (has_mnvalue()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->mnvalue());
    }

    // optional int64 mn64Value = 6;
    if (has_mn64value()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->mn64value());
    }

    // optional float mfValue = 7;
    if (has_mfvalue()) {
      total_size += 1 + 4;
    }

    // optional double mdValue = 8;
    if (has_mdvalue()) {
      total_size += 1 + 8;
    }

  }
  if (_has_bits_[8 / 32] & 3840u) {
    // optional bytes mstrValue = 9;
    if (has_mstrvalue()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->mstrvalue());
    }

    // optional int64 mpVaule = 10;
    if (has_mpvaule()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->mpvaule());
    }

    // optional bytes mpUserData = 11;
    if (has_mpuserdata()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->mpuserdata());
    }

    // optional .AFMsg.Ident mGuid = 12;
    if (has_mguid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->mguid_);
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RecordPBData::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:AFMsg.RecordPBData)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const RecordPBData* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const RecordPBData>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:AFMsg.RecordPBData)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:AFMsg.RecordPBData)
    MergeFrom(*source);
  }
}

void RecordPBData::MergeFrom(const RecordPBData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:AFMsg.RecordPBData)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_row()) {
      set_row(from.row());
    }
    if (from.has_col()) {
      set_col(from.col());
    }
    if (from.has_ndatatype()) {
      set_ndatatype(from.ndatatype());
    }
    if (from.has_mbvalue()) {
      set_mbvalue(from.mbvalue());
    }
    if (from.has_mnvalue()) {
      set_mnvalue(from.mnvalue());
    }
    if (from.has_mn64value()) {
      set_mn64value(from.mn64value());
    }
    if (from.has_mfvalue()) {
      set_mfvalue(from.mfvalue());
    }
    if (from.has_mdvalue()) {
      set_mdvalue(from.mdvalue());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_mstrvalue()) {
      set_has_mstrvalue();
      mstrvalue_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.mstrvalue_);
    }
    if (from.has_mpvaule()) {
      set_mpvaule(from.mpvaule());
    }
    if (from.has_mpuserdata()) {
      set_has_mpuserdata();
      mpuserdata_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.mpuserdata_);
    }
    if (from.has_mguid()) {
      mutable_mguid()->::AFMsg::Ident::MergeFrom(from.mguid());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void RecordPBData::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:AFMsg.RecordPBData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RecordPBData::CopyFrom(const RecordPBData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:AFMsg.RecordPBData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RecordPBData::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;

  if (has_mguid()) {
    if (!this->mguid_->IsInitialized()) return false;
  }
  return true;
}

void RecordPBData::Swap(RecordPBData* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RecordPBData::InternalSwap(RecordPBData* other) {
  std::swap(row_, other->row_);
  std::swap(col_, other->col_);
  std::swap(ndatatype_, other->ndatatype_);
  std::swap(mbvalue_, other->mbvalue_);
  std::swap(mnvalue_, other->mnvalue_);
  std::swap(mn64value_, other->mn64value_);
  std::swap(mfvalue_, other->mfvalue_);
  std::swap(mdvalue_, other->mdvalue_);
  mstrvalue_.Swap(&other->mstrvalue_);
  std::swap(mpvaule_, other->mpvaule_);
  mpuserdata_.Swap(&other->mpuserdata_);
  std::swap(mguid_, other->mguid_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RecordPBData::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = RecordPBData_descriptor_;
  metadata.reflection = RecordPBData_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// RecordPBData

// required int32 row = 1;
bool RecordPBData::has_row() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void RecordPBData::set_has_row() {
  _has_bits_[0] |= 0x00000001u;
}
void RecordPBData::clear_has_row() {
  _has_bits_[0] &= ~0x00000001u;
}
void RecordPBData::clear_row() {
  row_ = 0;
  clear_has_row();
}
 ::google::protobuf::int32 RecordPBData::row() const {
  // @@protoc_insertion_point(field_get:AFMsg.RecordPBData.row)
  return row_;
}
 void RecordPBData::set_row(::google::protobuf::int32 value) {
  set_has_row();
  row_ = value;
  // @@protoc_insertion_point(field_set:AFMsg.RecordPBData.row)
}

// required int32 col = 2;
bool RecordPBData::has_col() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void RecordPBData::set_has_col() {
  _has_bits_[0] |= 0x00000002u;
}
void RecordPBData::clear_has_col() {
  _has_bits_[0] &= ~0x00000002u;
}
void RecordPBData::clear_col() {
  col_ = 0;
  clear_has_col();
}
 ::google::protobuf::int32 RecordPBData::col() const {
  // @@protoc_insertion_point(field_get:AFMsg.RecordPBData.col)
  return col_;
}
 void RecordPBData::set_col(::google::protobuf::int32 value) {
  set_has_col();
  col_ = value;
  // @@protoc_insertion_point(field_set:AFMsg.RecordPBData.col)
}

// required int32 ndataType = 3;
bool RecordPBData::has_ndatatype() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void RecordPBData::set_has_ndatatype() {
  _has_bits_[0] |= 0x00000004u;
}
void RecordPBData::clear_has_ndatatype() {
  _has_bits_[0] &= ~0x00000004u;
}
void RecordPBData::clear_ndatatype() {
  ndatatype_ = 0;
  clear_has_ndatatype();
}
 ::google::protobuf::int32 RecordPBData::ndatatype() const {
  // @@protoc_insertion_point(field_get:AFMsg.RecordPBData.ndataType)
  return ndatatype_;
}
 void RecordPBData::set_ndatatype(::google::protobuf::int32 value) {
  set_has_ndatatype();
  ndatatype_ = value;
  // @@protoc_insertion_point(field_set:AFMsg.RecordPBData.ndataType)
}

// optional bool mbValue = 4;
bool RecordPBData::has_mbvalue() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void RecordPBData::set_has_mbvalue() {
  _has_bits_[0] |= 0x00000008u;
}
void RecordPBData::clear_has_mbvalue() {
  _has_bits_[0] &= ~0x00000008u;
}
void RecordPBData::clear_mbvalue() {
  mbvalue_ = false;
  clear_has_mbvalue();
}
 bool RecordPBData::mbvalue() const {
  // @@protoc_insertion_point(field_get:AFMsg.RecordPBData.mbValue)
  return mbvalue_;
}
 void RecordPBData::set_mbvalue(bool value) {
  set_has_mbvalue();
  mbvalue_ = value;
  // @@protoc_insertion_point(field_set:AFMsg.RecordPBData.mbValue)
}

// optional int32 mnValue = 5;
bool RecordPBData::has_mnvalue() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void RecordPBData::set_has_mnvalue() {
  _has_bits_[0] |= 0x00000010u;
}
void RecordPBData::clear_has_mnvalue() {
  _has_bits_[0] &= ~0x00000010u;
}
void RecordPBData::clear_mnvalue() {
  mnvalue_ = 0;
  clear_has_mnvalue();
}
 ::google::protobuf::int32 RecordPBData::mnvalue() const {
  // @@protoc_insertion_point(field_get:AFMsg.RecordPBData.mnValue)
  return mnvalue_;
}
 void RecordPBData::set_mnvalue(::google::protobuf::int32 value) {
  set_has_mnvalue();
  mnvalue_ = value;
  // @@protoc_insertion_point(field_set:AFMsg.RecordPBData.mnValue)
}

// optional int64 mn64Value = 6;
bool RecordPBData::has_mn64value() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void RecordPBData::set_has_mn64value() {
  _has_bits_[0] |= 0x00000020u;
}
void RecordPBData::clear_has_mn64value() {
  _has_bits_[0] &= ~0x00000020u;
}
void RecordPBData::clear_mn64value() {
  mn64value_ = GOOGLE_LONGLONG(0);
  clear_has_mn64value();
}
 ::google::protobuf::int64 RecordPBData::mn64value() const {
  // @@protoc_insertion_point(field_get:AFMsg.RecordPBData.mn64Value)
  return mn64value_;
}
 void RecordPBData::set_mn64value(::google::protobuf::int64 value) {
  set_has_mn64value();
  mn64value_ = value;
  // @@protoc_insertion_point(field_set:AFMsg.RecordPBData.mn64Value)
}

// optional float mfValue = 7;
bool RecordPBData::has_mfvalue() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void RecordPBData::set_has_mfvalue() {
  _has_bits_[0] |= 0x00000040u;
}
void RecordPBData::clear_has_mfvalue() {
  _has_bits_[0] &= ~0x00000040u;
}
void RecordPBData::clear_mfvalue() {
  mfvalue_ = 0;
  clear_has_mfvalue();
}
 float RecordPBData::mfvalue() const {
  // @@protoc_insertion_point(field_get:AFMsg.RecordPBData.mfValue)
  return mfvalue_;
}
 void RecordPBData::set_mfvalue(float value) {
  set_has_mfvalue();
  mfvalue_ = value;
  // @@protoc_insertion_point(field_set:AFMsg.RecordPBData.mfValue)
}

// optional double mdValue = 8;
bool RecordPBData::has_mdvalue() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
void RecordPBData::set_has_mdvalue() {
  _has_bits_[0] |= 0x00000080u;
}
void RecordPBData::clear_has_mdvalue() {
  _has_bits_[0] &= ~0x00000080u;
}
void RecordPBData::clear_mdvalue() {
  mdvalue_ = 0;
  clear_has_mdvalue();
}
 double RecordPBData::mdvalue() const {
  // @@protoc_insertion_point(field_get:AFMsg.RecordPBData.mdValue)
  return mdvalue_;
}
 void RecordPBData::set_mdvalue(double value) {
  set_has_mdvalue();
  mdvalue_ = value;
  // @@protoc_insertion_point(field_set:AFMsg.RecordPBData.mdValue)
}

// optional bytes mstrValue = 9;
bool RecordPBData::has_mstrvalue() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
void RecordPBData::set_has_mstrvalue() {
  _has_bits_[0] |= 0x00000100u;
}
void RecordPBData::clear_has_mstrvalue() {
  _has_bits_[0] &= ~0x00000100u;
}
void RecordPBData::clear_mstrvalue() {
  mstrvalue_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_mstrvalue();
}
 const ::std::string& RecordPBData::mstrvalue() const {
  // @@protoc_insertion_point(field_get:AFMsg.RecordPBData.mstrValue)
  return mstrvalue_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void RecordPBData::set_mstrvalue(const ::std::string& value) {
  set_has_mstrvalue();
  mstrvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:AFMsg.RecordPBData.mstrValue)
}
 void RecordPBData::set_mstrvalue(const char* value) {
  set_has_mstrvalue();
  mstrvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:AFMsg.RecordPBData.mstrValue)
}
 void RecordPBData::set_mstrvalue(const void* value, size_t size) {
  set_has_mstrvalue();
  mstrvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:AFMsg.RecordPBData.mstrValue)
}
 ::std::string* RecordPBData::mutable_mstrvalue() {
  set_has_mstrvalue();
  // @@protoc_insertion_point(field_mutable:AFMsg.RecordPBData.mstrValue)
  return mstrvalue_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* RecordPBData::release_mstrvalue() {
  // @@protoc_insertion_point(field_release:AFMsg.RecordPBData.mstrValue)
  clear_has_mstrvalue();
  return mstrvalue_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void RecordPBData::set_allocated_mstrvalue(::std::string* mstrvalue) {
  if (mstrvalue != NULL) {
    set_has_mstrvalue();
  } else {
    clear_has_mstrvalue();
  }
  mstrvalue_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), mstrvalue);
  // @@protoc_insertion_point(field_set_allocated:AFMsg.RecordPBData.mstrValue)
}

// optional int64 mpVaule = 10;
bool RecordPBData::has_mpvaule() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
void RecordPBData::set_has_mpvaule() {
  _has_bits_[0] |= 0x00000200u;
}
void RecordPBData::clear_has_mpvaule() {
  _has_bits_[0] &= ~0x00000200u;
}
void RecordPBData::clear_mpvaule() {
  mpvaule_ = GOOGLE_LONGLONG(0);
  clear_has_mpvaule();
}
 ::google::protobuf::int64 RecordPBData::mpvaule() const {
  // @@protoc_insertion_point(field_get:AFMsg.RecordPBData.mpVaule)
  return mpvaule_;
}
 void RecordPBData::set_mpvaule(::google::protobuf::int64 value) {
  set_has_mpvaule();
  mpvaule_ = value;
  // @@protoc_insertion_point(field_set:AFMsg.RecordPBData.mpVaule)
}

// optional bytes mpUserData = 11;
bool RecordPBData::has_mpuserdata() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
void RecordPBData::set_has_mpuserdata() {
  _has_bits_[0] |= 0x00000400u;
}
void RecordPBData::clear_has_mpuserdata() {
  _has_bits_[0] &= ~0x00000400u;
}
void RecordPBData::clear_mpuserdata() {
  mpuserdata_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_mpuserdata();
}
 const ::std::string& RecordPBData::mpuserdata() const {
  // @@protoc_insertion_point(field_get:AFMsg.RecordPBData.mpUserData)
  return mpuserdata_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void RecordPBData::set_mpuserdata(const ::std::string& value) {
  set_has_mpuserdata();
  mpuserdata_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:AFMsg.RecordPBData.mpUserData)
}
 void RecordPBData::set_mpuserdata(const char* value) {
  set_has_mpuserdata();
  mpuserdata_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:AFMsg.RecordPBData.mpUserData)
}
 void RecordPBData::set_mpuserdata(const void* value, size_t size) {
  set_has_mpuserdata();
  mpuserdata_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:AFMsg.RecordPBData.mpUserData)
}
 ::std::string* RecordPBData::mutable_mpuserdata() {
  set_has_mpuserdata();
  // @@protoc_insertion_point(field_mutable:AFMsg.RecordPBData.mpUserData)
  return mpuserdata_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* RecordPBData::release_mpuserdata() {
  // @@protoc_insertion_point(field_release:AFMsg.RecordPBData.mpUserData)
  clear_has_mpuserdata();
  return mpuserdata_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void RecordPBData::set_allocated_mpuserdata(::std::string* mpuserdata) {
  if (mpuserdata != NULL) {
    set_has_mpuserdata();
  } else {
    clear_has_mpuserdata();
  }
  mpuserdata_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), mpuserdata);
  // @@protoc_insertion_point(field_set_allocated:AFMsg.RecordPBData.mpUserData)
}

// optional .AFMsg.Ident mGuid = 12;
bool RecordPBData::has_mguid() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
void RecordPBData::set_has_mguid() {
  _has_bits_[0] |= 0x00000800u;
}
void RecordPBData::clear_has_mguid() {
  _has_bits_[0] &= ~0x00000800u;
}
void RecordPBData::clear_mguid() {
  if (mguid_ != NULL) mguid_->::AFMsg::Ident::Clear();
  clear_has_mguid();
}
const ::AFMsg::Ident& RecordPBData::mguid() const {
  // @@protoc_insertion_point(field_get:AFMsg.RecordPBData.mGuid)
  return mguid_ != NULL ? *mguid_ : *default_instance_->mguid_;
}
::AFMsg::Ident* RecordPBData::mutable_mguid() {
  set_has_mguid();
  if (mguid_ == NULL) {
    mguid_ = new ::AFMsg::Ident;
  }
  // @@protoc_insertion_point(field_mutable:AFMsg.RecordPBData.mGuid)
  return mguid_;
}
::AFMsg::Ident* RecordPBData::release_mguid() {
  // @@protoc_insertion_point(field_release:AFMsg.RecordPBData.mGuid)
  clear_has_mguid();
  ::AFMsg::Ident* temp = mguid_;
  mguid_ = NULL;
  return temp;
}
void RecordPBData::set_allocated_mguid(::AFMsg::Ident* mguid) {
  delete mguid_;
  mguid_ = mguid;
  if (mguid) {
    set_has_mguid();
  } else {
    clear_has_mguid();
  }
  // @@protoc_insertion_point(field_set_allocated:AFMsg.RecordPBData.mGuid)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PBData::kNdataTypeFieldNumber;
const int PBData::kMbValueFieldNumber;
const int PBData::kMnValueFieldNumber;
const int PBData::kMn64ValueFieldNumber;
const int PBData::kMfValueFieldNumber;
const int PBData::kMdValueFieldNumber;
const int PBData::kMstrValueFieldNumber;
const int PBData::kMpVauleFieldNumber;
const int PBData::kMpUserDataFieldNumber;
const int PBData::kMGuidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PBData::PBData()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:AFMsg.PBData)
}

void PBData::InitAsDefaultInstance() {
  mguid_ = const_cast< ::AFMsg::Ident*>(&::AFMsg::Ident::default_instance());
}

PBData::PBData(const PBData& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:AFMsg.PBData)
}

void PBData::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  ndatatype_ = 0;
  mbvalue_ = false;
  mnvalue_ = 0;
  mn64value_ = GOOGLE_LONGLONG(0);
  mfvalue_ = 0;
  mdvalue_ = 0;
  mstrvalue_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mpvaule_ = GOOGLE_LONGLONG(0);
  mpuserdata_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mguid_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PBData::~PBData() {
  // @@protoc_insertion_point(destructor:AFMsg.PBData)
  SharedDtor();
}

void PBData::SharedDtor() {
  mstrvalue_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mpuserdata_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
    delete mguid_;
  }
}

void PBData::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PBData::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PBData_descriptor_;
}

const PBData& PBData::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_AFMsgBase_2eproto();
  return *default_instance_;
}

PBData* PBData::default_instance_ = NULL;

PBData* PBData::New(::google::protobuf::Arena* arena) const {
  PBData* n = new PBData;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PBData::Clear() {
// @@protoc_insertion_point(message_clear_start:AFMsg.PBData)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(PBData, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<PBData*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  if (_has_bits_[0 / 32] & 255u) {
    ZR_(ndatatype_, mdvalue_);
    if (has_mstrvalue()) {
      mstrvalue_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    mpvaule_ = GOOGLE_LONGLONG(0);
  }
  if (_has_bits_[8 / 32] & 768u) {
    if (has_mpuserdata()) {
      mpuserdata_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_mguid()) {
      if (mguid_ != NULL) mguid_->::AFMsg::Ident::Clear();
    }
  }

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool PBData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:AFMsg.PBData)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 ndataType = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &ndatatype_)));
          set_has_ndatatype();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_mbValue;
        break;
      }

      // optional bool mbValue = 2;
      case 2: {
        if (tag == 16) {
         parse_mbValue:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &mbvalue_)));
          set_has_mbvalue();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_mnValue;
        break;
      }

      // optional int32 mnValue = 3;
      case 3: {
        if (tag == 24) {
         parse_mnValue:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &mnvalue_)));
          set_has_mnvalue();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_mn64Value;
        break;
      }

      // optional int64 mn64Value = 4;
      case 4: {
        if (tag == 32) {
         parse_mn64Value:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &mn64value_)));
          set_has_mn64value();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(45)) goto parse_mfValue;
        break;
      }

      // optional float mfValue = 5;
      case 5: {
        if (tag == 45) {
         parse_mfValue:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &mfvalue_)));
          set_has_mfvalue();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(49)) goto parse_mdValue;
        break;
      }

      // optional double mdValue = 6;
      case 6: {
        if (tag == 49) {
         parse_mdValue:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &mdvalue_)));
          set_has_mdvalue();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_mstrValue;
        break;
      }

      // optional bytes mstrValue = 7;
      case 7: {
        if (tag == 58) {
         parse_mstrValue:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_mstrvalue()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(64)) goto parse_mpVaule;
        break;
      }

      // optional int64 mpVaule = 8;
      case 8: {
        if (tag == 64) {
         parse_mpVaule:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &mpvaule_)));
          set_has_mpvaule();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(74)) goto parse_mpUserData;
        break;
      }

      // optional bytes mpUserData = 9;
      case 9: {
        if (tag == 74) {
         parse_mpUserData:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_mpuserdata()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(82)) goto parse_mGuid;
        break;
      }

      // optional .AFMsg.Ident mGuid = 10;
      case 10: {
        if (tag == 82) {
         parse_mGuid:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_mguid()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:AFMsg.PBData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:AFMsg.PBData)
  return false;
#undef DO_
}

void PBData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:AFMsg.PBData)
  // required int32 ndataType = 1;
  if (has_ndatatype()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->ndatatype(), output);
  }

  // optional bool mbValue = 2;
  if (has_mbvalue()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->mbvalue(), output);
  }

  // optional int32 mnValue = 3;
  if (has_mnvalue()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->mnvalue(), output);
  }

  // optional int64 mn64Value = 4;
  if (has_mn64value()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(4, this->mn64value(), output);
  }

  // optional float mfValue = 5;
  if (has_mfvalue()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(5, this->mfvalue(), output);
  }

  // optional double mdValue = 6;
  if (has_mdvalue()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(6, this->mdvalue(), output);
  }

  // optional bytes mstrValue = 7;
  if (has_mstrvalue()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      7, this->mstrvalue(), output);
  }

  // optional int64 mpVaule = 8;
  if (has_mpvaule()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(8, this->mpvaule(), output);
  }

  // optional bytes mpUserData = 9;
  if (has_mpuserdata()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      9, this->mpuserdata(), output);
  }

  // optional .AFMsg.Ident mGuid = 10;
  if (has_mguid()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10, *this->mguid_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:AFMsg.PBData)
}

::google::protobuf::uint8* PBData::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:AFMsg.PBData)
  // required int32 ndataType = 1;
  if (has_ndatatype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->ndatatype(), target);
  }

  // optional bool mbValue = 2;
  if (has_mbvalue()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->mbvalue(), target);
  }

  // optional int32 mnValue = 3;
  if (has_mnvalue()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->mnvalue(), target);
  }

  // optional int64 mn64Value = 4;
  if (has_mn64value()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(4, this->mn64value(), target);
  }

  // optional float mfValue = 5;
  if (has_mfvalue()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(5, this->mfvalue(), target);
  }

  // optional double mdValue = 6;
  if (has_mdvalue()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(6, this->mdvalue(), target);
  }

  // optional bytes mstrValue = 7;
  if (has_mstrvalue()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        7, this->mstrvalue(), target);
  }

  // optional int64 mpVaule = 8;
  if (has_mpvaule()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(8, this->mpvaule(), target);
  }

  // optional bytes mpUserData = 9;
  if (has_mpuserdata()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        9, this->mpuserdata(), target);
  }

  // optional .AFMsg.Ident mGuid = 10;
  if (has_mguid()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        10, *this->mguid_, false, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AFMsg.PBData)
  return target;
}

int PBData::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:AFMsg.PBData)
  int total_size = 0;

  // required int32 ndataType = 1;
  if (has_ndatatype()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->ndatatype());
  }
  if (_has_bits_[1 / 32] & 254u) {
    // optional bool mbValue = 2;
    if (has_mbvalue()) {
      total_size += 1 + 1;
    }

    // optional int32 mnValue = 3;
    if (has_mnvalue()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->mnvalue());
    }

    // optional int64 mn64Value = 4;
    if (has_mn64value()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->mn64value());
    }

    // optional float mfValue = 5;
    if (has_mfvalue()) {
      total_size += 1 + 4;
    }

    // optional double mdValue = 6;
    if (has_mdvalue()) {
      total_size += 1 + 8;
    }

    // optional bytes mstrValue = 7;
    if (has_mstrvalue()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->mstrvalue());
    }

    // optional int64 mpVaule = 8;
    if (has_mpvaule()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->mpvaule());
    }

  }
  if (_has_bits_[8 / 32] & 768u) {
    // optional bytes mpUserData = 9;
    if (has_mpuserdata()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->mpuserdata());
    }

    // optional .AFMsg.Ident mGuid = 10;
    if (has_mguid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->mguid_);
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PBData::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:AFMsg.PBData)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const PBData* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const PBData>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:AFMsg.PBData)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:AFMsg.PBData)
    MergeFrom(*source);
  }
}

void PBData::MergeFrom(const PBData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:AFMsg.PBData)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_ndatatype()) {
      set_ndatatype(from.ndatatype());
    }
    if (from.has_mbvalue()) {
      set_mbvalue(from.mbvalue());
    }
    if (from.has_mnvalue()) {
      set_mnvalue(from.mnvalue());
    }
    if (from.has_mn64value()) {
      set_mn64value(from.mn64value());
    }
    if (from.has_mfvalue()) {
      set_mfvalue(from.mfvalue());
    }
    if (from.has_mdvalue()) {
      set_mdvalue(from.mdvalue());
    }
    if (from.has_mstrvalue()) {
      set_has_mstrvalue();
      mstrvalue_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.mstrvalue_);
    }
    if (from.has_mpvaule()) {
      set_mpvaule(from.mpvaule());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_mpuserdata()) {
      set_has_mpuserdata();
      mpuserdata_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.mpuserdata_);
    }
    if (from.has_mguid()) {
      mutable_mguid()->::AFMsg::Ident::MergeFrom(from.mguid());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void PBData::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:AFMsg.PBData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PBData::CopyFrom(const PBData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:AFMsg.PBData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PBData::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  if (has_mguid()) {
    if (!this->mguid_->IsInitialized()) return false;
  }
  return true;
}

void PBData::Swap(PBData* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PBData::InternalSwap(PBData* other) {
  std::swap(ndatatype_, other->ndatatype_);
  std::swap(mbvalue_, other->mbvalue_);
  std::swap(mnvalue_, other->mnvalue_);
  std::swap(mn64value_, other->mn64value_);
  std::swap(mfvalue_, other->mfvalue_);
  std::swap(mdvalue_, other->mdvalue_);
  mstrvalue_.Swap(&other->mstrvalue_);
  std::swap(mpvaule_, other->mpvaule_);
  mpuserdata_.Swap(&other->mpuserdata_);
  std::swap(mguid_, other->mguid_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PBData::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PBData_descriptor_;
  metadata.reflection = PBData_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PBData

// required int32 ndataType = 1;
bool PBData::has_ndatatype() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void PBData::set_has_ndatatype() {
  _has_bits_[0] |= 0x00000001u;
}
void PBData::clear_has_ndatatype() {
  _has_bits_[0] &= ~0x00000001u;
}
void PBData::clear_ndatatype() {
  ndatatype_ = 0;
  clear_has_ndatatype();
}
 ::google::protobuf::int32 PBData::ndatatype() const {
  // @@protoc_insertion_point(field_get:AFMsg.PBData.ndataType)
  return ndatatype_;
}
 void PBData::set_ndatatype(::google::protobuf::int32 value) {
  set_has_ndatatype();
  ndatatype_ = value;
  // @@protoc_insertion_point(field_set:AFMsg.PBData.ndataType)
}

// optional bool mbValue = 2;
bool PBData::has_mbvalue() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void PBData::set_has_mbvalue() {
  _has_bits_[0] |= 0x00000002u;
}
void PBData::clear_has_mbvalue() {
  _has_bits_[0] &= ~0x00000002u;
}
void PBData::clear_mbvalue() {
  mbvalue_ = false;
  clear_has_mbvalue();
}
 bool PBData::mbvalue() const {
  // @@protoc_insertion_point(field_get:AFMsg.PBData.mbValue)
  return mbvalue_;
}
 void PBData::set_mbvalue(bool value) {
  set_has_mbvalue();
  mbvalue_ = value;
  // @@protoc_insertion_point(field_set:AFMsg.PBData.mbValue)
}

// optional int32 mnValue = 3;
bool PBData::has_mnvalue() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void PBData::set_has_mnvalue() {
  _has_bits_[0] |= 0x00000004u;
}
void PBData::clear_has_mnvalue() {
  _has_bits_[0] &= ~0x00000004u;
}
void PBData::clear_mnvalue() {
  mnvalue_ = 0;
  clear_has_mnvalue();
}
 ::google::protobuf::int32 PBData::mnvalue() const {
  // @@protoc_insertion_point(field_get:AFMsg.PBData.mnValue)
  return mnvalue_;
}
 void PBData::set_mnvalue(::google::protobuf::int32 value) {
  set_has_mnvalue();
  mnvalue_ = value;
  // @@protoc_insertion_point(field_set:AFMsg.PBData.mnValue)
}

// optional int64 mn64Value = 4;
bool PBData::has_mn64value() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void PBData::set_has_mn64value() {
  _has_bits_[0] |= 0x00000008u;
}
void PBData::clear_has_mn64value() {
  _has_bits_[0] &= ~0x00000008u;
}
void PBData::clear_mn64value() {
  mn64value_ = GOOGLE_LONGLONG(0);
  clear_has_mn64value();
}
 ::google::protobuf::int64 PBData::mn64value() const {
  // @@protoc_insertion_point(field_get:AFMsg.PBData.mn64Value)
  return mn64value_;
}
 void PBData::set_mn64value(::google::protobuf::int64 value) {
  set_has_mn64value();
  mn64value_ = value;
  // @@protoc_insertion_point(field_set:AFMsg.PBData.mn64Value)
}

// optional float mfValue = 5;
bool PBData::has_mfvalue() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void PBData::set_has_mfvalue() {
  _has_bits_[0] |= 0x00000010u;
}
void PBData::clear_has_mfvalue() {
  _has_bits_[0] &= ~0x00000010u;
}
void PBData::clear_mfvalue() {
  mfvalue_ = 0;
  clear_has_mfvalue();
}
 float PBData::mfvalue() const {
  // @@protoc_insertion_point(field_get:AFMsg.PBData.mfValue)
  return mfvalue_;
}
 void PBData::set_mfvalue(float value) {
  set_has_mfvalue();
  mfvalue_ = value;
  // @@protoc_insertion_point(field_set:AFMsg.PBData.mfValue)
}

// optional double mdValue = 6;
bool PBData::has_mdvalue() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void PBData::set_has_mdvalue() {
  _has_bits_[0] |= 0x00000020u;
}
void PBData::clear_has_mdvalue() {
  _has_bits_[0] &= ~0x00000020u;
}
void PBData::clear_mdvalue() {
  mdvalue_ = 0;
  clear_has_mdvalue();
}
 double PBData::mdvalue() const {
  // @@protoc_insertion_point(field_get:AFMsg.PBData.mdValue)
  return mdvalue_;
}
 void PBData::set_mdvalue(double value) {
  set_has_mdvalue();
  mdvalue_ = value;
  // @@protoc_insertion_point(field_set:AFMsg.PBData.mdValue)
}

// optional bytes mstrValue = 7;
bool PBData::has_mstrvalue() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void PBData::set_has_mstrvalue() {
  _has_bits_[0] |= 0x00000040u;
}
void PBData::clear_has_mstrvalue() {
  _has_bits_[0] &= ~0x00000040u;
}
void PBData::clear_mstrvalue() {
  mstrvalue_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_mstrvalue();
}
 const ::std::string& PBData::mstrvalue() const {
  // @@protoc_insertion_point(field_get:AFMsg.PBData.mstrValue)
  return mstrvalue_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PBData::set_mstrvalue(const ::std::string& value) {
  set_has_mstrvalue();
  mstrvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:AFMsg.PBData.mstrValue)
}
 void PBData::set_mstrvalue(const char* value) {
  set_has_mstrvalue();
  mstrvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:AFMsg.PBData.mstrValue)
}
 void PBData::set_mstrvalue(const void* value, size_t size) {
  set_has_mstrvalue();
  mstrvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:AFMsg.PBData.mstrValue)
}
 ::std::string* PBData::mutable_mstrvalue() {
  set_has_mstrvalue();
  // @@protoc_insertion_point(field_mutable:AFMsg.PBData.mstrValue)
  return mstrvalue_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* PBData::release_mstrvalue() {
  // @@protoc_insertion_point(field_release:AFMsg.PBData.mstrValue)
  clear_has_mstrvalue();
  return mstrvalue_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PBData::set_allocated_mstrvalue(::std::string* mstrvalue) {
  if (mstrvalue != NULL) {
    set_has_mstrvalue();
  } else {
    clear_has_mstrvalue();
  }
  mstrvalue_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), mstrvalue);
  // @@protoc_insertion_point(field_set_allocated:AFMsg.PBData.mstrValue)
}

// optional int64 mpVaule = 8;
bool PBData::has_mpvaule() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
void PBData::set_has_mpvaule() {
  _has_bits_[0] |= 0x00000080u;
}
void PBData::clear_has_mpvaule() {
  _has_bits_[0] &= ~0x00000080u;
}
void PBData::clear_mpvaule() {
  mpvaule_ = GOOGLE_LONGLONG(0);
  clear_has_mpvaule();
}
 ::google::protobuf::int64 PBData::mpvaule() const {
  // @@protoc_insertion_point(field_get:AFMsg.PBData.mpVaule)
  return mpvaule_;
}
 void PBData::set_mpvaule(::google::protobuf::int64 value) {
  set_has_mpvaule();
  mpvaule_ = value;
  // @@protoc_insertion_point(field_set:AFMsg.PBData.mpVaule)
}

// optional bytes mpUserData = 9;
bool PBData::has_mpuserdata() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
void PBData::set_has_mpuserdata() {
  _has_bits_[0] |= 0x00000100u;
}
void PBData::clear_has_mpuserdata() {
  _has_bits_[0] &= ~0x00000100u;
}
void PBData::clear_mpuserdata() {
  mpuserdata_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_mpuserdata();
}
 const ::std::string& PBData::mpuserdata() const {
  // @@protoc_insertion_point(field_get:AFMsg.PBData.mpUserData)
  return mpuserdata_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PBData::set_mpuserdata(const ::std::string& value) {
  set_has_mpuserdata();
  mpuserdata_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:AFMsg.PBData.mpUserData)
}
 void PBData::set_mpuserdata(const char* value) {
  set_has_mpuserdata();
  mpuserdata_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:AFMsg.PBData.mpUserData)
}
 void PBData::set_mpuserdata(const void* value, size_t size) {
  set_has_mpuserdata();
  mpuserdata_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:AFMsg.PBData.mpUserData)
}
 ::std::string* PBData::mutable_mpuserdata() {
  set_has_mpuserdata();
  // @@protoc_insertion_point(field_mutable:AFMsg.PBData.mpUserData)
  return mpuserdata_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* PBData::release_mpuserdata() {
  // @@protoc_insertion_point(field_release:AFMsg.PBData.mpUserData)
  clear_has_mpuserdata();
  return mpuserdata_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PBData::set_allocated_mpuserdata(::std::string* mpuserdata) {
  if (mpuserdata != NULL) {
    set_has_mpuserdata();
  } else {
    clear_has_mpuserdata();
  }
  mpuserdata_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), mpuserdata);
  // @@protoc_insertion_point(field_set_allocated:AFMsg.PBData.mpUserData)
}

// optional .AFMsg.Ident mGuid = 10;
bool PBData::has_mguid() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
void PBData::set_has_mguid() {
  _has_bits_[0] |= 0x00000200u;
}
void PBData::clear_has_mguid() {
  _has_bits_[0] &= ~0x00000200u;
}
void PBData::clear_mguid() {
  if (mguid_ != NULL) mguid_->::AFMsg::Ident::Clear();
  clear_has_mguid();
}
const ::AFMsg::Ident& PBData::mguid() const {
  // @@protoc_insertion_point(field_get:AFMsg.PBData.mGuid)
  return mguid_ != NULL ? *mguid_ : *default_instance_->mguid_;
}
::AFMsg::Ident* PBData::mutable_mguid() {
  set_has_mguid();
  if (mguid_ == NULL) {
    mguid_ = new ::AFMsg::Ident;
  }
  // @@protoc_insertion_point(field_mutable:AFMsg.PBData.mGuid)
  return mguid_;
}
::AFMsg::Ident* PBData::release_mguid() {
  // @@protoc_insertion_point(field_release:AFMsg.PBData.mGuid)
  clear_has_mguid();
  ::AFMsg::Ident* temp = mguid_;
  mguid_ = NULL;
  return temp;
}
void PBData::set_allocated_mguid(::AFMsg::Ident* mguid) {
  delete mguid_;
  mguid_ = mguid;
  if (mguid) {
    set_has_mguid();
  } else {
    clear_has_mguid();
  }
  // @@protoc_insertion_point(field_set_allocated:AFMsg.PBData.mGuid)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DataListPBData::kDataListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DataListPBData::DataListPBData()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:AFMsg.DataListPBData)
}

void DataListPBData::InitAsDefaultInstance() {
}

DataListPBData::DataListPBData(const DataListPBData& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:AFMsg.DataListPBData)
}

void DataListPBData::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

DataListPBData::~DataListPBData() {
  // @@protoc_insertion_point(destructor:AFMsg.DataListPBData)
  SharedDtor();
}

void DataListPBData::SharedDtor() {
  if (this != default_instance_) {
  }
}

void DataListPBData::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DataListPBData::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DataListPBData_descriptor_;
}

const DataListPBData& DataListPBData::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_AFMsgBase_2eproto();
  return *default_instance_;
}

DataListPBData* DataListPBData::default_instance_ = NULL;

DataListPBData* DataListPBData::New(::google::protobuf::Arena* arena) const {
  DataListPBData* n = new DataListPBData;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DataListPBData::Clear() {
// @@protoc_insertion_point(message_clear_start:AFMsg.DataListPBData)
  data_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool DataListPBData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:AFMsg.DataListPBData)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .AFMsg.PBData data_list = 1;
      case 1: {
        if (tag == 10) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_data_list:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_data_list()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_loop_data_list;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:AFMsg.DataListPBData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:AFMsg.DataListPBData)
  return false;
#undef DO_
}

void DataListPBData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:AFMsg.DataListPBData)
  // repeated .AFMsg.PBData data_list = 1;
  for (unsigned int i = 0, n = this->data_list_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->data_list(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:AFMsg.DataListPBData)
}

::google::protobuf::uint8* DataListPBData::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:AFMsg.DataListPBData)
  // repeated .AFMsg.PBData data_list = 1;
  for (unsigned int i = 0, n = this->data_list_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->data_list(i), false, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AFMsg.DataListPBData)
  return target;
}

int DataListPBData::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:AFMsg.DataListPBData)
  int total_size = 0;

  // repeated .AFMsg.PBData data_list = 1;
  total_size += 1 * this->data_list_size();
  for (int i = 0; i < this->data_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->data_list(i));
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DataListPBData::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:AFMsg.DataListPBData)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const DataListPBData* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const DataListPBData>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:AFMsg.DataListPBData)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:AFMsg.DataListPBData)
    MergeFrom(*source);
  }
}

void DataListPBData::MergeFrom(const DataListPBData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:AFMsg.DataListPBData)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  data_list_.MergeFrom(from.data_list_);
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void DataListPBData::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:AFMsg.DataListPBData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DataListPBData::CopyFrom(const DataListPBData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:AFMsg.DataListPBData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DataListPBData::IsInitialized() const {

  if (!::google::protobuf::internal::AllAreInitialized(this->data_list())) return false;
  return true;
}

void DataListPBData::Swap(DataListPBData* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DataListPBData::InternalSwap(DataListPBData* other) {
  data_list_.UnsafeArenaSwap(&other->data_list_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DataListPBData::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = DataListPBData_descriptor_;
  metadata.reflection = DataListPBData_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// DataListPBData

// repeated .AFMsg.PBData data_list = 1;
int DataListPBData::data_list_size() const {
  return data_list_.size();
}
void DataListPBData::clear_data_list() {
  data_list_.Clear();
}
const ::AFMsg::PBData& DataListPBData::data_list(int index) const {
  // @@protoc_insertion_point(field_get:AFMsg.DataListPBData.data_list)
  return data_list_.Get(index);
}
::AFMsg::PBData* DataListPBData::mutable_data_list(int index) {
  // @@protoc_insertion_point(field_mutable:AFMsg.DataListPBData.data_list)
  return data_list_.Mutable(index);
}
::AFMsg::PBData* DataListPBData::add_data_list() {
  // @@protoc_insertion_point(field_add:AFMsg.DataListPBData.data_list)
  return data_list_.Add();
}
::google::protobuf::RepeatedPtrField< ::AFMsg::PBData >*
DataListPBData::mutable_data_list() {
  // @@protoc_insertion_point(field_mutable_list:AFMsg.DataListPBData.data_list)
  return &data_list_;
}
const ::google::protobuf::RepeatedPtrField< ::AFMsg::PBData >&
DataListPBData::data_list() const {
  // @@protoc_insertion_point(field_list:AFMsg.DataListPBData.data_list)
  return data_list_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RecordAddRowStruct::kRowFieldNumber;
const int RecordAddRowStruct::kRecordDataListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RecordAddRowStruct::RecordAddRowStruct()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:AFMsg.RecordAddRowStruct)
}

void RecordAddRowStruct::InitAsDefaultInstance() {
}

RecordAddRowStruct::RecordAddRowStruct(const RecordAddRowStruct& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:AFMsg.RecordAddRowStruct)
}

void RecordAddRowStruct::SharedCtor() {
  _cached_size_ = 0;
  row_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

RecordAddRowStruct::~RecordAddRowStruct() {
  // @@protoc_insertion_point(destructor:AFMsg.RecordAddRowStruct)
  SharedDtor();
}

void RecordAddRowStruct::SharedDtor() {
  if (this != default_instance_) {
  }
}

void RecordAddRowStruct::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RecordAddRowStruct::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return RecordAddRowStruct_descriptor_;
}

const RecordAddRowStruct& RecordAddRowStruct::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_AFMsgBase_2eproto();
  return *default_instance_;
}

RecordAddRowStruct* RecordAddRowStruct::default_instance_ = NULL;

RecordAddRowStruct* RecordAddRowStruct::New(::google::protobuf::Arena* arena) const {
  RecordAddRowStruct* n = new RecordAddRowStruct;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RecordAddRowStruct::Clear() {
// @@protoc_insertion_point(message_clear_start:AFMsg.RecordAddRowStruct)
  row_ = 0;
  record_data_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool RecordAddRowStruct::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:AFMsg.RecordAddRowStruct)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 row = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &row_)));
          set_has_row();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_record_data_list;
        break;
      }

      // repeated .AFMsg.RecordPBData record_data_list = 2;
      case 2: {
        if (tag == 18) {
         parse_record_data_list:
          DO_(input->IncrementRecursionDepth());
         parse_loop_record_data_list:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_record_data_list()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_loop_record_data_list;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:AFMsg.RecordAddRowStruct)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:AFMsg.RecordAddRowStruct)
  return false;
#undef DO_
}

void RecordAddRowStruct::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:AFMsg.RecordAddRowStruct)
  // required int32 row = 1;
  if (has_row()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->row(), output);
  }

  // repeated .AFMsg.RecordPBData record_data_list = 2;
  for (unsigned int i = 0, n = this->record_data_list_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->record_data_list(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:AFMsg.RecordAddRowStruct)
}

::google::protobuf::uint8* RecordAddRowStruct::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:AFMsg.RecordAddRowStruct)
  // required int32 row = 1;
  if (has_row()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->row(), target);
  }

  // repeated .AFMsg.RecordPBData record_data_list = 2;
  for (unsigned int i = 0, n = this->record_data_list_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->record_data_list(i), false, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AFMsg.RecordAddRowStruct)
  return target;
}

int RecordAddRowStruct::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:AFMsg.RecordAddRowStruct)
  int total_size = 0;

  // required int32 row = 1;
  if (has_row()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->row());
  }
  // repeated .AFMsg.RecordPBData record_data_list = 2;
  total_size += 1 * this->record_data_list_size();
  for (int i = 0; i < this->record_data_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->record_data_list(i));
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RecordAddRowStruct::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:AFMsg.RecordAddRowStruct)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const RecordAddRowStruct* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const RecordAddRowStruct>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:AFMsg.RecordAddRowStruct)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:AFMsg.RecordAddRowStruct)
    MergeFrom(*source);
  }
}

void RecordAddRowStruct::MergeFrom(const RecordAddRowStruct& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:AFMsg.RecordAddRowStruct)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  record_data_list_.MergeFrom(from.record_data_list_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_row()) {
      set_row(from.row());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void RecordAddRowStruct::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:AFMsg.RecordAddRowStruct)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RecordAddRowStruct::CopyFrom(const RecordAddRowStruct& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:AFMsg.RecordAddRowStruct)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RecordAddRowStruct::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  if (!::google::protobuf::internal::AllAreInitialized(this->record_data_list())) return false;
  return true;
}

void RecordAddRowStruct::Swap(RecordAddRowStruct* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RecordAddRowStruct::InternalSwap(RecordAddRowStruct* other) {
  std::swap(row_, other->row_);
  record_data_list_.UnsafeArenaSwap(&other->record_data_list_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RecordAddRowStruct::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = RecordAddRowStruct_descriptor_;
  metadata.reflection = RecordAddRowStruct_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// RecordAddRowStruct

// required int32 row = 1;
bool RecordAddRowStruct::has_row() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void RecordAddRowStruct::set_has_row() {
  _has_bits_[0] |= 0x00000001u;
}
void RecordAddRowStruct::clear_has_row() {
  _has_bits_[0] &= ~0x00000001u;
}
void RecordAddRowStruct::clear_row() {
  row_ = 0;
  clear_has_row();
}
 ::google::protobuf::int32 RecordAddRowStruct::row() const {
  // @@protoc_insertion_point(field_get:AFMsg.RecordAddRowStruct.row)
  return row_;
}
 void RecordAddRowStruct::set_row(::google::protobuf::int32 value) {
  set_has_row();
  row_ = value;
  // @@protoc_insertion_point(field_set:AFMsg.RecordAddRowStruct.row)
}

// repeated .AFMsg.RecordPBData record_data_list = 2;
int RecordAddRowStruct::record_data_list_size() const {
  return record_data_list_.size();
}
void RecordAddRowStruct::clear_record_data_list() {
  record_data_list_.Clear();
}
const ::AFMsg::RecordPBData& RecordAddRowStruct::record_data_list(int index) const {
  // @@protoc_insertion_point(field_get:AFMsg.RecordAddRowStruct.record_data_list)
  return record_data_list_.Get(index);
}
::AFMsg::RecordPBData* RecordAddRowStruct::mutable_record_data_list(int index) {
  // @@protoc_insertion_point(field_mutable:AFMsg.RecordAddRowStruct.record_data_list)
  return record_data_list_.Mutable(index);
}
::AFMsg::RecordPBData* RecordAddRowStruct::add_record_data_list() {
  // @@protoc_insertion_point(field_add:AFMsg.RecordAddRowStruct.record_data_list)
  return record_data_list_.Add();
}
::google::protobuf::RepeatedPtrField< ::AFMsg::RecordPBData >*
RecordAddRowStruct::mutable_record_data_list() {
  // @@protoc_insertion_point(field_mutable_list:AFMsg.RecordAddRowStruct.record_data_list)
  return &record_data_list_;
}
const ::google::protobuf::RepeatedPtrField< ::AFMsg::RecordPBData >&
RecordAddRowStruct::record_data_list() const {
  // @@protoc_insertion_point(field_list:AFMsg.RecordAddRowStruct.record_data_list)
  return record_data_list_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ObjectRecordBase::kRecordNameFieldNumber;
const int ObjectRecordBase::kRowStructFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ObjectRecordBase::ObjectRecordBase()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:AFMsg.ObjectRecordBase)
}

void ObjectRecordBase::InitAsDefaultInstance() {
}

ObjectRecordBase::ObjectRecordBase(const ObjectRecordBase& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:AFMsg.ObjectRecordBase)
}

void ObjectRecordBase::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  record_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ObjectRecordBase::~ObjectRecordBase() {
  // @@protoc_insertion_point(destructor:AFMsg.ObjectRecordBase)
  SharedDtor();
}

void ObjectRecordBase::SharedDtor() {
  record_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void ObjectRecordBase::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ObjectRecordBase::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ObjectRecordBase_descriptor_;
}

const ObjectRecordBase& ObjectRecordBase::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_AFMsgBase_2eproto();
  return *default_instance_;
}

ObjectRecordBase* ObjectRecordBase::default_instance_ = NULL;

ObjectRecordBase* ObjectRecordBase::New(::google::protobuf::Arena* arena) const {
  ObjectRecordBase* n = new ObjectRecordBase;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ObjectRecordBase::Clear() {
// @@protoc_insertion_point(message_clear_start:AFMsg.ObjectRecordBase)
  if (has_record_name()) {
    record_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  row_struct_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool ObjectRecordBase::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:AFMsg.ObjectRecordBase)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required bytes record_name = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_record_name()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_row_struct;
        break;
      }

      // repeated .AFMsg.RecordAddRowStruct row_struct = 2;
      case 2: {
        if (tag == 18) {
         parse_row_struct:
          DO_(input->IncrementRecursionDepth());
         parse_loop_row_struct:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_row_struct()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_loop_row_struct;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:AFMsg.ObjectRecordBase)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:AFMsg.ObjectRecordBase)
  return false;
#undef DO_
}

void ObjectRecordBase::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:AFMsg.ObjectRecordBase)
  // required bytes record_name = 1;
  if (has_record_name()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->record_name(), output);
  }

  // repeated .AFMsg.RecordAddRowStruct row_struct = 2;
  for (unsigned int i = 0, n = this->row_struct_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->row_struct(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:AFMsg.ObjectRecordBase)
}

::google::protobuf::uint8* ObjectRecordBase::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:AFMsg.ObjectRecordBase)
  // required bytes record_name = 1;
  if (has_record_name()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->record_name(), target);
  }

  // repeated .AFMsg.RecordAddRowStruct row_struct = 2;
  for (unsigned int i = 0, n = this->row_struct_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->row_struct(i), false, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AFMsg.ObjectRecordBase)
  return target;
}

int ObjectRecordBase::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:AFMsg.ObjectRecordBase)
  int total_size = 0;

  // required bytes record_name = 1;
  if (has_record_name()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->record_name());
  }
  // repeated .AFMsg.RecordAddRowStruct row_struct = 2;
  total_size += 1 * this->row_struct_size();
  for (int i = 0; i < this->row_struct_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->row_struct(i));
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ObjectRecordBase::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:AFMsg.ObjectRecordBase)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const ObjectRecordBase* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const ObjectRecordBase>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:AFMsg.ObjectRecordBase)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:AFMsg.ObjectRecordBase)
    MergeFrom(*source);
  }
}

void ObjectRecordBase::MergeFrom(const ObjectRecordBase& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:AFMsg.ObjectRecordBase)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  row_struct_.MergeFrom(from.row_struct_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_record_name()) {
      set_has_record_name();
      record_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.record_name_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void ObjectRecordBase::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:AFMsg.ObjectRecordBase)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ObjectRecordBase::CopyFrom(const ObjectRecordBase& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:AFMsg.ObjectRecordBase)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ObjectRecordBase::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  if (!::google::protobuf::internal::AllAreInitialized(this->row_struct())) return false;
  return true;
}

void ObjectRecordBase::Swap(ObjectRecordBase* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ObjectRecordBase::InternalSwap(ObjectRecordBase* other) {
  record_name_.Swap(&other->record_name_);
  row_struct_.UnsafeArenaSwap(&other->row_struct_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ObjectRecordBase::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ObjectRecordBase_descriptor_;
  metadata.reflection = ObjectRecordBase_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ObjectRecordBase

// required bytes record_name = 1;
bool ObjectRecordBase::has_record_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void ObjectRecordBase::set_has_record_name() {
  _has_bits_[0] |= 0x00000001u;
}
void ObjectRecordBase::clear_has_record_name() {
  _has_bits_[0] &= ~0x00000001u;
}
void ObjectRecordBase::clear_record_name() {
  record_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_record_name();
}
 const ::std::string& ObjectRecordBase::record_name() const {
  // @@protoc_insertion_point(field_get:AFMsg.ObjectRecordBase.record_name)
  return record_name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ObjectRecordBase::set_record_name(const ::std::string& value) {
  set_has_record_name();
  record_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:AFMsg.ObjectRecordBase.record_name)
}
 void ObjectRecordBase::set_record_name(const char* value) {
  set_has_record_name();
  record_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:AFMsg.ObjectRecordBase.record_name)
}
 void ObjectRecordBase::set_record_name(const void* value, size_t size) {
  set_has_record_name();
  record_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:AFMsg.ObjectRecordBase.record_name)
}
 ::std::string* ObjectRecordBase::mutable_record_name() {
  set_has_record_name();
  // @@protoc_insertion_point(field_mutable:AFMsg.ObjectRecordBase.record_name)
  return record_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* ObjectRecordBase::release_record_name() {
  // @@protoc_insertion_point(field_release:AFMsg.ObjectRecordBase.record_name)
  clear_has_record_name();
  return record_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ObjectRecordBase::set_allocated_record_name(::std::string* record_name) {
  if (record_name != NULL) {
    set_has_record_name();
  } else {
    clear_has_record_name();
  }
  record_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), record_name);
  // @@protoc_insertion_point(field_set_allocated:AFMsg.ObjectRecordBase.record_name)
}

// repeated .AFMsg.RecordAddRowStruct row_struct = 2;
int ObjectRecordBase::row_struct_size() const {
  return row_struct_.size();
}
void ObjectRecordBase::clear_row_struct() {
  row_struct_.Clear();
}
const ::AFMsg::RecordAddRowStruct& ObjectRecordBase::row_struct(int index) const {
  // @@protoc_insertion_point(field_get:AFMsg.ObjectRecordBase.row_struct)
  return row_struct_.Get(index);
}
::AFMsg::RecordAddRowStruct* ObjectRecordBase::mutable_row_struct(int index) {
  // @@protoc_insertion_point(field_mutable:AFMsg.ObjectRecordBase.row_struct)
  return row_struct_.Mutable(index);
}
::AFMsg::RecordAddRowStruct* ObjectRecordBase::add_row_struct() {
  // @@protoc_insertion_point(field_add:AFMsg.ObjectRecordBase.row_struct)
  return row_struct_.Add();
}
::google::protobuf::RepeatedPtrField< ::AFMsg::RecordAddRowStruct >*
ObjectRecordBase::mutable_row_struct() {
  // @@protoc_insertion_point(field_mutable_list:AFMsg.ObjectRecordBase.row_struct)
  return &row_struct_;
}
const ::google::protobuf::RepeatedPtrField< ::AFMsg::RecordAddRowStruct >&
ObjectRecordBase::row_struct() const {
  // @@protoc_insertion_point(field_list:AFMsg.ObjectRecordBase.row_struct)
  return row_struct_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ObjectPropertyList::kPlayerIdFieldNumber;
const int ObjectPropertyList::kPropertyDataListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ObjectPropertyList::ObjectPropertyList()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:AFMsg.ObjectPropertyList)
}

void ObjectPropertyList::InitAsDefaultInstance() {
  player_id_ = const_cast< ::AFMsg::Ident*>(&::AFMsg::Ident::default_instance());
}

ObjectPropertyList::ObjectPropertyList(const ObjectPropertyList& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:AFMsg.ObjectPropertyList)
}

void ObjectPropertyList::SharedCtor() {
  _cached_size_ = 0;
  player_id_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ObjectPropertyList::~ObjectPropertyList() {
  // @@protoc_insertion_point(destructor:AFMsg.ObjectPropertyList)
  SharedDtor();
}

void ObjectPropertyList::SharedDtor() {
  if (this != default_instance_) {
    delete player_id_;
  }
}

void ObjectPropertyList::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ObjectPropertyList::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ObjectPropertyList_descriptor_;
}

const ObjectPropertyList& ObjectPropertyList::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_AFMsgBase_2eproto();
  return *default_instance_;
}

ObjectPropertyList* ObjectPropertyList::default_instance_ = NULL;

ObjectPropertyList* ObjectPropertyList::New(::google::protobuf::Arena* arena) const {
  ObjectPropertyList* n = new ObjectPropertyList;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ObjectPropertyList::Clear() {
// @@protoc_insertion_point(message_clear_start:AFMsg.ObjectPropertyList)
  if (has_player_id()) {
    if (player_id_ != NULL) player_id_->::AFMsg::Ident::Clear();
  }
  property_data_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool ObjectPropertyList::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:AFMsg.ObjectPropertyList)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .AFMsg.Ident player_id = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_player_id()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_property_data_list;
        break;
      }

      // repeated .AFMsg.PropertyPBData property_data_list = 2;
      case 2: {
        if (tag == 18) {
         parse_property_data_list:
          DO_(input->IncrementRecursionDepth());
         parse_loop_property_data_list:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_property_data_list()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_loop_property_data_list;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:AFMsg.ObjectPropertyList)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:AFMsg.ObjectPropertyList)
  return false;
#undef DO_
}

void ObjectPropertyList::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:AFMsg.ObjectPropertyList)
  // required .AFMsg.Ident player_id = 1;
  if (has_player_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->player_id_, output);
  }

  // repeated .AFMsg.PropertyPBData property_data_list = 2;
  for (unsigned int i = 0, n = this->property_data_list_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->property_data_list(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:AFMsg.ObjectPropertyList)
}

::google::protobuf::uint8* ObjectPropertyList::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:AFMsg.ObjectPropertyList)
  // required .AFMsg.Ident player_id = 1;
  if (has_player_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->player_id_, false, target);
  }

  // repeated .AFMsg.PropertyPBData property_data_list = 2;
  for (unsigned int i = 0, n = this->property_data_list_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->property_data_list(i), false, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AFMsg.ObjectPropertyList)
  return target;
}

int ObjectPropertyList::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:AFMsg.ObjectPropertyList)
  int total_size = 0;

  // required .AFMsg.Ident player_id = 1;
  if (has_player_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->player_id_);
  }
  // repeated .AFMsg.PropertyPBData property_data_list = 2;
  total_size += 1 * this->property_data_list_size();
  for (int i = 0; i < this->property_data_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->property_data_list(i));
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ObjectPropertyList::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:AFMsg.ObjectPropertyList)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const ObjectPropertyList* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const ObjectPropertyList>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:AFMsg.ObjectPropertyList)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:AFMsg.ObjectPropertyList)
    MergeFrom(*source);
  }
}

void ObjectPropertyList::MergeFrom(const ObjectPropertyList& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:AFMsg.ObjectPropertyList)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  property_data_list_.MergeFrom(from.property_data_list_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_player_id()) {
      mutable_player_id()->::AFMsg::Ident::MergeFrom(from.player_id());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void ObjectPropertyList::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:AFMsg.ObjectPropertyList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ObjectPropertyList::CopyFrom(const ObjectPropertyList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:AFMsg.ObjectPropertyList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ObjectPropertyList::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  if (has_player_id()) {
    if (!this->player_id_->IsInitialized()) return false;
  }
  if (!::google::protobuf::internal::AllAreInitialized(this->property_data_list())) return false;
  return true;
}

void ObjectPropertyList::Swap(ObjectPropertyList* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ObjectPropertyList::InternalSwap(ObjectPropertyList* other) {
  std::swap(player_id_, other->player_id_);
  property_data_list_.UnsafeArenaSwap(&other->property_data_list_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ObjectPropertyList::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ObjectPropertyList_descriptor_;
  metadata.reflection = ObjectPropertyList_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ObjectPropertyList

// required .AFMsg.Ident player_id = 1;
bool ObjectPropertyList::has_player_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void ObjectPropertyList::set_has_player_id() {
  _has_bits_[0] |= 0x00000001u;
}
void ObjectPropertyList::clear_has_player_id() {
  _has_bits_[0] &= ~0x00000001u;
}
void ObjectPropertyList::clear_player_id() {
  if (player_id_ != NULL) player_id_->::AFMsg::Ident::Clear();
  clear_has_player_id();
}
const ::AFMsg::Ident& ObjectPropertyList::player_id() const {
  // @@protoc_insertion_point(field_get:AFMsg.ObjectPropertyList.player_id)
  return player_id_ != NULL ? *player_id_ : *default_instance_->player_id_;
}
::AFMsg::Ident* ObjectPropertyList::mutable_player_id() {
  set_has_player_id();
  if (player_id_ == NULL) {
    player_id_ = new ::AFMsg::Ident;
  }
  // @@protoc_insertion_point(field_mutable:AFMsg.ObjectPropertyList.player_id)
  return player_id_;
}
::AFMsg::Ident* ObjectPropertyList::release_player_id() {
  // @@protoc_insertion_point(field_release:AFMsg.ObjectPropertyList.player_id)
  clear_has_player_id();
  ::AFMsg::Ident* temp = player_id_;
  player_id_ = NULL;
  return temp;
}
void ObjectPropertyList::set_allocated_player_id(::AFMsg::Ident* player_id) {
  delete player_id_;
  player_id_ = player_id;
  if (player_id) {
    set_has_player_id();
  } else {
    clear_has_player_id();
  }
  // @@protoc_insertion_point(field_set_allocated:AFMsg.ObjectPropertyList.player_id)
}

// repeated .AFMsg.PropertyPBData property_data_list = 2;
int ObjectPropertyList::property_data_list_size() const {
  return property_data_list_.size();
}
void ObjectPropertyList::clear_property_data_list() {
  property_data_list_.Clear();
}
const ::AFMsg::PropertyPBData& ObjectPropertyList::property_data_list(int index) const {
  // @@protoc_insertion_point(field_get:AFMsg.ObjectPropertyList.property_data_list)
  return property_data_list_.Get(index);
}
::AFMsg::PropertyPBData* ObjectPropertyList::mutable_property_data_list(int index) {
  // @@protoc_insertion_point(field_mutable:AFMsg.ObjectPropertyList.property_data_list)
  return property_data_list_.Mutable(index);
}
::AFMsg::PropertyPBData* ObjectPropertyList::add_property_data_list() {
  // @@protoc_insertion_point(field_add:AFMsg.ObjectPropertyList.property_data_list)
  return property_data_list_.Add();
}
::google::protobuf::RepeatedPtrField< ::AFMsg::PropertyPBData >*
ObjectPropertyList::mutable_property_data_list() {
  // @@protoc_insertion_point(field_mutable_list:AFMsg.ObjectPropertyList.property_data_list)
  return &property_data_list_;
}
const ::google::protobuf::RepeatedPtrField< ::AFMsg::PropertyPBData >&
ObjectPropertyList::property_data_list() const {
  // @@protoc_insertion_point(field_list:AFMsg.ObjectPropertyList.property_data_list)
  return property_data_list_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MultiObjectPropertyList::kMultiPlayerPropertyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MultiObjectPropertyList::MultiObjectPropertyList()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:AFMsg.MultiObjectPropertyList)
}

void MultiObjectPropertyList::InitAsDefaultInstance() {
}

MultiObjectPropertyList::MultiObjectPropertyList(const MultiObjectPropertyList& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:AFMsg.MultiObjectPropertyList)
}

void MultiObjectPropertyList::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MultiObjectPropertyList::~MultiObjectPropertyList() {
  // @@protoc_insertion_point(destructor:AFMsg.MultiObjectPropertyList)
  SharedDtor();
}

void MultiObjectPropertyList::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MultiObjectPropertyList::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MultiObjectPropertyList::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MultiObjectPropertyList_descriptor_;
}

const MultiObjectPropertyList& MultiObjectPropertyList::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_AFMsgBase_2eproto();
  return *default_instance_;
}

MultiObjectPropertyList* MultiObjectPropertyList::default_instance_ = NULL;

MultiObjectPropertyList* MultiObjectPropertyList::New(::google::protobuf::Arena* arena) const {
  MultiObjectPropertyList* n = new MultiObjectPropertyList;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MultiObjectPropertyList::Clear() {
// @@protoc_insertion_point(message_clear_start:AFMsg.MultiObjectPropertyList)
  multi_player_property_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool MultiObjectPropertyList::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:AFMsg.MultiObjectPropertyList)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .AFMsg.ObjectPropertyList multi_player_property = 1;
      case 1: {
        if (tag == 10) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_multi_player_property:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_multi_player_property()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_loop_multi_player_property;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:AFMsg.MultiObjectPropertyList)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:AFMsg.MultiObjectPropertyList)
  return false;
#undef DO_
}

void MultiObjectPropertyList::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:AFMsg.MultiObjectPropertyList)
  // repeated .AFMsg.ObjectPropertyList multi_player_property = 1;
  for (unsigned int i = 0, n = this->multi_player_property_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->multi_player_property(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:AFMsg.MultiObjectPropertyList)
}

::google::protobuf::uint8* MultiObjectPropertyList::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:AFMsg.MultiObjectPropertyList)
  // repeated .AFMsg.ObjectPropertyList multi_player_property = 1;
  for (unsigned int i = 0, n = this->multi_player_property_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->multi_player_property(i), false, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AFMsg.MultiObjectPropertyList)
  return target;
}

int MultiObjectPropertyList::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:AFMsg.MultiObjectPropertyList)
  int total_size = 0;

  // repeated .AFMsg.ObjectPropertyList multi_player_property = 1;
  total_size += 1 * this->multi_player_property_size();
  for (int i = 0; i < this->multi_player_property_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->multi_player_property(i));
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MultiObjectPropertyList::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:AFMsg.MultiObjectPropertyList)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const MultiObjectPropertyList* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const MultiObjectPropertyList>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:AFMsg.MultiObjectPropertyList)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:AFMsg.MultiObjectPropertyList)
    MergeFrom(*source);
  }
}

void MultiObjectPropertyList::MergeFrom(const MultiObjectPropertyList& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:AFMsg.MultiObjectPropertyList)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  multi_player_property_.MergeFrom(from.multi_player_property_);
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void MultiObjectPropertyList::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:AFMsg.MultiObjectPropertyList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MultiObjectPropertyList::CopyFrom(const MultiObjectPropertyList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:AFMsg.MultiObjectPropertyList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MultiObjectPropertyList::IsInitialized() const {

  if (!::google::protobuf::internal::AllAreInitialized(this->multi_player_property())) return false;
  return true;
}

void MultiObjectPropertyList::Swap(MultiObjectPropertyList* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MultiObjectPropertyList::InternalSwap(MultiObjectPropertyList* other) {
  multi_player_property_.UnsafeArenaSwap(&other->multi_player_property_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MultiObjectPropertyList::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MultiObjectPropertyList_descriptor_;
  metadata.reflection = MultiObjectPropertyList_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MultiObjectPropertyList

// repeated .AFMsg.ObjectPropertyList multi_player_property = 1;
int MultiObjectPropertyList::multi_player_property_size() const {
  return multi_player_property_.size();
}
void MultiObjectPropertyList::clear_multi_player_property() {
  multi_player_property_.Clear();
}
const ::AFMsg::ObjectPropertyList& MultiObjectPropertyList::multi_player_property(int index) const {
  // @@protoc_insertion_point(field_get:AFMsg.MultiObjectPropertyList.multi_player_property)
  return multi_player_property_.Get(index);
}
::AFMsg::ObjectPropertyList* MultiObjectPropertyList::mutable_multi_player_property(int index) {
  // @@protoc_insertion_point(field_mutable:AFMsg.MultiObjectPropertyList.multi_player_property)
  return multi_player_property_.Mutable(index);
}
::AFMsg::ObjectPropertyList* MultiObjectPropertyList::add_multi_player_property() {
  // @@protoc_insertion_point(field_add:AFMsg.MultiObjectPropertyList.multi_player_property)
  return multi_player_property_.Add();
}
::google::protobuf::RepeatedPtrField< ::AFMsg::ObjectPropertyList >*
MultiObjectPropertyList::mutable_multi_player_property() {
  // @@protoc_insertion_point(field_mutable_list:AFMsg.MultiObjectPropertyList.multi_player_property)
  return &multi_player_property_;
}
const ::google::protobuf::RepeatedPtrField< ::AFMsg::ObjectPropertyList >&
MultiObjectPropertyList::multi_player_property() const {
  // @@protoc_insertion_point(field_list:AFMsg.MultiObjectPropertyList.multi_player_property)
  return multi_player_property_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ObjectRecordList::kPlayerIdFieldNumber;
const int ObjectRecordList::kRecordListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ObjectRecordList::ObjectRecordList()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:AFMsg.ObjectRecordList)
}

void ObjectRecordList::InitAsDefaultInstance() {
  player_id_ = const_cast< ::AFMsg::Ident*>(&::AFMsg::Ident::default_instance());
}

ObjectRecordList::ObjectRecordList(const ObjectRecordList& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:AFMsg.ObjectRecordList)
}

void ObjectRecordList::SharedCtor() {
  _cached_size_ = 0;
  player_id_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ObjectRecordList::~ObjectRecordList() {
  // @@protoc_insertion_point(destructor:AFMsg.ObjectRecordList)
  SharedDtor();
}

void ObjectRecordList::SharedDtor() {
  if (this != default_instance_) {
    delete player_id_;
  }
}

void ObjectRecordList::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ObjectRecordList::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ObjectRecordList_descriptor_;
}

const ObjectRecordList& ObjectRecordList::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_AFMsgBase_2eproto();
  return *default_instance_;
}

ObjectRecordList* ObjectRecordList::default_instance_ = NULL;

ObjectRecordList* ObjectRecordList::New(::google::protobuf::Arena* arena) const {
  ObjectRecordList* n = new ObjectRecordList;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ObjectRecordList::Clear() {
// @@protoc_insertion_point(message_clear_start:AFMsg.ObjectRecordList)
  if (has_player_id()) {
    if (player_id_ != NULL) player_id_->::AFMsg::Ident::Clear();
  }
  record_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool ObjectRecordList::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:AFMsg.ObjectRecordList)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .AFMsg.Ident player_id = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_player_id()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_record_list;
        break;
      }

      // repeated .AFMsg.ObjectRecordBase record_list = 2;
      case 2: {
        if (tag == 18) {
         parse_record_list:
          DO_(input->IncrementRecursionDepth());
         parse_loop_record_list:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_record_list()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_loop_record_list;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:AFMsg.ObjectRecordList)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:AFMsg.ObjectRecordList)
  return false;
#undef DO_
}

void ObjectRecordList::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:AFMsg.ObjectRecordList)
  // required .AFMsg.Ident player_id = 1;
  if (has_player_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->player_id_, output);
  }

  // repeated .AFMsg.ObjectRecordBase record_list = 2;
  for (unsigned int i = 0, n = this->record_list_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->record_list(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:AFMsg.ObjectRecordList)
}

::google::protobuf::uint8* ObjectRecordList::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:AFMsg.ObjectRecordList)
  // required .AFMsg.Ident player_id = 1;
  if (has_player_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->player_id_, false, target);
  }

  // repeated .AFMsg.ObjectRecordBase record_list = 2;
  for (unsigned int i = 0, n = this->record_list_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->record_list(i), false, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AFMsg.ObjectRecordList)
  return target;
}

int ObjectRecordList::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:AFMsg.ObjectRecordList)
  int total_size = 0;

  // required .AFMsg.Ident player_id = 1;
  if (has_player_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->player_id_);
  }
  // repeated .AFMsg.ObjectRecordBase record_list = 2;
  total_size += 1 * this->record_list_size();
  for (int i = 0; i < this->record_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->record_list(i));
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ObjectRecordList::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:AFMsg.ObjectRecordList)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const ObjectRecordList* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const ObjectRecordList>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:AFMsg.ObjectRecordList)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:AFMsg.ObjectRecordList)
    MergeFrom(*source);
  }
}

void ObjectRecordList::MergeFrom(const ObjectRecordList& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:AFMsg.ObjectRecordList)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  record_list_.MergeFrom(from.record_list_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_player_id()) {
      mutable_player_id()->::AFMsg::Ident::MergeFrom(from.player_id());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void ObjectRecordList::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:AFMsg.ObjectRecordList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ObjectRecordList::CopyFrom(const ObjectRecordList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:AFMsg.ObjectRecordList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ObjectRecordList::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  if (has_player_id()) {
    if (!this->player_id_->IsInitialized()) return false;
  }
  if (!::google::protobuf::internal::AllAreInitialized(this->record_list())) return false;
  return true;
}

void ObjectRecordList::Swap(ObjectRecordList* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ObjectRecordList::InternalSwap(ObjectRecordList* other) {
  std::swap(player_id_, other->player_id_);
  record_list_.UnsafeArenaSwap(&other->record_list_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ObjectRecordList::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ObjectRecordList_descriptor_;
  metadata.reflection = ObjectRecordList_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ObjectRecordList

// required .AFMsg.Ident player_id = 1;
bool ObjectRecordList::has_player_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void ObjectRecordList::set_has_player_id() {
  _has_bits_[0] |= 0x00000001u;
}
void ObjectRecordList::clear_has_player_id() {
  _has_bits_[0] &= ~0x00000001u;
}
void ObjectRecordList::clear_player_id() {
  if (player_id_ != NULL) player_id_->::AFMsg::Ident::Clear();
  clear_has_player_id();
}
const ::AFMsg::Ident& ObjectRecordList::player_id() const {
  // @@protoc_insertion_point(field_get:AFMsg.ObjectRecordList.player_id)
  return player_id_ != NULL ? *player_id_ : *default_instance_->player_id_;
}
::AFMsg::Ident* ObjectRecordList::mutable_player_id() {
  set_has_player_id();
  if (player_id_ == NULL) {
    player_id_ = new ::AFMsg::Ident;
  }
  // @@protoc_insertion_point(field_mutable:AFMsg.ObjectRecordList.player_id)
  return player_id_;
}
::AFMsg::Ident* ObjectRecordList::release_player_id() {
  // @@protoc_insertion_point(field_release:AFMsg.ObjectRecordList.player_id)
  clear_has_player_id();
  ::AFMsg::Ident* temp = player_id_;
  player_id_ = NULL;
  return temp;
}
void ObjectRecordList::set_allocated_player_id(::AFMsg::Ident* player_id) {
  delete player_id_;
  player_id_ = player_id;
  if (player_id) {
    set_has_player_id();
  } else {
    clear_has_player_id();
  }
  // @@protoc_insertion_point(field_set_allocated:AFMsg.ObjectRecordList.player_id)
}

// repeated .AFMsg.ObjectRecordBase record_list = 2;
int ObjectRecordList::record_list_size() const {
  return record_list_.size();
}
void ObjectRecordList::clear_record_list() {
  record_list_.Clear();
}
const ::AFMsg::ObjectRecordBase& ObjectRecordList::record_list(int index) const {
  // @@protoc_insertion_point(field_get:AFMsg.ObjectRecordList.record_list)
  return record_list_.Get(index);
}
::AFMsg::ObjectRecordBase* ObjectRecordList::mutable_record_list(int index) {
  // @@protoc_insertion_point(field_mutable:AFMsg.ObjectRecordList.record_list)
  return record_list_.Mutable(index);
}
::AFMsg::ObjectRecordBase* ObjectRecordList::add_record_list() {
  // @@protoc_insertion_point(field_add:AFMsg.ObjectRecordList.record_list)
  return record_list_.Add();
}
::google::protobuf::RepeatedPtrField< ::AFMsg::ObjectRecordBase >*
ObjectRecordList::mutable_record_list() {
  // @@protoc_insertion_point(field_mutable_list:AFMsg.ObjectRecordList.record_list)
  return &record_list_;
}
const ::google::protobuf::RepeatedPtrField< ::AFMsg::ObjectRecordBase >&
ObjectRecordList::record_list() const {
  // @@protoc_insertion_point(field_list:AFMsg.ObjectRecordList.record_list)
  return record_list_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MultiObjectRecordList::kMultiPlayerRecordFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MultiObjectRecordList::MultiObjectRecordList()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:AFMsg.MultiObjectRecordList)
}

void MultiObjectRecordList::InitAsDefaultInstance() {
}

MultiObjectRecordList::MultiObjectRecordList(const MultiObjectRecordList& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:AFMsg.MultiObjectRecordList)
}

void MultiObjectRecordList::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MultiObjectRecordList::~MultiObjectRecordList() {
  // @@protoc_insertion_point(destructor:AFMsg.MultiObjectRecordList)
  SharedDtor();
}

void MultiObjectRecordList::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MultiObjectRecordList::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MultiObjectRecordList::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MultiObjectRecordList_descriptor_;
}

const MultiObjectRecordList& MultiObjectRecordList::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_AFMsgBase_2eproto();
  return *default_instance_;
}

MultiObjectRecordList* MultiObjectRecordList::default_instance_ = NULL;

MultiObjectRecordList* MultiObjectRecordList::New(::google::protobuf::Arena* arena) const {
  MultiObjectRecordList* n = new MultiObjectRecordList;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MultiObjectRecordList::Clear() {
// @@protoc_insertion_point(message_clear_start:AFMsg.MultiObjectRecordList)
  multi_player_record_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool MultiObjectRecordList::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:AFMsg.MultiObjectRecordList)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .AFMsg.ObjectRecordList multi_player_record = 1;
      case 1: {
        if (tag == 10) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_multi_player_record:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_multi_player_record()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_loop_multi_player_record;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:AFMsg.MultiObjectRecordList)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:AFMsg.MultiObjectRecordList)
  return false;
#undef DO_
}

void MultiObjectRecordList::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:AFMsg.MultiObjectRecordList)
  // repeated .AFMsg.ObjectRecordList multi_player_record = 1;
  for (unsigned int i = 0, n = this->multi_player_record_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->multi_player_record(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:AFMsg.MultiObjectRecordList)
}

::google::protobuf::uint8* MultiObjectRecordList::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:AFMsg.MultiObjectRecordList)
  // repeated .AFMsg.ObjectRecordList multi_player_record = 1;
  for (unsigned int i = 0, n = this->multi_player_record_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->multi_player_record(i), false, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AFMsg.MultiObjectRecordList)
  return target;
}

int MultiObjectRecordList::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:AFMsg.MultiObjectRecordList)
  int total_size = 0;

  // repeated .AFMsg.ObjectRecordList multi_player_record = 1;
  total_size += 1 * this->multi_player_record_size();
  for (int i = 0; i < this->multi_player_record_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->multi_player_record(i));
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MultiObjectRecordList::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:AFMsg.MultiObjectRecordList)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const MultiObjectRecordList* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const MultiObjectRecordList>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:AFMsg.MultiObjectRecordList)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:AFMsg.MultiObjectRecordList)
    MergeFrom(*source);
  }
}

void MultiObjectRecordList::MergeFrom(const MultiObjectRecordList& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:AFMsg.MultiObjectRecordList)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  multi_player_record_.MergeFrom(from.multi_player_record_);
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void MultiObjectRecordList::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:AFMsg.MultiObjectRecordList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MultiObjectRecordList::CopyFrom(const MultiObjectRecordList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:AFMsg.MultiObjectRecordList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MultiObjectRecordList::IsInitialized() const {

  if (!::google::protobuf::internal::AllAreInitialized(this->multi_player_record())) return false;
  return true;
}

void MultiObjectRecordList::Swap(MultiObjectRecordList* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MultiObjectRecordList::InternalSwap(MultiObjectRecordList* other) {
  multi_player_record_.UnsafeArenaSwap(&other->multi_player_record_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MultiObjectRecordList::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MultiObjectRecordList_descriptor_;
  metadata.reflection = MultiObjectRecordList_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MultiObjectRecordList

// repeated .AFMsg.ObjectRecordList multi_player_record = 1;
int MultiObjectRecordList::multi_player_record_size() const {
  return multi_player_record_.size();
}
void MultiObjectRecordList::clear_multi_player_record() {
  multi_player_record_.Clear();
}
const ::AFMsg::ObjectRecordList& MultiObjectRecordList::multi_player_record(int index) const {
  // @@protoc_insertion_point(field_get:AFMsg.MultiObjectRecordList.multi_player_record)
  return multi_player_record_.Get(index);
}
::AFMsg::ObjectRecordList* MultiObjectRecordList::mutable_multi_player_record(int index) {
  // @@protoc_insertion_point(field_mutable:AFMsg.MultiObjectRecordList.multi_player_record)
  return multi_player_record_.Mutable(index);
}
::AFMsg::ObjectRecordList* MultiObjectRecordList::add_multi_player_record() {
  // @@protoc_insertion_point(field_add:AFMsg.MultiObjectRecordList.multi_player_record)
  return multi_player_record_.Add();
}
::google::protobuf::RepeatedPtrField< ::AFMsg::ObjectRecordList >*
MultiObjectRecordList::mutable_multi_player_record() {
  // @@protoc_insertion_point(field_mutable_list:AFMsg.MultiObjectRecordList.multi_player_record)
  return &multi_player_record_;
}
const ::google::protobuf::RepeatedPtrField< ::AFMsg::ObjectRecordList >&
MultiObjectRecordList::multi_player_record() const {
  // @@protoc_insertion_point(field_list:AFMsg.MultiObjectRecordList.multi_player_record)
  return multi_player_record_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ObjectPropertyPBData::kPlayerIdFieldNumber;
const int ObjectPropertyPBData::kPropertyListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ObjectPropertyPBData::ObjectPropertyPBData()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:AFMsg.ObjectPropertyPBData)
}

void ObjectPropertyPBData::InitAsDefaultInstance() {
  player_id_ = const_cast< ::AFMsg::Ident*>(&::AFMsg::Ident::default_instance());
}

ObjectPropertyPBData::ObjectPropertyPBData(const ObjectPropertyPBData& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:AFMsg.ObjectPropertyPBData)
}

void ObjectPropertyPBData::SharedCtor() {
  _cached_size_ = 0;
  player_id_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ObjectPropertyPBData::~ObjectPropertyPBData() {
  // @@protoc_insertion_point(destructor:AFMsg.ObjectPropertyPBData)
  SharedDtor();
}

void ObjectPropertyPBData::SharedDtor() {
  if (this != default_instance_) {
    delete player_id_;
  }
}

void ObjectPropertyPBData::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ObjectPropertyPBData::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ObjectPropertyPBData_descriptor_;
}

const ObjectPropertyPBData& ObjectPropertyPBData::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_AFMsgBase_2eproto();
  return *default_instance_;
}

ObjectPropertyPBData* ObjectPropertyPBData::default_instance_ = NULL;

ObjectPropertyPBData* ObjectPropertyPBData::New(::google::protobuf::Arena* arena) const {
  ObjectPropertyPBData* n = new ObjectPropertyPBData;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ObjectPropertyPBData::Clear() {
// @@protoc_insertion_point(message_clear_start:AFMsg.ObjectPropertyPBData)
  if (has_player_id()) {
    if (player_id_ != NULL) player_id_->::AFMsg::Ident::Clear();
  }
  property_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool ObjectPropertyPBData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:AFMsg.ObjectPropertyPBData)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .AFMsg.Ident player_id = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_player_id()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_property_list;
        break;
      }

      // repeated .AFMsg.PropertyPBData property_list = 2;
      case 2: {
        if (tag == 18) {
         parse_property_list:
          DO_(input->IncrementRecursionDepth());
         parse_loop_property_list:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_property_list()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_loop_property_list;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:AFMsg.ObjectPropertyPBData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:AFMsg.ObjectPropertyPBData)
  return false;
#undef DO_
}

void ObjectPropertyPBData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:AFMsg.ObjectPropertyPBData)
  // required .AFMsg.Ident player_id = 1;
  if (has_player_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->player_id_, output);
  }

  // repeated .AFMsg.PropertyPBData property_list = 2;
  for (unsigned int i = 0, n = this->property_list_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->property_list(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:AFMsg.ObjectPropertyPBData)
}

::google::protobuf::uint8* ObjectPropertyPBData::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:AFMsg.ObjectPropertyPBData)
  // required .AFMsg.Ident player_id = 1;
  if (has_player_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->player_id_, false, target);
  }

  // repeated .AFMsg.PropertyPBData property_list = 2;
  for (unsigned int i = 0, n = this->property_list_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->property_list(i), false, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AFMsg.ObjectPropertyPBData)
  return target;
}

int ObjectPropertyPBData::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:AFMsg.ObjectPropertyPBData)
  int total_size = 0;

  // required .AFMsg.Ident player_id = 1;
  if (has_player_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->player_id_);
  }
  // repeated .AFMsg.PropertyPBData property_list = 2;
  total_size += 1 * this->property_list_size();
  for (int i = 0; i < this->property_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->property_list(i));
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ObjectPropertyPBData::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:AFMsg.ObjectPropertyPBData)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const ObjectPropertyPBData* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const ObjectPropertyPBData>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:AFMsg.ObjectPropertyPBData)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:AFMsg.ObjectPropertyPBData)
    MergeFrom(*source);
  }
}

void ObjectPropertyPBData::MergeFrom(const ObjectPropertyPBData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:AFMsg.ObjectPropertyPBData)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  property_list_.MergeFrom(from.property_list_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_player_id()) {
      mutable_player_id()->::AFMsg::Ident::MergeFrom(from.player_id());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void ObjectPropertyPBData::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:AFMsg.ObjectPropertyPBData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ObjectPropertyPBData::CopyFrom(const ObjectPropertyPBData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:AFMsg.ObjectPropertyPBData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ObjectPropertyPBData::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  if (has_player_id()) {
    if (!this->player_id_->IsInitialized()) return false;
  }
  if (!::google::protobuf::internal::AllAreInitialized(this->property_list())) return false;
  return true;
}

void ObjectPropertyPBData::Swap(ObjectPropertyPBData* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ObjectPropertyPBData::InternalSwap(ObjectPropertyPBData* other) {
  std::swap(player_id_, other->player_id_);
  property_list_.UnsafeArenaSwap(&other->property_list_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ObjectPropertyPBData::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ObjectPropertyPBData_descriptor_;
  metadata.reflection = ObjectPropertyPBData_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ObjectPropertyPBData

// required .AFMsg.Ident player_id = 1;
bool ObjectPropertyPBData::has_player_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void ObjectPropertyPBData::set_has_player_id() {
  _has_bits_[0] |= 0x00000001u;
}
void ObjectPropertyPBData::clear_has_player_id() {
  _has_bits_[0] &= ~0x00000001u;
}
void ObjectPropertyPBData::clear_player_id() {
  if (player_id_ != NULL) player_id_->::AFMsg::Ident::Clear();
  clear_has_player_id();
}
const ::AFMsg::Ident& ObjectPropertyPBData::player_id() const {
  // @@protoc_insertion_point(field_get:AFMsg.ObjectPropertyPBData.player_id)
  return player_id_ != NULL ? *player_id_ : *default_instance_->player_id_;
}
::AFMsg::Ident* ObjectPropertyPBData::mutable_player_id() {
  set_has_player_id();
  if (player_id_ == NULL) {
    player_id_ = new ::AFMsg::Ident;
  }
  // @@protoc_insertion_point(field_mutable:AFMsg.ObjectPropertyPBData.player_id)
  return player_id_;
}
::AFMsg::Ident* ObjectPropertyPBData::release_player_id() {
  // @@protoc_insertion_point(field_release:AFMsg.ObjectPropertyPBData.player_id)
  clear_has_player_id();
  ::AFMsg::Ident* temp = player_id_;
  player_id_ = NULL;
  return temp;
}
void ObjectPropertyPBData::set_allocated_player_id(::AFMsg::Ident* player_id) {
  delete player_id_;
  player_id_ = player_id;
  if (player_id) {
    set_has_player_id();
  } else {
    clear_has_player_id();
  }
  // @@protoc_insertion_point(field_set_allocated:AFMsg.ObjectPropertyPBData.player_id)
}

// repeated .AFMsg.PropertyPBData property_list = 2;
int ObjectPropertyPBData::property_list_size() const {
  return property_list_.size();
}
void ObjectPropertyPBData::clear_property_list() {
  property_list_.Clear();
}
const ::AFMsg::PropertyPBData& ObjectPropertyPBData::property_list(int index) const {
  // @@protoc_insertion_point(field_get:AFMsg.ObjectPropertyPBData.property_list)
  return property_list_.Get(index);
}
::AFMsg::PropertyPBData* ObjectPropertyPBData::mutable_property_list(int index) {
  // @@protoc_insertion_point(field_mutable:AFMsg.ObjectPropertyPBData.property_list)
  return property_list_.Mutable(index);
}
::AFMsg::PropertyPBData* ObjectPropertyPBData::add_property_list() {
  // @@protoc_insertion_point(field_add:AFMsg.ObjectPropertyPBData.property_list)
  return property_list_.Add();
}
::google::protobuf::RepeatedPtrField< ::AFMsg::PropertyPBData >*
ObjectPropertyPBData::mutable_property_list() {
  // @@protoc_insertion_point(field_mutable_list:AFMsg.ObjectPropertyPBData.property_list)
  return &property_list_;
}
const ::google::protobuf::RepeatedPtrField< ::AFMsg::PropertyPBData >&
ObjectPropertyPBData::property_list() const {
  // @@protoc_insertion_point(field_list:AFMsg.ObjectPropertyPBData.property_list)
  return property_list_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ObjectRecordPBData::kPlayerIdFieldNumber;
const int ObjectRecordPBData::kRecordNameFieldNumber;
const int ObjectRecordPBData::kRecordListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ObjectRecordPBData::ObjectRecordPBData()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:AFMsg.ObjectRecordPBData)
}

void ObjectRecordPBData::InitAsDefaultInstance() {
  player_id_ = const_cast< ::AFMsg::Ident*>(&::AFMsg::Ident::default_instance());
}

ObjectRecordPBData::ObjectRecordPBData(const ObjectRecordPBData& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:AFMsg.ObjectRecordPBData)
}

void ObjectRecordPBData::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  player_id_ = NULL;
  record_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ObjectRecordPBData::~ObjectRecordPBData() {
  // @@protoc_insertion_point(destructor:AFMsg.ObjectRecordPBData)
  SharedDtor();
}

void ObjectRecordPBData::SharedDtor() {
  record_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
    delete player_id_;
  }
}

void ObjectRecordPBData::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ObjectRecordPBData::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ObjectRecordPBData_descriptor_;
}

const ObjectRecordPBData& ObjectRecordPBData::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_AFMsgBase_2eproto();
  return *default_instance_;
}

ObjectRecordPBData* ObjectRecordPBData::default_instance_ = NULL;

ObjectRecordPBData* ObjectRecordPBData::New(::google::protobuf::Arena* arena) const {
  ObjectRecordPBData* n = new ObjectRecordPBData;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ObjectRecordPBData::Clear() {
// @@protoc_insertion_point(message_clear_start:AFMsg.ObjectRecordPBData)
  if (_has_bits_[0 / 32] & 3u) {
    if (has_player_id()) {
      if (player_id_ != NULL) player_id_->::AFMsg::Ident::Clear();
    }
    if (has_record_name()) {
      record_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }
  record_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool ObjectRecordPBData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:AFMsg.ObjectRecordPBData)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .AFMsg.Ident player_id = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_player_id()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_record_name;
        break;
      }

      // required bytes record_name = 2;
      case 2: {
        if (tag == 18) {
         parse_record_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_record_name()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_record_list;
        break;
      }

      // repeated .AFMsg.RecordPBData record_list = 3;
      case 3: {
        if (tag == 26) {
         parse_record_list:
          DO_(input->IncrementRecursionDepth());
         parse_loop_record_list:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_record_list()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_loop_record_list;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:AFMsg.ObjectRecordPBData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:AFMsg.ObjectRecordPBData)
  return false;
#undef DO_
}

void ObjectRecordPBData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:AFMsg.ObjectRecordPBData)
  // required .AFMsg.Ident player_id = 1;
  if (has_player_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->player_id_, output);
  }

  // required bytes record_name = 2;
  if (has_record_name()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->record_name(), output);
  }

  // repeated .AFMsg.RecordPBData record_list = 3;
  for (unsigned int i = 0, n = this->record_list_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->record_list(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:AFMsg.ObjectRecordPBData)
}

::google::protobuf::uint8* ObjectRecordPBData::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:AFMsg.ObjectRecordPBData)
  // required .AFMsg.Ident player_id = 1;
  if (has_player_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->player_id_, false, target);
  }

  // required bytes record_name = 2;
  if (has_record_name()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->record_name(), target);
  }

  // repeated .AFMsg.RecordPBData record_list = 3;
  for (unsigned int i = 0, n = this->record_list_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, this->record_list(i), false, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AFMsg.ObjectRecordPBData)
  return target;
}

int ObjectRecordPBData::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:AFMsg.ObjectRecordPBData)
  int total_size = 0;

  if (has_player_id()) {
    // required .AFMsg.Ident player_id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->player_id_);
  }

  if (has_record_name()) {
    // required bytes record_name = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->record_name());
  }

  return total_size;
}
int ObjectRecordPBData::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:AFMsg.ObjectRecordPBData)
  int total_size = 0;

  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required .AFMsg.Ident player_id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->player_id_);

    // required bytes record_name = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->record_name());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // repeated .AFMsg.RecordPBData record_list = 3;
  total_size += 1 * this->record_list_size();
  for (int i = 0; i < this->record_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->record_list(i));
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ObjectRecordPBData::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:AFMsg.ObjectRecordPBData)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const ObjectRecordPBData* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const ObjectRecordPBData>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:AFMsg.ObjectRecordPBData)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:AFMsg.ObjectRecordPBData)
    MergeFrom(*source);
  }
}

void ObjectRecordPBData::MergeFrom(const ObjectRecordPBData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:AFMsg.ObjectRecordPBData)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  record_list_.MergeFrom(from.record_list_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_player_id()) {
      mutable_player_id()->::AFMsg::Ident::MergeFrom(from.player_id());
    }
    if (from.has_record_name()) {
      set_has_record_name();
      record_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.record_name_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void ObjectRecordPBData::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:AFMsg.ObjectRecordPBData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ObjectRecordPBData::CopyFrom(const ObjectRecordPBData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:AFMsg.ObjectRecordPBData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ObjectRecordPBData::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  if (has_player_id()) {
    if (!this->player_id_->IsInitialized()) return false;
  }
  if (!::google::protobuf::internal::AllAreInitialized(this->record_list())) return false;
  return true;
}

void ObjectRecordPBData::Swap(ObjectRecordPBData* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ObjectRecordPBData::InternalSwap(ObjectRecordPBData* other) {
  std::swap(player_id_, other->player_id_);
  record_name_.Swap(&other->record_name_);
  record_list_.UnsafeArenaSwap(&other->record_list_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ObjectRecordPBData::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ObjectRecordPBData_descriptor_;
  metadata.reflection = ObjectRecordPBData_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ObjectRecordPBData

// required .AFMsg.Ident player_id = 1;
bool ObjectRecordPBData::has_player_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void ObjectRecordPBData::set_has_player_id() {
  _has_bits_[0] |= 0x00000001u;
}
void ObjectRecordPBData::clear_has_player_id() {
  _has_bits_[0] &= ~0x00000001u;
}
void ObjectRecordPBData::clear_player_id() {
  if (player_id_ != NULL) player_id_->::AFMsg::Ident::Clear();
  clear_has_player_id();
}
const ::AFMsg::Ident& ObjectRecordPBData::player_id() const {
  // @@protoc_insertion_point(field_get:AFMsg.ObjectRecordPBData.player_id)
  return player_id_ != NULL ? *player_id_ : *default_instance_->player_id_;
}
::AFMsg::Ident* ObjectRecordPBData::mutable_player_id() {
  set_has_player_id();
  if (player_id_ == NULL) {
    player_id_ = new ::AFMsg::Ident;
  }
  // @@protoc_insertion_point(field_mutable:AFMsg.ObjectRecordPBData.player_id)
  return player_id_;
}
::AFMsg::Ident* ObjectRecordPBData::release_player_id() {
  // @@protoc_insertion_point(field_release:AFMsg.ObjectRecordPBData.player_id)
  clear_has_player_id();
  ::AFMsg::Ident* temp = player_id_;
  player_id_ = NULL;
  return temp;
}
void ObjectRecordPBData::set_allocated_player_id(::AFMsg::Ident* player_id) {
  delete player_id_;
  player_id_ = player_id;
  if (player_id) {
    set_has_player_id();
  } else {
    clear_has_player_id();
  }
  // @@protoc_insertion_point(field_set_allocated:AFMsg.ObjectRecordPBData.player_id)
}

// required bytes record_name = 2;
bool ObjectRecordPBData::has_record_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void ObjectRecordPBData::set_has_record_name() {
  _has_bits_[0] |= 0x00000002u;
}
void ObjectRecordPBData::clear_has_record_name() {
  _has_bits_[0] &= ~0x00000002u;
}
void ObjectRecordPBData::clear_record_name() {
  record_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_record_name();
}
 const ::std::string& ObjectRecordPBData::record_name() const {
  // @@protoc_insertion_point(field_get:AFMsg.ObjectRecordPBData.record_name)
  return record_name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ObjectRecordPBData::set_record_name(const ::std::string& value) {
  set_has_record_name();
  record_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:AFMsg.ObjectRecordPBData.record_name)
}
 void ObjectRecordPBData::set_record_name(const char* value) {
  set_has_record_name();
  record_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:AFMsg.ObjectRecordPBData.record_name)
}
 void ObjectRecordPBData::set_record_name(const void* value, size_t size) {
  set_has_record_name();
  record_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:AFMsg.ObjectRecordPBData.record_name)
}
 ::std::string* ObjectRecordPBData::mutable_record_name() {
  set_has_record_name();
  // @@protoc_insertion_point(field_mutable:AFMsg.ObjectRecordPBData.record_name)
  return record_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* ObjectRecordPBData::release_record_name() {
  // @@protoc_insertion_point(field_release:AFMsg.ObjectRecordPBData.record_name)
  clear_has_record_name();
  return record_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ObjectRecordPBData::set_allocated_record_name(::std::string* record_name) {
  if (record_name != NULL) {
    set_has_record_name();
  } else {
    clear_has_record_name();
  }
  record_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), record_name);
  // @@protoc_insertion_point(field_set_allocated:AFMsg.ObjectRecordPBData.record_name)
}

// repeated .AFMsg.RecordPBData record_list = 3;
int ObjectRecordPBData::record_list_size() const {
  return record_list_.size();
}
void ObjectRecordPBData::clear_record_list() {
  record_list_.Clear();
}
const ::AFMsg::RecordPBData& ObjectRecordPBData::record_list(int index) const {
  // @@protoc_insertion_point(field_get:AFMsg.ObjectRecordPBData.record_list)
  return record_list_.Get(index);
}
::AFMsg::RecordPBData* ObjectRecordPBData::mutable_record_list(int index) {
  // @@protoc_insertion_point(field_mutable:AFMsg.ObjectRecordPBData.record_list)
  return record_list_.Mutable(index);
}
::AFMsg::RecordPBData* ObjectRecordPBData::add_record_list() {
  // @@protoc_insertion_point(field_add:AFMsg.ObjectRecordPBData.record_list)
  return record_list_.Add();
}
::google::protobuf::RepeatedPtrField< ::AFMsg::RecordPBData >*
ObjectRecordPBData::mutable_record_list() {
  // @@protoc_insertion_point(field_mutable_list:AFMsg.ObjectRecordPBData.record_list)
  return &record_list_;
}
const ::google::protobuf::RepeatedPtrField< ::AFMsg::RecordPBData >&
ObjectRecordPBData::record_list() const {
  // @@protoc_insertion_point(field_list:AFMsg.ObjectRecordPBData.record_list)
  return record_list_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ObjectRecordSwap::kPlayerIdFieldNumber;
const int ObjectRecordSwap::kOriginRecordNameFieldNumber;
const int ObjectRecordSwap::kTargetRecordNameFieldNumber;
const int ObjectRecordSwap::kRowOriginFieldNumber;
const int ObjectRecordSwap::kRowTargetFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ObjectRecordSwap::ObjectRecordSwap()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:AFMsg.ObjectRecordSwap)
}

void ObjectRecordSwap::InitAsDefaultInstance() {
  player_id_ = const_cast< ::AFMsg::Ident*>(&::AFMsg::Ident::default_instance());
}

ObjectRecordSwap::ObjectRecordSwap(const ObjectRecordSwap& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:AFMsg.ObjectRecordSwap)
}

void ObjectRecordSwap::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  player_id_ = NULL;
  origin_record_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  target_record_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  row_origin_ = 0;
  row_target_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ObjectRecordSwap::~ObjectRecordSwap() {
  // @@protoc_insertion_point(destructor:AFMsg.ObjectRecordSwap)
  SharedDtor();
}

void ObjectRecordSwap::SharedDtor() {
  origin_record_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  target_record_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
    delete player_id_;
  }
}

void ObjectRecordSwap::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ObjectRecordSwap::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ObjectRecordSwap_descriptor_;
}

const ObjectRecordSwap& ObjectRecordSwap::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_AFMsgBase_2eproto();
  return *default_instance_;
}

ObjectRecordSwap* ObjectRecordSwap::default_instance_ = NULL;

ObjectRecordSwap* ObjectRecordSwap::New(::google::protobuf::Arena* arena) const {
  ObjectRecordSwap* n = new ObjectRecordSwap;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ObjectRecordSwap::Clear() {
// @@protoc_insertion_point(message_clear_start:AFMsg.ObjectRecordSwap)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(ObjectRecordSwap, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<ObjectRecordSwap*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  if (_has_bits_[0 / 32] & 31u) {
    ZR_(row_origin_, row_target_);
    if (has_player_id()) {
      if (player_id_ != NULL) player_id_->::AFMsg::Ident::Clear();
    }
    if (has_origin_record_name()) {
      origin_record_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_target_record_name()) {
      target_record_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool ObjectRecordSwap::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:AFMsg.ObjectRecordSwap)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .AFMsg.Ident player_id = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_player_id()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_origin_record_name;
        break;
      }

      // required bytes origin_record_name = 2;
      case 2: {
        if (tag == 18) {
         parse_origin_record_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_origin_record_name()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_target_record_name;
        break;
      }

      // optional bytes target_record_name = 3;
      case 3: {
        if (tag == 26) {
         parse_target_record_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_target_record_name()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_row_origin;
        break;
      }

      // required int32 row_origin = 4;
      case 4: {
        if (tag == 32) {
         parse_row_origin:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &row_origin_)));
          set_has_row_origin();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_row_target;
        break;
      }

      // required int32 row_target = 5;
      case 5: {
        if (tag == 40) {
         parse_row_target:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &row_target_)));
          set_has_row_target();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:AFMsg.ObjectRecordSwap)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:AFMsg.ObjectRecordSwap)
  return false;
#undef DO_
}

void ObjectRecordSwap::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:AFMsg.ObjectRecordSwap)
  // required .AFMsg.Ident player_id = 1;
  if (has_player_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->player_id_, output);
  }

  // required bytes origin_record_name = 2;
  if (has_origin_record_name()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->origin_record_name(), output);
  }

  // optional bytes target_record_name = 3;
  if (has_target_record_name()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->target_record_name(), output);
  }

  // required int32 row_origin = 4;
  if (has_row_origin()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->row_origin(), output);
  }

  // required int32 row_target = 5;
  if (has_row_target()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->row_target(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:AFMsg.ObjectRecordSwap)
}

::google::protobuf::uint8* ObjectRecordSwap::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:AFMsg.ObjectRecordSwap)
  // required .AFMsg.Ident player_id = 1;
  if (has_player_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->player_id_, false, target);
  }

  // required bytes origin_record_name = 2;
  if (has_origin_record_name()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->origin_record_name(), target);
  }

  // optional bytes target_record_name = 3;
  if (has_target_record_name()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->target_record_name(), target);
  }

  // required int32 row_origin = 4;
  if (has_row_origin()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->row_origin(), target);
  }

  // required int32 row_target = 5;
  if (has_row_target()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->row_target(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AFMsg.ObjectRecordSwap)
  return target;
}

int ObjectRecordSwap::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:AFMsg.ObjectRecordSwap)
  int total_size = 0;

  if (has_player_id()) {
    // required .AFMsg.Ident player_id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->player_id_);
  }

  if (has_origin_record_name()) {
    // required bytes origin_record_name = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->origin_record_name());
  }

  if (has_row_origin()) {
    // required int32 row_origin = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->row_origin());
  }

  if (has_row_target()) {
    // required int32 row_target = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->row_target());
  }

  return total_size;
}
int ObjectRecordSwap::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:AFMsg.ObjectRecordSwap)
  int total_size = 0;

  if (((_has_bits_[0] & 0x0000001b) ^ 0x0000001b) == 0) {  // All required fields are present.
    // required .AFMsg.Ident player_id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->player_id_);

    // required bytes origin_record_name = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->origin_record_name());

    // required int32 row_origin = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->row_origin());

    // required int32 row_target = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->row_target());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // optional bytes target_record_name = 3;
  if (has_target_record_name()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->target_record_name());
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ObjectRecordSwap::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:AFMsg.ObjectRecordSwap)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const ObjectRecordSwap* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const ObjectRecordSwap>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:AFMsg.ObjectRecordSwap)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:AFMsg.ObjectRecordSwap)
    MergeFrom(*source);
  }
}

void ObjectRecordSwap::MergeFrom(const ObjectRecordSwap& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:AFMsg.ObjectRecordSwap)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_player_id()) {
      mutable_player_id()->::AFMsg::Ident::MergeFrom(from.player_id());
    }
    if (from.has_origin_record_name()) {
      set_has_origin_record_name();
      origin_record_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.origin_record_name_);
    }
    if (from.has_target_record_name()) {
      set_has_target_record_name();
      target_record_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.target_record_name_);
    }
    if (from.has_row_origin()) {
      set_row_origin(from.row_origin());
    }
    if (from.has_row_target()) {
      set_row_target(from.row_target());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void ObjectRecordSwap::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:AFMsg.ObjectRecordSwap)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ObjectRecordSwap::CopyFrom(const ObjectRecordSwap& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:AFMsg.ObjectRecordSwap)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ObjectRecordSwap::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000001b) != 0x0000001b) return false;

  if (has_player_id()) {
    if (!this->player_id_->IsInitialized()) return false;
  }
  return true;
}

void ObjectRecordSwap::Swap(ObjectRecordSwap* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ObjectRecordSwap::InternalSwap(ObjectRecordSwap* other) {
  std::swap(player_id_, other->player_id_);
  origin_record_name_.Swap(&other->origin_record_name_);
  target_record_name_.Swap(&other->target_record_name_);
  std::swap(row_origin_, other->row_origin_);
  std::swap(row_target_, other->row_target_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ObjectRecordSwap::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ObjectRecordSwap_descriptor_;
  metadata.reflection = ObjectRecordSwap_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ObjectRecordSwap

// required .AFMsg.Ident player_id = 1;
bool ObjectRecordSwap::has_player_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void ObjectRecordSwap::set_has_player_id() {
  _has_bits_[0] |= 0x00000001u;
}
void ObjectRecordSwap::clear_has_player_id() {
  _has_bits_[0] &= ~0x00000001u;
}
void ObjectRecordSwap::clear_player_id() {
  if (player_id_ != NULL) player_id_->::AFMsg::Ident::Clear();
  clear_has_player_id();
}
const ::AFMsg::Ident& ObjectRecordSwap::player_id() const {
  // @@protoc_insertion_point(field_get:AFMsg.ObjectRecordSwap.player_id)
  return player_id_ != NULL ? *player_id_ : *default_instance_->player_id_;
}
::AFMsg::Ident* ObjectRecordSwap::mutable_player_id() {
  set_has_player_id();
  if (player_id_ == NULL) {
    player_id_ = new ::AFMsg::Ident;
  }
  // @@protoc_insertion_point(field_mutable:AFMsg.ObjectRecordSwap.player_id)
  return player_id_;
}
::AFMsg::Ident* ObjectRecordSwap::release_player_id() {
  // @@protoc_insertion_point(field_release:AFMsg.ObjectRecordSwap.player_id)
  clear_has_player_id();
  ::AFMsg::Ident* temp = player_id_;
  player_id_ = NULL;
  return temp;
}
void ObjectRecordSwap::set_allocated_player_id(::AFMsg::Ident* player_id) {
  delete player_id_;
  player_id_ = player_id;
  if (player_id) {
    set_has_player_id();
  } else {
    clear_has_player_id();
  }
  // @@protoc_insertion_point(field_set_allocated:AFMsg.ObjectRecordSwap.player_id)
}

// required bytes origin_record_name = 2;
bool ObjectRecordSwap::has_origin_record_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void ObjectRecordSwap::set_has_origin_record_name() {
  _has_bits_[0] |= 0x00000002u;
}
void ObjectRecordSwap::clear_has_origin_record_name() {
  _has_bits_[0] &= ~0x00000002u;
}
void ObjectRecordSwap::clear_origin_record_name() {
  origin_record_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_origin_record_name();
}
 const ::std::string& ObjectRecordSwap::origin_record_name() const {
  // @@protoc_insertion_point(field_get:AFMsg.ObjectRecordSwap.origin_record_name)
  return origin_record_name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ObjectRecordSwap::set_origin_record_name(const ::std::string& value) {
  set_has_origin_record_name();
  origin_record_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:AFMsg.ObjectRecordSwap.origin_record_name)
}
 void ObjectRecordSwap::set_origin_record_name(const char* value) {
  set_has_origin_record_name();
  origin_record_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:AFMsg.ObjectRecordSwap.origin_record_name)
}
 void ObjectRecordSwap::set_origin_record_name(const void* value, size_t size) {
  set_has_origin_record_name();
  origin_record_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:AFMsg.ObjectRecordSwap.origin_record_name)
}
 ::std::string* ObjectRecordSwap::mutable_origin_record_name() {
  set_has_origin_record_name();
  // @@protoc_insertion_point(field_mutable:AFMsg.ObjectRecordSwap.origin_record_name)
  return origin_record_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* ObjectRecordSwap::release_origin_record_name() {
  // @@protoc_insertion_point(field_release:AFMsg.ObjectRecordSwap.origin_record_name)
  clear_has_origin_record_name();
  return origin_record_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ObjectRecordSwap::set_allocated_origin_record_name(::std::string* origin_record_name) {
  if (origin_record_name != NULL) {
    set_has_origin_record_name();
  } else {
    clear_has_origin_record_name();
  }
  origin_record_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), origin_record_name);
  // @@protoc_insertion_point(field_set_allocated:AFMsg.ObjectRecordSwap.origin_record_name)
}

// optional bytes target_record_name = 3;
bool ObjectRecordSwap::has_target_record_name() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void ObjectRecordSwap::set_has_target_record_name() {
  _has_bits_[0] |= 0x00000004u;
}
void ObjectRecordSwap::clear_has_target_record_name() {
  _has_bits_[0] &= ~0x00000004u;
}
void ObjectRecordSwap::clear_target_record_name() {
  target_record_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_target_record_name();
}
 const ::std::string& ObjectRecordSwap::target_record_name() const {
  // @@protoc_insertion_point(field_get:AFMsg.ObjectRecordSwap.target_record_name)
  return target_record_name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ObjectRecordSwap::set_target_record_name(const ::std::string& value) {
  set_has_target_record_name();
  target_record_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:AFMsg.ObjectRecordSwap.target_record_name)
}
 void ObjectRecordSwap::set_target_record_name(const char* value) {
  set_has_target_record_name();
  target_record_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:AFMsg.ObjectRecordSwap.target_record_name)
}
 void ObjectRecordSwap::set_target_record_name(const void* value, size_t size) {
  set_has_target_record_name();
  target_record_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:AFMsg.ObjectRecordSwap.target_record_name)
}
 ::std::string* ObjectRecordSwap::mutable_target_record_name() {
  set_has_target_record_name();
  // @@protoc_insertion_point(field_mutable:AFMsg.ObjectRecordSwap.target_record_name)
  return target_record_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* ObjectRecordSwap::release_target_record_name() {
  // @@protoc_insertion_point(field_release:AFMsg.ObjectRecordSwap.target_record_name)
  clear_has_target_record_name();
  return target_record_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ObjectRecordSwap::set_allocated_target_record_name(::std::string* target_record_name) {
  if (target_record_name != NULL) {
    set_has_target_record_name();
  } else {
    clear_has_target_record_name();
  }
  target_record_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), target_record_name);
  // @@protoc_insertion_point(field_set_allocated:AFMsg.ObjectRecordSwap.target_record_name)
}

// required int32 row_origin = 4;
bool ObjectRecordSwap::has_row_origin() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void ObjectRecordSwap::set_has_row_origin() {
  _has_bits_[0] |= 0x00000008u;
}
void ObjectRecordSwap::clear_has_row_origin() {
  _has_bits_[0] &= ~0x00000008u;
}
void ObjectRecordSwap::clear_row_origin() {
  row_origin_ = 0;
  clear_has_row_origin();
}
 ::google::protobuf::int32 ObjectRecordSwap::row_origin() const {
  // @@protoc_insertion_point(field_get:AFMsg.ObjectRecordSwap.row_origin)
  return row_origin_;
}
 void ObjectRecordSwap::set_row_origin(::google::protobuf::int32 value) {
  set_has_row_origin();
  row_origin_ = value;
  // @@protoc_insertion_point(field_set:AFMsg.ObjectRecordSwap.row_origin)
}

// required int32 row_target = 5;
bool ObjectRecordSwap::has_row_target() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void ObjectRecordSwap::set_has_row_target() {
  _has_bits_[0] |= 0x00000010u;
}
void ObjectRecordSwap::clear_has_row_target() {
  _has_bits_[0] &= ~0x00000010u;
}
void ObjectRecordSwap::clear_row_target() {
  row_target_ = 0;
  clear_has_row_target();
}
 ::google::protobuf::int32 ObjectRecordSwap::row_target() const {
  // @@protoc_insertion_point(field_get:AFMsg.ObjectRecordSwap.row_target)
  return row_target_;
}
 void ObjectRecordSwap::set_row_target(::google::protobuf::int32 value) {
  set_has_row_target();
  row_target_ = value;
  // @@protoc_insertion_point(field_set:AFMsg.ObjectRecordSwap.row_target)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ObjectRecordAddRow::kPlayerIdFieldNumber;
const int ObjectRecordAddRow::kRecordNameFieldNumber;
const int ObjectRecordAddRow::kRowDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ObjectRecordAddRow::ObjectRecordAddRow()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:AFMsg.ObjectRecordAddRow)
}

void ObjectRecordAddRow::InitAsDefaultInstance() {
  player_id_ = const_cast< ::AFMsg::Ident*>(&::AFMsg::Ident::default_instance());
}

ObjectRecordAddRow::ObjectRecordAddRow(const ObjectRecordAddRow& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:AFMsg.ObjectRecordAddRow)
}

void ObjectRecordAddRow::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  player_id_ = NULL;
  record_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ObjectRecordAddRow::~ObjectRecordAddRow() {
  // @@protoc_insertion_point(destructor:AFMsg.ObjectRecordAddRow)
  SharedDtor();
}

void ObjectRecordAddRow::SharedDtor() {
  record_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
    delete player_id_;
  }
}

void ObjectRecordAddRow::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ObjectRecordAddRow::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ObjectRecordAddRow_descriptor_;
}

const ObjectRecordAddRow& ObjectRecordAddRow::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_AFMsgBase_2eproto();
  return *default_instance_;
}

ObjectRecordAddRow* ObjectRecordAddRow::default_instance_ = NULL;

ObjectRecordAddRow* ObjectRecordAddRow::New(::google::protobuf::Arena* arena) const {
  ObjectRecordAddRow* n = new ObjectRecordAddRow;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ObjectRecordAddRow::Clear() {
// @@protoc_insertion_point(message_clear_start:AFMsg.ObjectRecordAddRow)
  if (_has_bits_[0 / 32] & 3u) {
    if (has_player_id()) {
      if (player_id_ != NULL) player_id_->::AFMsg::Ident::Clear();
    }
    if (has_record_name()) {
      record_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }
  row_data_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool ObjectRecordAddRow::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:AFMsg.ObjectRecordAddRow)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .AFMsg.Ident player_id = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_player_id()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_record_name;
        break;
      }

      // required bytes record_name = 2;
      case 2: {
        if (tag == 18) {
         parse_record_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_record_name()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_row_data;
        break;
      }

      // repeated .AFMsg.RecordAddRowStruct row_data = 3;
      case 3: {
        if (tag == 26) {
         parse_row_data:
          DO_(input->IncrementRecursionDepth());
         parse_loop_row_data:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_row_data()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_loop_row_data;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:AFMsg.ObjectRecordAddRow)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:AFMsg.ObjectRecordAddRow)
  return false;
#undef DO_
}

void ObjectRecordAddRow::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:AFMsg.ObjectRecordAddRow)
  // required .AFMsg.Ident player_id = 1;
  if (has_player_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->player_id_, output);
  }

  // required bytes record_name = 2;
  if (has_record_name()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->record_name(), output);
  }

  // repeated .AFMsg.RecordAddRowStruct row_data = 3;
  for (unsigned int i = 0, n = this->row_data_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->row_data(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:AFMsg.ObjectRecordAddRow)
}

::google::protobuf::uint8* ObjectRecordAddRow::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:AFMsg.ObjectRecordAddRow)
  // required .AFMsg.Ident player_id = 1;
  if (has_player_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->player_id_, false, target);
  }

  // required bytes record_name = 2;
  if (has_record_name()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->record_name(), target);
  }

  // repeated .AFMsg.RecordAddRowStruct row_data = 3;
  for (unsigned int i = 0, n = this->row_data_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, this->row_data(i), false, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AFMsg.ObjectRecordAddRow)
  return target;
}

int ObjectRecordAddRow::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:AFMsg.ObjectRecordAddRow)
  int total_size = 0;

  if (has_player_id()) {
    // required .AFMsg.Ident player_id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->player_id_);
  }

  if (has_record_name()) {
    // required bytes record_name = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->record_name());
  }

  return total_size;
}
int ObjectRecordAddRow::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:AFMsg.ObjectRecordAddRow)
  int total_size = 0;

  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required .AFMsg.Ident player_id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->player_id_);

    // required bytes record_name = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->record_name());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // repeated .AFMsg.RecordAddRowStruct row_data = 3;
  total_size += 1 * this->row_data_size();
  for (int i = 0; i < this->row_data_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->row_data(i));
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ObjectRecordAddRow::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:AFMsg.ObjectRecordAddRow)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const ObjectRecordAddRow* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const ObjectRecordAddRow>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:AFMsg.ObjectRecordAddRow)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:AFMsg.ObjectRecordAddRow)
    MergeFrom(*source);
  }
}

void ObjectRecordAddRow::MergeFrom(const ObjectRecordAddRow& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:AFMsg.ObjectRecordAddRow)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  row_data_.MergeFrom(from.row_data_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_player_id()) {
      mutable_player_id()->::AFMsg::Ident::MergeFrom(from.player_id());
    }
    if (from.has_record_name()) {
      set_has_record_name();
      record_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.record_name_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void ObjectRecordAddRow::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:AFMsg.ObjectRecordAddRow)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ObjectRecordAddRow::CopyFrom(const ObjectRecordAddRow& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:AFMsg.ObjectRecordAddRow)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ObjectRecordAddRow::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  if (has_player_id()) {
    if (!this->player_id_->IsInitialized()) return false;
  }
  if (!::google::protobuf::internal::AllAreInitialized(this->row_data())) return false;
  return true;
}

void ObjectRecordAddRow::Swap(ObjectRecordAddRow* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ObjectRecordAddRow::InternalSwap(ObjectRecordAddRow* other) {
  std::swap(player_id_, other->player_id_);
  record_name_.Swap(&other->record_name_);
  row_data_.UnsafeArenaSwap(&other->row_data_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ObjectRecordAddRow::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ObjectRecordAddRow_descriptor_;
  metadata.reflection = ObjectRecordAddRow_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ObjectRecordAddRow

// required .AFMsg.Ident player_id = 1;
bool ObjectRecordAddRow::has_player_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void ObjectRecordAddRow::set_has_player_id() {
  _has_bits_[0] |= 0x00000001u;
}
void ObjectRecordAddRow::clear_has_player_id() {
  _has_bits_[0] &= ~0x00000001u;
}
void ObjectRecordAddRow::clear_player_id() {
  if (player_id_ != NULL) player_id_->::AFMsg::Ident::Clear();
  clear_has_player_id();
}
const ::AFMsg::Ident& ObjectRecordAddRow::player_id() const {
  // @@protoc_insertion_point(field_get:AFMsg.ObjectRecordAddRow.player_id)
  return player_id_ != NULL ? *player_id_ : *default_instance_->player_id_;
}
::AFMsg::Ident* ObjectRecordAddRow::mutable_player_id() {
  set_has_player_id();
  if (player_id_ == NULL) {
    player_id_ = new ::AFMsg::Ident;
  }
  // @@protoc_insertion_point(field_mutable:AFMsg.ObjectRecordAddRow.player_id)
  return player_id_;
}
::AFMsg::Ident* ObjectRecordAddRow::release_player_id() {
  // @@protoc_insertion_point(field_release:AFMsg.ObjectRecordAddRow.player_id)
  clear_has_player_id();
  ::AFMsg::Ident* temp = player_id_;
  player_id_ = NULL;
  return temp;
}
void ObjectRecordAddRow::set_allocated_player_id(::AFMsg::Ident* player_id) {
  delete player_id_;
  player_id_ = player_id;
  if (player_id) {
    set_has_player_id();
  } else {
    clear_has_player_id();
  }
  // @@protoc_insertion_point(field_set_allocated:AFMsg.ObjectRecordAddRow.player_id)
}

// required bytes record_name = 2;
bool ObjectRecordAddRow::has_record_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void ObjectRecordAddRow::set_has_record_name() {
  _has_bits_[0] |= 0x00000002u;
}
void ObjectRecordAddRow::clear_has_record_name() {
  _has_bits_[0] &= ~0x00000002u;
}
void ObjectRecordAddRow::clear_record_name() {
  record_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_record_name();
}
 const ::std::string& ObjectRecordAddRow::record_name() const {
  // @@protoc_insertion_point(field_get:AFMsg.ObjectRecordAddRow.record_name)
  return record_name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ObjectRecordAddRow::set_record_name(const ::std::string& value) {
  set_has_record_name();
  record_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:AFMsg.ObjectRecordAddRow.record_name)
}
 void ObjectRecordAddRow::set_record_name(const char* value) {
  set_has_record_name();
  record_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:AFMsg.ObjectRecordAddRow.record_name)
}
 void ObjectRecordAddRow::set_record_name(const void* value, size_t size) {
  set_has_record_name();
  record_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:AFMsg.ObjectRecordAddRow.record_name)
}
 ::std::string* ObjectRecordAddRow::mutable_record_name() {
  set_has_record_name();
  // @@protoc_insertion_point(field_mutable:AFMsg.ObjectRecordAddRow.record_name)
  return record_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* ObjectRecordAddRow::release_record_name() {
  // @@protoc_insertion_point(field_release:AFMsg.ObjectRecordAddRow.record_name)
  clear_has_record_name();
  return record_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ObjectRecordAddRow::set_allocated_record_name(::std::string* record_name) {
  if (record_name != NULL) {
    set_has_record_name();
  } else {
    clear_has_record_name();
  }
  record_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), record_name);
  // @@protoc_insertion_point(field_set_allocated:AFMsg.ObjectRecordAddRow.record_name)
}

// repeated .AFMsg.RecordAddRowStruct row_data = 3;
int ObjectRecordAddRow::row_data_size() const {
  return row_data_.size();
}
void ObjectRecordAddRow::clear_row_data() {
  row_data_.Clear();
}
const ::AFMsg::RecordAddRowStruct& ObjectRecordAddRow::row_data(int index) const {
  // @@protoc_insertion_point(field_get:AFMsg.ObjectRecordAddRow.row_data)
  return row_data_.Get(index);
}
::AFMsg::RecordAddRowStruct* ObjectRecordAddRow::mutable_row_data(int index) {
  // @@protoc_insertion_point(field_mutable:AFMsg.ObjectRecordAddRow.row_data)
  return row_data_.Mutable(index);
}
::AFMsg::RecordAddRowStruct* ObjectRecordAddRow::add_row_data() {
  // @@protoc_insertion_point(field_add:AFMsg.ObjectRecordAddRow.row_data)
  return row_data_.Add();
}
::google::protobuf::RepeatedPtrField< ::AFMsg::RecordAddRowStruct >*
ObjectRecordAddRow::mutable_row_data() {
  // @@protoc_insertion_point(field_mutable_list:AFMsg.ObjectRecordAddRow.row_data)
  return &row_data_;
}
const ::google::protobuf::RepeatedPtrField< ::AFMsg::RecordAddRowStruct >&
ObjectRecordAddRow::row_data() const {
  // @@protoc_insertion_point(field_list:AFMsg.ObjectRecordAddRow.row_data)
  return row_data_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ObjectRecordRemove::kPlayerIdFieldNumber;
const int ObjectRecordRemove::kRecordNameFieldNumber;
const int ObjectRecordRemove::kRemoveRowFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ObjectRecordRemove::ObjectRecordRemove()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:AFMsg.ObjectRecordRemove)
}

void ObjectRecordRemove::InitAsDefaultInstance() {
  player_id_ = const_cast< ::AFMsg::Ident*>(&::AFMsg::Ident::default_instance());
}

ObjectRecordRemove::ObjectRecordRemove(const ObjectRecordRemove& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:AFMsg.ObjectRecordRemove)
}

void ObjectRecordRemove::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  player_id_ = NULL;
  record_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ObjectRecordRemove::~ObjectRecordRemove() {
  // @@protoc_insertion_point(destructor:AFMsg.ObjectRecordRemove)
  SharedDtor();
}

void ObjectRecordRemove::SharedDtor() {
  record_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
    delete player_id_;
  }
}

void ObjectRecordRemove::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ObjectRecordRemove::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ObjectRecordRemove_descriptor_;
}

const ObjectRecordRemove& ObjectRecordRemove::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_AFMsgBase_2eproto();
  return *default_instance_;
}

ObjectRecordRemove* ObjectRecordRemove::default_instance_ = NULL;

ObjectRecordRemove* ObjectRecordRemove::New(::google::protobuf::Arena* arena) const {
  ObjectRecordRemove* n = new ObjectRecordRemove;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ObjectRecordRemove::Clear() {
// @@protoc_insertion_point(message_clear_start:AFMsg.ObjectRecordRemove)
  if (_has_bits_[0 / 32] & 3u) {
    if (has_player_id()) {
      if (player_id_ != NULL) player_id_->::AFMsg::Ident::Clear();
    }
    if (has_record_name()) {
      record_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }
  remove_row_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool ObjectRecordRemove::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:AFMsg.ObjectRecordRemove)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .AFMsg.Ident player_id = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_player_id()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_record_name;
        break;
      }

      // required bytes record_name = 2;
      case 2: {
        if (tag == 18) {
         parse_record_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_record_name()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_remove_row;
        break;
      }

      // repeated int32 remove_row = 3;
      case 3: {
        if (tag == 24) {
         parse_remove_row:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 24, input, this->mutable_remove_row())));
        } else if (tag == 26) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_remove_row())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_remove_row;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:AFMsg.ObjectRecordRemove)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:AFMsg.ObjectRecordRemove)
  return false;
#undef DO_
}

void ObjectRecordRemove::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:AFMsg.ObjectRecordRemove)
  // required .AFMsg.Ident player_id = 1;
  if (has_player_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->player_id_, output);
  }

  // required bytes record_name = 2;
  if (has_record_name()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->record_name(), output);
  }

  // repeated int32 remove_row = 3;
  for (int i = 0; i < this->remove_row_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      3, this->remove_row(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:AFMsg.ObjectRecordRemove)
}

::google::protobuf::uint8* ObjectRecordRemove::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:AFMsg.ObjectRecordRemove)
  // required .AFMsg.Ident player_id = 1;
  if (has_player_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->player_id_, false, target);
  }

  // required bytes record_name = 2;
  if (has_record_name()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->record_name(), target);
  }

  // repeated int32 remove_row = 3;
  for (int i = 0; i < this->remove_row_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(3, this->remove_row(i), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AFMsg.ObjectRecordRemove)
  return target;
}

int ObjectRecordRemove::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:AFMsg.ObjectRecordRemove)
  int total_size = 0;

  if (has_player_id()) {
    // required .AFMsg.Ident player_id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->player_id_);
  }

  if (has_record_name()) {
    // required bytes record_name = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->record_name());
  }

  return total_size;
}
int ObjectRecordRemove::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:AFMsg.ObjectRecordRemove)
  int total_size = 0;

  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required .AFMsg.Ident player_id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->player_id_);

    // required bytes record_name = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->record_name());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // repeated int32 remove_row = 3;
  {
    int data_size = 0;
    for (int i = 0; i < this->remove_row_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->remove_row(i));
    }
    total_size += 1 * this->remove_row_size() + data_size;
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ObjectRecordRemove::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:AFMsg.ObjectRecordRemove)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const ObjectRecordRemove* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const ObjectRecordRemove>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:AFMsg.ObjectRecordRemove)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:AFMsg.ObjectRecordRemove)
    MergeFrom(*source);
  }
}

void ObjectRecordRemove::MergeFrom(const ObjectRecordRemove& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:AFMsg.ObjectRecordRemove)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  remove_row_.MergeFrom(from.remove_row_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_player_id()) {
      mutable_player_id()->::AFMsg::Ident::MergeFrom(from.player_id());
    }
    if (from.has_record_name()) {
      set_has_record_name();
      record_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.record_name_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void ObjectRecordRemove::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:AFMsg.ObjectRecordRemove)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ObjectRecordRemove::CopyFrom(const ObjectRecordRemove& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:AFMsg.ObjectRecordRemove)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ObjectRecordRemove::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  if (has_player_id()) {
    if (!this->player_id_->IsInitialized()) return false;
  }
  return true;
}

void ObjectRecordRemove::Swap(ObjectRecordRemove* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ObjectRecordRemove::InternalSwap(ObjectRecordRemove* other) {
  std::swap(player_id_, other->player_id_);
  record_name_.Swap(&other->record_name_);
  remove_row_.UnsafeArenaSwap(&other->remove_row_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ObjectRecordRemove::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ObjectRecordRemove_descriptor_;
  metadata.reflection = ObjectRecordRemove_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ObjectRecordRemove

// required .AFMsg.Ident player_id = 1;
bool ObjectRecordRemove::has_player_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void ObjectRecordRemove::set_has_player_id() {
  _has_bits_[0] |= 0x00000001u;
}
void ObjectRecordRemove::clear_has_player_id() {
  _has_bits_[0] &= ~0x00000001u;
}
void ObjectRecordRemove::clear_player_id() {
  if (player_id_ != NULL) player_id_->::AFMsg::Ident::Clear();
  clear_has_player_id();
}
const ::AFMsg::Ident& ObjectRecordRemove::player_id() const {
  // @@protoc_insertion_point(field_get:AFMsg.ObjectRecordRemove.player_id)
  return player_id_ != NULL ? *player_id_ : *default_instance_->player_id_;
}
::AFMsg::Ident* ObjectRecordRemove::mutable_player_id() {
  set_has_player_id();
  if (player_id_ == NULL) {
    player_id_ = new ::AFMsg::Ident;
  }
  // @@protoc_insertion_point(field_mutable:AFMsg.ObjectRecordRemove.player_id)
  return player_id_;
}
::AFMsg::Ident* ObjectRecordRemove::release_player_id() {
  // @@protoc_insertion_point(field_release:AFMsg.ObjectRecordRemove.player_id)
  clear_has_player_id();
  ::AFMsg::Ident* temp = player_id_;
  player_id_ = NULL;
  return temp;
}
void ObjectRecordRemove::set_allocated_player_id(::AFMsg::Ident* player_id) {
  delete player_id_;
  player_id_ = player_id;
  if (player_id) {
    set_has_player_id();
  } else {
    clear_has_player_id();
  }
  // @@protoc_insertion_point(field_set_allocated:AFMsg.ObjectRecordRemove.player_id)
}

// required bytes record_name = 2;
bool ObjectRecordRemove::has_record_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void ObjectRecordRemove::set_has_record_name() {
  _has_bits_[0] |= 0x00000002u;
}
void ObjectRecordRemove::clear_has_record_name() {
  _has_bits_[0] &= ~0x00000002u;
}
void ObjectRecordRemove::clear_record_name() {
  record_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_record_name();
}
 const ::std::string& ObjectRecordRemove::record_name() const {
  // @@protoc_insertion_point(field_get:AFMsg.ObjectRecordRemove.record_name)
  return record_name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ObjectRecordRemove::set_record_name(const ::std::string& value) {
  set_has_record_name();
  record_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:AFMsg.ObjectRecordRemove.record_name)
}
 void ObjectRecordRemove::set_record_name(const char* value) {
  set_has_record_name();
  record_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:AFMsg.ObjectRecordRemove.record_name)
}
 void ObjectRecordRemove::set_record_name(const void* value, size_t size) {
  set_has_record_name();
  record_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:AFMsg.ObjectRecordRemove.record_name)
}
 ::std::string* ObjectRecordRemove::mutable_record_name() {
  set_has_record_name();
  // @@protoc_insertion_point(field_mutable:AFMsg.ObjectRecordRemove.record_name)
  return record_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* ObjectRecordRemove::release_record_name() {
  // @@protoc_insertion_point(field_release:AFMsg.ObjectRecordRemove.record_name)
  clear_has_record_name();
  return record_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ObjectRecordRemove::set_allocated_record_name(::std::string* record_name) {
  if (record_name != NULL) {
    set_has_record_name();
  } else {
    clear_has_record_name();
  }
  record_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), record_name);
  // @@protoc_insertion_point(field_set_allocated:AFMsg.ObjectRecordRemove.record_name)
}

// repeated int32 remove_row = 3;
int ObjectRecordRemove::remove_row_size() const {
  return remove_row_.size();
}
void ObjectRecordRemove::clear_remove_row() {
  remove_row_.Clear();
}
 ::google::protobuf::int32 ObjectRecordRemove::remove_row(int index) const {
  // @@protoc_insertion_point(field_get:AFMsg.ObjectRecordRemove.remove_row)
  return remove_row_.Get(index);
}
 void ObjectRecordRemove::set_remove_row(int index, ::google::protobuf::int32 value) {
  remove_row_.Set(index, value);
  // @@protoc_insertion_point(field_set:AFMsg.ObjectRecordRemove.remove_row)
}
 void ObjectRecordRemove::add_remove_row(::google::protobuf::int32 value) {
  remove_row_.Add(value);
  // @@protoc_insertion_point(field_add:AFMsg.ObjectRecordRemove.remove_row)
}
 const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
ObjectRecordRemove::remove_row() const {
  // @@protoc_insertion_point(field_list:AFMsg.ObjectRecordRemove.remove_row)
  return remove_row_;
}
 ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
ObjectRecordRemove::mutable_remove_row() {
  // @@protoc_insertion_point(field_mutable_list:AFMsg.ObjectRecordRemove.remove_row)
  return &remove_row_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PlayerPropertyBase::kPropertyDataListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PlayerPropertyBase::PlayerPropertyBase()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:AFMsg.PlayerPropertyBase)
}

void PlayerPropertyBase::InitAsDefaultInstance() {
}

PlayerPropertyBase::PlayerPropertyBase(const PlayerPropertyBase& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:AFMsg.PlayerPropertyBase)
}

void PlayerPropertyBase::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PlayerPropertyBase::~PlayerPropertyBase() {
  // @@protoc_insertion_point(destructor:AFMsg.PlayerPropertyBase)
  SharedDtor();
}

void PlayerPropertyBase::SharedDtor() {
  if (this != default_instance_) {
  }
}

void PlayerPropertyBase::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PlayerPropertyBase::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PlayerPropertyBase_descriptor_;
}

const PlayerPropertyBase& PlayerPropertyBase::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_AFMsgBase_2eproto();
  return *default_instance_;
}

PlayerPropertyBase* PlayerPropertyBase::default_instance_ = NULL;

PlayerPropertyBase* PlayerPropertyBase::New(::google::protobuf::Arena* arena) const {
  PlayerPropertyBase* n = new PlayerPropertyBase;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PlayerPropertyBase::Clear() {
// @@protoc_insertion_point(message_clear_start:AFMsg.PlayerPropertyBase)
  property_data_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool PlayerPropertyBase::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:AFMsg.PlayerPropertyBase)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .AFMsg.PropertyPBData property_data_list = 1;
      case 1: {
        if (tag == 10) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_property_data_list:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_property_data_list()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_loop_property_data_list;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:AFMsg.PlayerPropertyBase)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:AFMsg.PlayerPropertyBase)
  return false;
#undef DO_
}

void PlayerPropertyBase::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:AFMsg.PlayerPropertyBase)
  // repeated .AFMsg.PropertyPBData property_data_list = 1;
  for (unsigned int i = 0, n = this->property_data_list_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->property_data_list(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:AFMsg.PlayerPropertyBase)
}

::google::protobuf::uint8* PlayerPropertyBase::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:AFMsg.PlayerPropertyBase)
  // repeated .AFMsg.PropertyPBData property_data_list = 1;
  for (unsigned int i = 0, n = this->property_data_list_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->property_data_list(i), false, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AFMsg.PlayerPropertyBase)
  return target;
}

int PlayerPropertyBase::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:AFMsg.PlayerPropertyBase)
  int total_size = 0;

  // repeated .AFMsg.PropertyPBData property_data_list = 1;
  total_size += 1 * this->property_data_list_size();
  for (int i = 0; i < this->property_data_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->property_data_list(i));
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PlayerPropertyBase::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:AFMsg.PlayerPropertyBase)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const PlayerPropertyBase* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const PlayerPropertyBase>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:AFMsg.PlayerPropertyBase)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:AFMsg.PlayerPropertyBase)
    MergeFrom(*source);
  }
}

void PlayerPropertyBase::MergeFrom(const PlayerPropertyBase& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:AFMsg.PlayerPropertyBase)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  property_data_list_.MergeFrom(from.property_data_list_);
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void PlayerPropertyBase::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:AFMsg.PlayerPropertyBase)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PlayerPropertyBase::CopyFrom(const PlayerPropertyBase& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:AFMsg.PlayerPropertyBase)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PlayerPropertyBase::IsInitialized() const {

  if (!::google::protobuf::internal::AllAreInitialized(this->property_data_list())) return false;
  return true;
}

void PlayerPropertyBase::Swap(PlayerPropertyBase* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PlayerPropertyBase::InternalSwap(PlayerPropertyBase* other) {
  property_data_list_.UnsafeArenaSwap(&other->property_data_list_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PlayerPropertyBase::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PlayerPropertyBase_descriptor_;
  metadata.reflection = PlayerPropertyBase_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PlayerPropertyBase

// repeated .AFMsg.PropertyPBData property_data_list = 1;
int PlayerPropertyBase::property_data_list_size() const {
  return property_data_list_.size();
}
void PlayerPropertyBase::clear_property_data_list() {
  property_data_list_.Clear();
}
const ::AFMsg::PropertyPBData& PlayerPropertyBase::property_data_list(int index) const {
  // @@protoc_insertion_point(field_get:AFMsg.PlayerPropertyBase.property_data_list)
  return property_data_list_.Get(index);
}
::AFMsg::PropertyPBData* PlayerPropertyBase::mutable_property_data_list(int index) {
  // @@protoc_insertion_point(field_mutable:AFMsg.PlayerPropertyBase.property_data_list)
  return property_data_list_.Mutable(index);
}
::AFMsg::PropertyPBData* PlayerPropertyBase::add_property_data_list() {
  // @@protoc_insertion_point(field_add:AFMsg.PlayerPropertyBase.property_data_list)
  return property_data_list_.Add();
}
::google::protobuf::RepeatedPtrField< ::AFMsg::PropertyPBData >*
PlayerPropertyBase::mutable_property_data_list() {
  // @@protoc_insertion_point(field_mutable_list:AFMsg.PlayerPropertyBase.property_data_list)
  return &property_data_list_;
}
const ::google::protobuf::RepeatedPtrField< ::AFMsg::PropertyPBData >&
PlayerPropertyBase::property_data_list() const {
  // @@protoc_insertion_point(field_list:AFMsg.PlayerPropertyBase.property_data_list)
  return property_data_list_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PlayerRecordBase::kRecordNameFieldNumber;
const int PlayerRecordBase::kRecordDataListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PlayerRecordBase::PlayerRecordBase()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:AFMsg.PlayerRecordBase)
}

void PlayerRecordBase::InitAsDefaultInstance() {
}

PlayerRecordBase::PlayerRecordBase(const PlayerRecordBase& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:AFMsg.PlayerRecordBase)
}

void PlayerRecordBase::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  record_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PlayerRecordBase::~PlayerRecordBase() {
  // @@protoc_insertion_point(destructor:AFMsg.PlayerRecordBase)
  SharedDtor();
}

void PlayerRecordBase::SharedDtor() {
  record_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void PlayerRecordBase::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PlayerRecordBase::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PlayerRecordBase_descriptor_;
}

const PlayerRecordBase& PlayerRecordBase::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_AFMsgBase_2eproto();
  return *default_instance_;
}

PlayerRecordBase* PlayerRecordBase::default_instance_ = NULL;

PlayerRecordBase* PlayerRecordBase::New(::google::protobuf::Arena* arena) const {
  PlayerRecordBase* n = new PlayerRecordBase;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PlayerRecordBase::Clear() {
// @@protoc_insertion_point(message_clear_start:AFMsg.PlayerRecordBase)
  if (has_record_name()) {
    record_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  record_data_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool PlayerRecordBase::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:AFMsg.PlayerRecordBase)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string record_name = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_record_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->record_name().data(), this->record_name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "AFMsg.PlayerRecordBase.record_name");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_record_data_list;
        break;
      }

      // repeated .AFMsg.RecordPBData record_data_list = 2;
      case 2: {
        if (tag == 18) {
         parse_record_data_list:
          DO_(input->IncrementRecursionDepth());
         parse_loop_record_data_list:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_record_data_list()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_loop_record_data_list;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:AFMsg.PlayerRecordBase)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:AFMsg.PlayerRecordBase)
  return false;
#undef DO_
}

void PlayerRecordBase::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:AFMsg.PlayerRecordBase)
  // required string record_name = 1;
  if (has_record_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->record_name().data(), this->record_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "AFMsg.PlayerRecordBase.record_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->record_name(), output);
  }

  // repeated .AFMsg.RecordPBData record_data_list = 2;
  for (unsigned int i = 0, n = this->record_data_list_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->record_data_list(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:AFMsg.PlayerRecordBase)
}

::google::protobuf::uint8* PlayerRecordBase::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:AFMsg.PlayerRecordBase)
  // required string record_name = 1;
  if (has_record_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->record_name().data(), this->record_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "AFMsg.PlayerRecordBase.record_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->record_name(), target);
  }

  // repeated .AFMsg.RecordPBData record_data_list = 2;
  for (unsigned int i = 0, n = this->record_data_list_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->record_data_list(i), false, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AFMsg.PlayerRecordBase)
  return target;
}

int PlayerRecordBase::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:AFMsg.PlayerRecordBase)
  int total_size = 0;

  // required string record_name = 1;
  if (has_record_name()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->record_name());
  }
  // repeated .AFMsg.RecordPBData record_data_list = 2;
  total_size += 1 * this->record_data_list_size();
  for (int i = 0; i < this->record_data_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->record_data_list(i));
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PlayerRecordBase::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:AFMsg.PlayerRecordBase)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const PlayerRecordBase* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const PlayerRecordBase>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:AFMsg.PlayerRecordBase)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:AFMsg.PlayerRecordBase)
    MergeFrom(*source);
  }
}

void PlayerRecordBase::MergeFrom(const PlayerRecordBase& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:AFMsg.PlayerRecordBase)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  record_data_list_.MergeFrom(from.record_data_list_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_record_name()) {
      set_has_record_name();
      record_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.record_name_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void PlayerRecordBase::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:AFMsg.PlayerRecordBase)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PlayerRecordBase::CopyFrom(const PlayerRecordBase& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:AFMsg.PlayerRecordBase)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PlayerRecordBase::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  if (!::google::protobuf::internal::AllAreInitialized(this->record_data_list())) return false;
  return true;
}

void PlayerRecordBase::Swap(PlayerRecordBase* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PlayerRecordBase::InternalSwap(PlayerRecordBase* other) {
  record_name_.Swap(&other->record_name_);
  record_data_list_.UnsafeArenaSwap(&other->record_data_list_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PlayerRecordBase::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PlayerRecordBase_descriptor_;
  metadata.reflection = PlayerRecordBase_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PlayerRecordBase

// required string record_name = 1;
bool PlayerRecordBase::has_record_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void PlayerRecordBase::set_has_record_name() {
  _has_bits_[0] |= 0x00000001u;
}
void PlayerRecordBase::clear_has_record_name() {
  _has_bits_[0] &= ~0x00000001u;
}
void PlayerRecordBase::clear_record_name() {
  record_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_record_name();
}
 const ::std::string& PlayerRecordBase::record_name() const {
  // @@protoc_insertion_point(field_get:AFMsg.PlayerRecordBase.record_name)
  return record_name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PlayerRecordBase::set_record_name(const ::std::string& value) {
  set_has_record_name();
  record_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:AFMsg.PlayerRecordBase.record_name)
}
 void PlayerRecordBase::set_record_name(const char* value) {
  set_has_record_name();
  record_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:AFMsg.PlayerRecordBase.record_name)
}
 void PlayerRecordBase::set_record_name(const char* value, size_t size) {
  set_has_record_name();
  record_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:AFMsg.PlayerRecordBase.record_name)
}
 ::std::string* PlayerRecordBase::mutable_record_name() {
  set_has_record_name();
  // @@protoc_insertion_point(field_mutable:AFMsg.PlayerRecordBase.record_name)
  return record_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* PlayerRecordBase::release_record_name() {
  // @@protoc_insertion_point(field_release:AFMsg.PlayerRecordBase.record_name)
  clear_has_record_name();
  return record_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PlayerRecordBase::set_allocated_record_name(::std::string* record_name) {
  if (record_name != NULL) {
    set_has_record_name();
  } else {
    clear_has_record_name();
  }
  record_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), record_name);
  // @@protoc_insertion_point(field_set_allocated:AFMsg.PlayerRecordBase.record_name)
}

// repeated .AFMsg.RecordPBData record_data_list = 2;
int PlayerRecordBase::record_data_list_size() const {
  return record_data_list_.size();
}
void PlayerRecordBase::clear_record_data_list() {
  record_data_list_.Clear();
}
const ::AFMsg::RecordPBData& PlayerRecordBase::record_data_list(int index) const {
  // @@protoc_insertion_point(field_get:AFMsg.PlayerRecordBase.record_data_list)
  return record_data_list_.Get(index);
}
::AFMsg::RecordPBData* PlayerRecordBase::mutable_record_data_list(int index) {
  // @@protoc_insertion_point(field_mutable:AFMsg.PlayerRecordBase.record_data_list)
  return record_data_list_.Mutable(index);
}
::AFMsg::RecordPBData* PlayerRecordBase::add_record_data_list() {
  // @@protoc_insertion_point(field_add:AFMsg.PlayerRecordBase.record_data_list)
  return record_data_list_.Add();
}
::google::protobuf::RepeatedPtrField< ::AFMsg::RecordPBData >*
PlayerRecordBase::mutable_record_data_list() {
  // @@protoc_insertion_point(field_mutable_list:AFMsg.PlayerRecordBase.record_data_list)
  return &record_data_list_;
}
const ::google::protobuf::RepeatedPtrField< ::AFMsg::RecordPBData >&
PlayerRecordBase::record_data_list() const {
  // @@protoc_insertion_point(field_list:AFMsg.PlayerRecordBase.record_data_list)
  return record_data_list_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PlayerRecordList::kRecordListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PlayerRecordList::PlayerRecordList()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:AFMsg.PlayerRecordList)
}

void PlayerRecordList::InitAsDefaultInstance() {
}

PlayerRecordList::PlayerRecordList(const PlayerRecordList& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:AFMsg.PlayerRecordList)
}

void PlayerRecordList::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PlayerRecordList::~PlayerRecordList() {
  // @@protoc_insertion_point(destructor:AFMsg.PlayerRecordList)
  SharedDtor();
}

void PlayerRecordList::SharedDtor() {
  if (this != default_instance_) {
  }
}

void PlayerRecordList::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PlayerRecordList::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PlayerRecordList_descriptor_;
}

const PlayerRecordList& PlayerRecordList::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_AFMsgBase_2eproto();
  return *default_instance_;
}

PlayerRecordList* PlayerRecordList::default_instance_ = NULL;

PlayerRecordList* PlayerRecordList::New(::google::protobuf::Arena* arena) const {
  PlayerRecordList* n = new PlayerRecordList;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PlayerRecordList::Clear() {
// @@protoc_insertion_point(message_clear_start:AFMsg.PlayerRecordList)
  record_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool PlayerRecordList::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:AFMsg.PlayerRecordList)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .AFMsg.PlayerRecordBase record_list = 1;
      case 1: {
        if (tag == 10) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_record_list:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_record_list()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_loop_record_list;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:AFMsg.PlayerRecordList)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:AFMsg.PlayerRecordList)
  return false;
#undef DO_
}

void PlayerRecordList::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:AFMsg.PlayerRecordList)
  // repeated .AFMsg.PlayerRecordBase record_list = 1;
  for (unsigned int i = 0, n = this->record_list_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->record_list(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:AFMsg.PlayerRecordList)
}

::google::protobuf::uint8* PlayerRecordList::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:AFMsg.PlayerRecordList)
  // repeated .AFMsg.PlayerRecordBase record_list = 1;
  for (unsigned int i = 0, n = this->record_list_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->record_list(i), false, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AFMsg.PlayerRecordList)
  return target;
}

int PlayerRecordList::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:AFMsg.PlayerRecordList)
  int total_size = 0;

  // repeated .AFMsg.PlayerRecordBase record_list = 1;
  total_size += 1 * this->record_list_size();
  for (int i = 0; i < this->record_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->record_list(i));
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PlayerRecordList::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:AFMsg.PlayerRecordList)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const PlayerRecordList* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const PlayerRecordList>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:AFMsg.PlayerRecordList)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:AFMsg.PlayerRecordList)
    MergeFrom(*source);
  }
}

void PlayerRecordList::MergeFrom(const PlayerRecordList& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:AFMsg.PlayerRecordList)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  record_list_.MergeFrom(from.record_list_);
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void PlayerRecordList::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:AFMsg.PlayerRecordList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PlayerRecordList::CopyFrom(const PlayerRecordList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:AFMsg.PlayerRecordList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PlayerRecordList::IsInitialized() const {

  if (!::google::protobuf::internal::AllAreInitialized(this->record_list())) return false;
  return true;
}

void PlayerRecordList::Swap(PlayerRecordList* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PlayerRecordList::InternalSwap(PlayerRecordList* other) {
  record_list_.UnsafeArenaSwap(&other->record_list_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PlayerRecordList::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PlayerRecordList_descriptor_;
  metadata.reflection = PlayerRecordList_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PlayerRecordList

// repeated .AFMsg.PlayerRecordBase record_list = 1;
int PlayerRecordList::record_list_size() const {
  return record_list_.size();
}
void PlayerRecordList::clear_record_list() {
  record_list_.Clear();
}
const ::AFMsg::PlayerRecordBase& PlayerRecordList::record_list(int index) const {
  // @@protoc_insertion_point(field_get:AFMsg.PlayerRecordList.record_list)
  return record_list_.Get(index);
}
::AFMsg::PlayerRecordBase* PlayerRecordList::mutable_record_list(int index) {
  // @@protoc_insertion_point(field_mutable:AFMsg.PlayerRecordList.record_list)
  return record_list_.Mutable(index);
}
::AFMsg::PlayerRecordBase* PlayerRecordList::add_record_list() {
  // @@protoc_insertion_point(field_add:AFMsg.PlayerRecordList.record_list)
  return record_list_.Add();
}
::google::protobuf::RepeatedPtrField< ::AFMsg::PlayerRecordBase >*
PlayerRecordList::mutable_record_list() {
  // @@protoc_insertion_point(field_mutable_list:AFMsg.PlayerRecordList.record_list)
  return &record_list_;
}
const ::google::protobuf::RepeatedPtrField< ::AFMsg::PlayerRecordBase >&
PlayerRecordList::record_list() const {
  // @@protoc_insertion_point(field_list:AFMsg.PlayerRecordList.record_list)
  return record_list_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BrocastMsg::kPlayerIdFieldNumber;
const int BrocastMsg::kMsgDataFieldNumber;
const int BrocastMsg::kNMsgIDFieldNumber;
const int BrocastMsg::kPlayerClientListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BrocastMsg::BrocastMsg()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:AFMsg.BrocastMsg)
}

void BrocastMsg::InitAsDefaultInstance() {
  player_id_ = const_cast< ::AFMsg::Ident*>(&::AFMsg::Ident::default_instance());
}

BrocastMsg::BrocastMsg(const BrocastMsg& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:AFMsg.BrocastMsg)
}

void BrocastMsg::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  player_id_ = NULL;
  msg_data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  nmsgid_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

BrocastMsg::~BrocastMsg() {
  // @@protoc_insertion_point(destructor:AFMsg.BrocastMsg)
  SharedDtor();
}

void BrocastMsg::SharedDtor() {
  msg_data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
    delete player_id_;
  }
}

void BrocastMsg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BrocastMsg::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return BrocastMsg_descriptor_;
}

const BrocastMsg& BrocastMsg::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_AFMsgBase_2eproto();
  return *default_instance_;
}

BrocastMsg* BrocastMsg::default_instance_ = NULL;

BrocastMsg* BrocastMsg::New(::google::protobuf::Arena* arena) const {
  BrocastMsg* n = new BrocastMsg;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void BrocastMsg::Clear() {
// @@protoc_insertion_point(message_clear_start:AFMsg.BrocastMsg)
  if (_has_bits_[0 / 32] & 7u) {
    if (has_player_id()) {
      if (player_id_ != NULL) player_id_->::AFMsg::Ident::Clear();
    }
    if (has_msg_data()) {
      msg_data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    nmsgid_ = GOOGLE_LONGLONG(0);
  }
  player_client_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool BrocastMsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:AFMsg.BrocastMsg)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .AFMsg.Ident player_id = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_player_id()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_msg_data;
        break;
      }

      // required bytes msg_data = 2;
      case 2: {
        if (tag == 18) {
         parse_msg_data:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_msg_data()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_nMsgID;
        break;
      }

      // required int64 nMsgID = 3;
      case 3: {
        if (tag == 24) {
         parse_nMsgID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &nmsgid_)));
          set_has_nmsgid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_player_Client_list;
        break;
      }

      // repeated .AFMsg.Ident player_Client_list = 4;
      case 4: {
        if (tag == 34) {
         parse_player_Client_list:
          DO_(input->IncrementRecursionDepth());
         parse_loop_player_Client_list:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_player_client_list()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_loop_player_Client_list;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:AFMsg.BrocastMsg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:AFMsg.BrocastMsg)
  return false;
#undef DO_
}

void BrocastMsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:AFMsg.BrocastMsg)
  // required .AFMsg.Ident player_id = 1;
  if (has_player_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->player_id_, output);
  }

  // required bytes msg_data = 2;
  if (has_msg_data()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->msg_data(), output);
  }

  // required int64 nMsgID = 3;
  if (has_nmsgid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->nmsgid(), output);
  }

  // repeated .AFMsg.Ident player_Client_list = 4;
  for (unsigned int i = 0, n = this->player_client_list_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->player_client_list(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:AFMsg.BrocastMsg)
}

::google::protobuf::uint8* BrocastMsg::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:AFMsg.BrocastMsg)
  // required .AFMsg.Ident player_id = 1;
  if (has_player_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->player_id_, false, target);
  }

  // required bytes msg_data = 2;
  if (has_msg_data()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->msg_data(), target);
  }

  // required int64 nMsgID = 3;
  if (has_nmsgid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->nmsgid(), target);
  }

  // repeated .AFMsg.Ident player_Client_list = 4;
  for (unsigned int i = 0, n = this->player_client_list_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, this->player_client_list(i), false, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AFMsg.BrocastMsg)
  return target;
}

int BrocastMsg::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:AFMsg.BrocastMsg)
  int total_size = 0;

  if (has_player_id()) {
    // required .AFMsg.Ident player_id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->player_id_);
  }

  if (has_msg_data()) {
    // required bytes msg_data = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->msg_data());
  }

  if (has_nmsgid()) {
    // required int64 nMsgID = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->nmsgid());
  }

  return total_size;
}
int BrocastMsg::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:AFMsg.BrocastMsg)
  int total_size = 0;

  if (((_has_bits_[0] & 0x00000007) ^ 0x00000007) == 0) {  // All required fields are present.
    // required .AFMsg.Ident player_id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->player_id_);

    // required bytes msg_data = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->msg_data());

    // required int64 nMsgID = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->nmsgid());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // repeated .AFMsg.Ident player_Client_list = 4;
  total_size += 1 * this->player_client_list_size();
  for (int i = 0; i < this->player_client_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->player_client_list(i));
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BrocastMsg::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:AFMsg.BrocastMsg)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const BrocastMsg* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const BrocastMsg>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:AFMsg.BrocastMsg)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:AFMsg.BrocastMsg)
    MergeFrom(*source);
  }
}

void BrocastMsg::MergeFrom(const BrocastMsg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:AFMsg.BrocastMsg)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  player_client_list_.MergeFrom(from.player_client_list_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_player_id()) {
      mutable_player_id()->::AFMsg::Ident::MergeFrom(from.player_id());
    }
    if (from.has_msg_data()) {
      set_has_msg_data();
      msg_data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_data_);
    }
    if (from.has_nmsgid()) {
      set_nmsgid(from.nmsgid());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void BrocastMsg::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:AFMsg.BrocastMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BrocastMsg::CopyFrom(const BrocastMsg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:AFMsg.BrocastMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BrocastMsg::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;

  if (has_player_id()) {
    if (!this->player_id_->IsInitialized()) return false;
  }
  if (!::google::protobuf::internal::AllAreInitialized(this->player_client_list())) return false;
  return true;
}

void BrocastMsg::Swap(BrocastMsg* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BrocastMsg::InternalSwap(BrocastMsg* other) {
  std::swap(player_id_, other->player_id_);
  msg_data_.Swap(&other->msg_data_);
  std::swap(nmsgid_, other->nmsgid_);
  player_client_list_.UnsafeArenaSwap(&other->player_client_list_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BrocastMsg::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = BrocastMsg_descriptor_;
  metadata.reflection = BrocastMsg_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// BrocastMsg

// required .AFMsg.Ident player_id = 1;
bool BrocastMsg::has_player_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void BrocastMsg::set_has_player_id() {
  _has_bits_[0] |= 0x00000001u;
}
void BrocastMsg::clear_has_player_id() {
  _has_bits_[0] &= ~0x00000001u;
}
void BrocastMsg::clear_player_id() {
  if (player_id_ != NULL) player_id_->::AFMsg::Ident::Clear();
  clear_has_player_id();
}
const ::AFMsg::Ident& BrocastMsg::player_id() const {
  // @@protoc_insertion_point(field_get:AFMsg.BrocastMsg.player_id)
  return player_id_ != NULL ? *player_id_ : *default_instance_->player_id_;
}
::AFMsg::Ident* BrocastMsg::mutable_player_id() {
  set_has_player_id();
  if (player_id_ == NULL) {
    player_id_ = new ::AFMsg::Ident;
  }
  // @@protoc_insertion_point(field_mutable:AFMsg.BrocastMsg.player_id)
  return player_id_;
}
::AFMsg::Ident* BrocastMsg::release_player_id() {
  // @@protoc_insertion_point(field_release:AFMsg.BrocastMsg.player_id)
  clear_has_player_id();
  ::AFMsg::Ident* temp = player_id_;
  player_id_ = NULL;
  return temp;
}
void BrocastMsg::set_allocated_player_id(::AFMsg::Ident* player_id) {
  delete player_id_;
  player_id_ = player_id;
  if (player_id) {
    set_has_player_id();
  } else {
    clear_has_player_id();
  }
  // @@protoc_insertion_point(field_set_allocated:AFMsg.BrocastMsg.player_id)
}

// required bytes msg_data = 2;
bool BrocastMsg::has_msg_data() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void BrocastMsg::set_has_msg_data() {
  _has_bits_[0] |= 0x00000002u;
}
void BrocastMsg::clear_has_msg_data() {
  _has_bits_[0] &= ~0x00000002u;
}
void BrocastMsg::clear_msg_data() {
  msg_data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_msg_data();
}
 const ::std::string& BrocastMsg::msg_data() const {
  // @@protoc_insertion_point(field_get:AFMsg.BrocastMsg.msg_data)
  return msg_data_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void BrocastMsg::set_msg_data(const ::std::string& value) {
  set_has_msg_data();
  msg_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:AFMsg.BrocastMsg.msg_data)
}
 void BrocastMsg::set_msg_data(const char* value) {
  set_has_msg_data();
  msg_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:AFMsg.BrocastMsg.msg_data)
}
 void BrocastMsg::set_msg_data(const void* value, size_t size) {
  set_has_msg_data();
  msg_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:AFMsg.BrocastMsg.msg_data)
}
 ::std::string* BrocastMsg::mutable_msg_data() {
  set_has_msg_data();
  // @@protoc_insertion_point(field_mutable:AFMsg.BrocastMsg.msg_data)
  return msg_data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* BrocastMsg::release_msg_data() {
  // @@protoc_insertion_point(field_release:AFMsg.BrocastMsg.msg_data)
  clear_has_msg_data();
  return msg_data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void BrocastMsg::set_allocated_msg_data(::std::string* msg_data) {
  if (msg_data != NULL) {
    set_has_msg_data();
  } else {
    clear_has_msg_data();
  }
  msg_data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), msg_data);
  // @@protoc_insertion_point(field_set_allocated:AFMsg.BrocastMsg.msg_data)
}

// required int64 nMsgID = 3;
bool BrocastMsg::has_nmsgid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void BrocastMsg::set_has_nmsgid() {
  _has_bits_[0] |= 0x00000004u;
}
void BrocastMsg::clear_has_nmsgid() {
  _has_bits_[0] &= ~0x00000004u;
}
void BrocastMsg::clear_nmsgid() {
  nmsgid_ = GOOGLE_LONGLONG(0);
  clear_has_nmsgid();
}
 ::google::protobuf::int64 BrocastMsg::nmsgid() const {
  // @@protoc_insertion_point(field_get:AFMsg.BrocastMsg.nMsgID)
  return nmsgid_;
}
 void BrocastMsg::set_nmsgid(::google::protobuf::int64 value) {
  set_has_nmsgid();
  nmsgid_ = value;
  // @@protoc_insertion_point(field_set:AFMsg.BrocastMsg.nMsgID)
}

// repeated .AFMsg.Ident player_Client_list = 4;
int BrocastMsg::player_client_list_size() const {
  return player_client_list_.size();
}
void BrocastMsg::clear_player_client_list() {
  player_client_list_.Clear();
}
const ::AFMsg::Ident& BrocastMsg::player_client_list(int index) const {
  // @@protoc_insertion_point(field_get:AFMsg.BrocastMsg.player_Client_list)
  return player_client_list_.Get(index);
}
::AFMsg::Ident* BrocastMsg::mutable_player_client_list(int index) {
  // @@protoc_insertion_point(field_mutable:AFMsg.BrocastMsg.player_Client_list)
  return player_client_list_.Mutable(index);
}
::AFMsg::Ident* BrocastMsg::add_player_client_list() {
  // @@protoc_insertion_point(field_add:AFMsg.BrocastMsg.player_Client_list)
  return player_client_list_.Add();
}
::google::protobuf::RepeatedPtrField< ::AFMsg::Ident >*
BrocastMsg::mutable_player_client_list() {
  // @@protoc_insertion_point(field_mutable_list:AFMsg.BrocastMsg.player_Client_list)
  return &player_client_list_;
}
const ::google::protobuf::RepeatedPtrField< ::AFMsg::Ident >&
BrocastMsg::player_client_list() const {
  // @@protoc_insertion_point(field_list:AFMsg.BrocastMsg.player_Client_list)
  return player_client_list_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Position::kXFieldNumber;
const int Position::kYFieldNumber;
const int Position::kZFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Position::Position()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:AFMsg.Position)
}

void Position::InitAsDefaultInstance() {
}

Position::Position(const Position& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:AFMsg.Position)
}

void Position::SharedCtor() {
  _cached_size_ = 0;
  x_ = 0;
  y_ = 0;
  z_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Position::~Position() {
  // @@protoc_insertion_point(destructor:AFMsg.Position)
  SharedDtor();
}

void Position::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Position::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Position::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Position_descriptor_;
}

const Position& Position::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_AFMsgBase_2eproto();
  return *default_instance_;
}

Position* Position::default_instance_ = NULL;

Position* Position::New(::google::protobuf::Arena* arena) const {
  Position* n = new Position;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Position::Clear() {
// @@protoc_insertion_point(message_clear_start:AFMsg.Position)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(Position, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<Position*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(x_, z_);

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool Position::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:AFMsg.Position)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required float x = 1;
      case 1: {
        if (tag == 13) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &x_)));
          set_has_x();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(21)) goto parse_y;
        break;
      }

      // required float y = 2;
      case 2: {
        if (tag == 21) {
         parse_y:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &y_)));
          set_has_y();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(29)) goto parse_z;
        break;
      }

      // required float z = 3;
      case 3: {
        if (tag == 29) {
         parse_z:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &z_)));
          set_has_z();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:AFMsg.Position)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:AFMsg.Position)
  return false;
#undef DO_
}

void Position::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:AFMsg.Position)
  // required float x = 1;
  if (has_x()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(1, this->x(), output);
  }

  // required float y = 2;
  if (has_y()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->y(), output);
  }

  // required float z = 3;
  if (has_z()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->z(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:AFMsg.Position)
}

::google::protobuf::uint8* Position::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:AFMsg.Position)
  // required float x = 1;
  if (has_x()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(1, this->x(), target);
  }

  // required float y = 2;
  if (has_y()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->y(), target);
  }

  // required float z = 3;
  if (has_z()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->z(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AFMsg.Position)
  return target;
}

int Position::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:AFMsg.Position)
  int total_size = 0;

  if (has_x()) {
    // required float x = 1;
    total_size += 1 + 4;
  }

  if (has_y()) {
    // required float y = 2;
    total_size += 1 + 4;
  }

  if (has_z()) {
    // required float z = 3;
    total_size += 1 + 4;
  }

  return total_size;
}
int Position::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:AFMsg.Position)
  int total_size = 0;

  if (((_has_bits_[0] & 0x00000007) ^ 0x00000007) == 0) {  // All required fields are present.
    // required float x = 1;
    total_size += 1 + 4;

    // required float y = 2;
    total_size += 1 + 4;

    // required float z = 3;
    total_size += 1 + 4;

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Position::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:AFMsg.Position)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Position* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Position>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:AFMsg.Position)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:AFMsg.Position)
    MergeFrom(*source);
  }
}

void Position::MergeFrom(const Position& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:AFMsg.Position)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_x()) {
      set_x(from.x());
    }
    if (from.has_y()) {
      set_y(from.y());
    }
    if (from.has_z()) {
      set_z(from.z());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void Position::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:AFMsg.Position)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Position::CopyFrom(const Position& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:AFMsg.Position)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Position::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;

  return true;
}

void Position::Swap(Position* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Position::InternalSwap(Position* other) {
  std::swap(x_, other->x_);
  std::swap(y_, other->y_);
  std::swap(z_, other->z_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Position::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Position_descriptor_;
  metadata.reflection = Position_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Position

// required float x = 1;
bool Position::has_x() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Position::set_has_x() {
  _has_bits_[0] |= 0x00000001u;
}
void Position::clear_has_x() {
  _has_bits_[0] &= ~0x00000001u;
}
void Position::clear_x() {
  x_ = 0;
  clear_has_x();
}
 float Position::x() const {
  // @@protoc_insertion_point(field_get:AFMsg.Position.x)
  return x_;
}
 void Position::set_x(float value) {
  set_has_x();
  x_ = value;
  // @@protoc_insertion_point(field_set:AFMsg.Position.x)
}

// required float y = 2;
bool Position::has_y() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void Position::set_has_y() {
  _has_bits_[0] |= 0x00000002u;
}
void Position::clear_has_y() {
  _has_bits_[0] &= ~0x00000002u;
}
void Position::clear_y() {
  y_ = 0;
  clear_has_y();
}
 float Position::y() const {
  // @@protoc_insertion_point(field_get:AFMsg.Position.y)
  return y_;
}
 void Position::set_y(float value) {
  set_has_y();
  y_ = value;
  // @@protoc_insertion_point(field_set:AFMsg.Position.y)
}

// required float z = 3;
bool Position::has_z() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void Position::set_has_z() {
  _has_bits_[0] |= 0x00000004u;
}
void Position::clear_has_z() {
  _has_bits_[0] &= ~0x00000004u;
}
void Position::clear_z() {
  z_ = 0;
  clear_has_z();
}
 float Position::z() const {
  // @@protoc_insertion_point(field_get:AFMsg.Position.z)
  return z_;
}
 void Position::set_z(float value) {
  set_has_z();
  z_ = value;
  // @@protoc_insertion_point(field_set:AFMsg.Position.z)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

const ::google::protobuf::EnumDescriptor* ReqCommand_EGameCommandType_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ReqCommand_EGameCommandType_descriptor_;
}
bool ReqCommand_EGameCommandType_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const ReqCommand_EGameCommandType ReqCommand::EGCT_MODIY_PROPERTY;
const ReqCommand_EGameCommandType ReqCommand::EGCT_MODIY_ITEM;
const ReqCommand_EGameCommandType ReqCommand::EGCT_CREATE_OBJECT;
const ReqCommand_EGameCommandType ReqCommand::EGCT_ADD_ROLE_EXP;
const ReqCommand_EGameCommandType ReqCommand::EGameCommandType_MIN;
const ReqCommand_EGameCommandType ReqCommand::EGameCommandType_MAX;
const int ReqCommand::EGameCommandType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ReqCommand::kControlIdFieldNumber;
const int ReqCommand::kCommandIdFieldNumber;
const int ReqCommand::kCommandStrValueFieldNumber;
const int ReqCommand::kCommandValueIntFieldNumber;
const int ReqCommand::kCommandValueFloatFieldNumber;
const int ReqCommand::kCommandValueStrFieldNumber;
const int ReqCommand::kCommandValueObjectFieldNumber;
const int ReqCommand::kRowFieldNumber;
const int ReqCommand::kColFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ReqCommand::ReqCommand()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:AFMsg.ReqCommand)
}

void ReqCommand::InitAsDefaultInstance() {
  control_id_ = const_cast< ::AFMsg::Ident*>(&::AFMsg::Ident::default_instance());
  command_value_object_ = const_cast< ::AFMsg::Ident*>(&::AFMsg::Ident::default_instance());
}

ReqCommand::ReqCommand(const ReqCommand& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:AFMsg.ReqCommand)
}

void ReqCommand::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  control_id_ = NULL;
  command_id_ = 0;
  command_str_value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  command_value_int_ = GOOGLE_LONGLONG(0);
  command_value_float_ = 0;
  command_value_str_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  command_value_object_ = NULL;
  row_ = 0;
  col_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ReqCommand::~ReqCommand() {
  // @@protoc_insertion_point(destructor:AFMsg.ReqCommand)
  SharedDtor();
}

void ReqCommand::SharedDtor() {
  command_str_value_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  command_value_str_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
    delete control_id_;
    delete command_value_object_;
  }
}

void ReqCommand::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ReqCommand::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ReqCommand_descriptor_;
}

const ReqCommand& ReqCommand::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_AFMsgBase_2eproto();
  return *default_instance_;
}

ReqCommand* ReqCommand::default_instance_ = NULL;

ReqCommand* ReqCommand::New(::google::protobuf::Arena* arena) const {
  ReqCommand* n = new ReqCommand;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ReqCommand::Clear() {
// @@protoc_insertion_point(message_clear_start:AFMsg.ReqCommand)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(ReqCommand, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<ReqCommand*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  if (_has_bits_[0 / 32] & 255u) {
    ZR_(command_id_, command_value_int_);
    if (has_control_id()) {
      if (control_id_ != NULL) control_id_->::AFMsg::Ident::Clear();
    }
    if (has_command_str_value()) {
      command_str_value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_command_value_str()) {
      command_value_str_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_command_value_object()) {
      if (command_value_object_ != NULL) command_value_object_->::AFMsg::Ident::Clear();
    }
    row_ = 0;
  }
  col_ = 0;

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool ReqCommand::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:AFMsg.ReqCommand)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .AFMsg.Ident control_id = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_control_id()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_command_id;
        break;
      }

      // required .AFMsg.ReqCommand.EGameCommandType command_id = 2;
      case 2: {
        if (tag == 16) {
         parse_command_id:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::AFMsg::ReqCommand_EGameCommandType_IsValid(value)) {
            set_command_id(static_cast< ::AFMsg::ReqCommand_EGameCommandType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(2, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_command_str_value;
        break;
      }

      // optional bytes command_str_value = 3;
      case 3: {
        if (tag == 26) {
         parse_command_str_value:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_command_str_value()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_command_value_int;
        break;
      }

      // optional int64 command_value_int = 4;
      case 4: {
        if (tag == 32) {
         parse_command_value_int:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &command_value_int_)));
          set_has_command_value_int();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(45)) goto parse_command_value_float;
        break;
      }

      // optional float command_value_float = 5;
      case 5: {
        if (tag == 45) {
         parse_command_value_float:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &command_value_float_)));
          set_has_command_value_float();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_command_value_str;
        break;
      }

      // optional bytes command_value_str = 6;
      case 6: {
        if (tag == 50) {
         parse_command_value_str:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_command_value_str()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_command_value_object;
        break;
      }

      // optional .AFMsg.Ident command_value_object = 7;
      case 7: {
        if (tag == 58) {
         parse_command_value_object:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_command_value_object()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(64)) goto parse_row;
        break;
      }

      // optional int32 row = 8;
      case 8: {
        if (tag == 64) {
         parse_row:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &row_)));
          set_has_row();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(72)) goto parse_col;
        break;
      }

      // optional int32 col = 9;
      case 9: {
        if (tag == 72) {
         parse_col:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &col_)));
          set_has_col();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:AFMsg.ReqCommand)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:AFMsg.ReqCommand)
  return false;
#undef DO_
}

void ReqCommand::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:AFMsg.ReqCommand)
  // required .AFMsg.Ident control_id = 1;
  if (has_control_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->control_id_, output);
  }

  // required .AFMsg.ReqCommand.EGameCommandType command_id = 2;
  if (has_command_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->command_id(), output);
  }

  // optional bytes command_str_value = 3;
  if (has_command_str_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->command_str_value(), output);
  }

  // optional int64 command_value_int = 4;
  if (has_command_value_int()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(4, this->command_value_int(), output);
  }

  // optional float command_value_float = 5;
  if (has_command_value_float()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(5, this->command_value_float(), output);
  }

  // optional bytes command_value_str = 6;
  if (has_command_value_str()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      6, this->command_value_str(), output);
  }

  // optional .AFMsg.Ident command_value_object = 7;
  if (has_command_value_object()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, *this->command_value_object_, output);
  }

  // optional int32 row = 8;
  if (has_row()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->row(), output);
  }

  // optional int32 col = 9;
  if (has_col()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(9, this->col(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:AFMsg.ReqCommand)
}

::google::protobuf::uint8* ReqCommand::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:AFMsg.ReqCommand)
  // required .AFMsg.Ident control_id = 1;
  if (has_control_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->control_id_, false, target);
  }

  // required .AFMsg.ReqCommand.EGameCommandType command_id = 2;
  if (has_command_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->command_id(), target);
  }

  // optional bytes command_str_value = 3;
  if (has_command_str_value()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->command_str_value(), target);
  }

  // optional int64 command_value_int = 4;
  if (has_command_value_int()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(4, this->command_value_int(), target);
  }

  // optional float command_value_float = 5;
  if (has_command_value_float()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(5, this->command_value_float(), target);
  }

  // optional bytes command_value_str = 6;
  if (has_command_value_str()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        6, this->command_value_str(), target);
  }

  // optional .AFMsg.Ident command_value_object = 7;
  if (has_command_value_object()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        7, *this->command_value_object_, false, target);
  }

  // optional int32 row = 8;
  if (has_row()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->row(), target);
  }

  // optional int32 col = 9;
  if (has_col()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(9, this->col(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AFMsg.ReqCommand)
  return target;
}

int ReqCommand::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:AFMsg.ReqCommand)
  int total_size = 0;

  if (has_control_id()) {
    // required .AFMsg.Ident control_id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->control_id_);
  }

  if (has_command_id()) {
    // required .AFMsg.ReqCommand.EGameCommandType command_id = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->command_id());
  }

  return total_size;
}
int ReqCommand::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:AFMsg.ReqCommand)
  int total_size = 0;

  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required .AFMsg.Ident control_id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->control_id_);

    // required .AFMsg.ReqCommand.EGameCommandType command_id = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->command_id());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_has_bits_[2 / 32] & 252u) {
    // optional bytes command_str_value = 3;
    if (has_command_str_value()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->command_str_value());
    }

    // optional int64 command_value_int = 4;
    if (has_command_value_int()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->command_value_int());
    }

    // optional float command_value_float = 5;
    if (has_command_value_float()) {
      total_size += 1 + 4;
    }

    // optional bytes command_value_str = 6;
    if (has_command_value_str()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->command_value_str());
    }

    // optional .AFMsg.Ident command_value_object = 7;
    if (has_command_value_object()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->command_value_object_);
    }

    // optional int32 row = 8;
    if (has_row()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->row());
    }

  }
  // optional int32 col = 9;
  if (has_col()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->col());
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ReqCommand::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:AFMsg.ReqCommand)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const ReqCommand* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const ReqCommand>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:AFMsg.ReqCommand)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:AFMsg.ReqCommand)
    MergeFrom(*source);
  }
}

void ReqCommand::MergeFrom(const ReqCommand& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:AFMsg.ReqCommand)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_control_id()) {
      mutable_control_id()->::AFMsg::Ident::MergeFrom(from.control_id());
    }
    if (from.has_command_id()) {
      set_command_id(from.command_id());
    }
    if (from.has_command_str_value()) {
      set_has_command_str_value();
      command_str_value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.command_str_value_);
    }
    if (from.has_command_value_int()) {
      set_command_value_int(from.command_value_int());
    }
    if (from.has_command_value_float()) {
      set_command_value_float(from.command_value_float());
    }
    if (from.has_command_value_str()) {
      set_has_command_value_str();
      command_value_str_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.command_value_str_);
    }
    if (from.has_command_value_object()) {
      mutable_command_value_object()->::AFMsg::Ident::MergeFrom(from.command_value_object());
    }
    if (from.has_row()) {
      set_row(from.row());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_col()) {
      set_col(from.col());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void ReqCommand::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:AFMsg.ReqCommand)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ReqCommand::CopyFrom(const ReqCommand& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:AFMsg.ReqCommand)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReqCommand::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  if (has_control_id()) {
    if (!this->control_id_->IsInitialized()) return false;
  }
  if (has_command_value_object()) {
    if (!this->command_value_object_->IsInitialized()) return false;
  }
  return true;
}

void ReqCommand::Swap(ReqCommand* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ReqCommand::InternalSwap(ReqCommand* other) {
  std::swap(control_id_, other->control_id_);
  std::swap(command_id_, other->command_id_);
  command_str_value_.Swap(&other->command_str_value_);
  std::swap(command_value_int_, other->command_value_int_);
  std::swap(command_value_float_, other->command_value_float_);
  command_value_str_.Swap(&other->command_value_str_);
  std::swap(command_value_object_, other->command_value_object_);
  std::swap(row_, other->row_);
  std::swap(col_, other->col_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ReqCommand::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ReqCommand_descriptor_;
  metadata.reflection = ReqCommand_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ReqCommand

// required .AFMsg.Ident control_id = 1;
bool ReqCommand::has_control_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void ReqCommand::set_has_control_id() {
  _has_bits_[0] |= 0x00000001u;
}
void ReqCommand::clear_has_control_id() {
  _has_bits_[0] &= ~0x00000001u;
}
void ReqCommand::clear_control_id() {
  if (control_id_ != NULL) control_id_->::AFMsg::Ident::Clear();
  clear_has_control_id();
}
const ::AFMsg::Ident& ReqCommand::control_id() const {
  // @@protoc_insertion_point(field_get:AFMsg.ReqCommand.control_id)
  return control_id_ != NULL ? *control_id_ : *default_instance_->control_id_;
}
::AFMsg::Ident* ReqCommand::mutable_control_id() {
  set_has_control_id();
  if (control_id_ == NULL) {
    control_id_ = new ::AFMsg::Ident;
  }
  // @@protoc_insertion_point(field_mutable:AFMsg.ReqCommand.control_id)
  return control_id_;
}
::AFMsg::Ident* ReqCommand::release_control_id() {
  // @@protoc_insertion_point(field_release:AFMsg.ReqCommand.control_id)
  clear_has_control_id();
  ::AFMsg::Ident* temp = control_id_;
  control_id_ = NULL;
  return temp;
}
void ReqCommand::set_allocated_control_id(::AFMsg::Ident* control_id) {
  delete control_id_;
  control_id_ = control_id;
  if (control_id) {
    set_has_control_id();
  } else {
    clear_has_control_id();
  }
  // @@protoc_insertion_point(field_set_allocated:AFMsg.ReqCommand.control_id)
}

// required .AFMsg.ReqCommand.EGameCommandType command_id = 2;
bool ReqCommand::has_command_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void ReqCommand::set_has_command_id() {
  _has_bits_[0] |= 0x00000002u;
}
void ReqCommand::clear_has_command_id() {
  _has_bits_[0] &= ~0x00000002u;
}
void ReqCommand::clear_command_id() {
  command_id_ = 0;
  clear_has_command_id();
}
 ::AFMsg::ReqCommand_EGameCommandType ReqCommand::command_id() const {
  // @@protoc_insertion_point(field_get:AFMsg.ReqCommand.command_id)
  return static_cast< ::AFMsg::ReqCommand_EGameCommandType >(command_id_);
}
 void ReqCommand::set_command_id(::AFMsg::ReqCommand_EGameCommandType value) {
  assert(::AFMsg::ReqCommand_EGameCommandType_IsValid(value));
  set_has_command_id();
  command_id_ = value;
  // @@protoc_insertion_point(field_set:AFMsg.ReqCommand.command_id)
}

// optional bytes command_str_value = 3;
bool ReqCommand::has_command_str_value() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void ReqCommand::set_has_command_str_value() {
  _has_bits_[0] |= 0x00000004u;
}
void ReqCommand::clear_has_command_str_value() {
  _has_bits_[0] &= ~0x00000004u;
}
void ReqCommand::clear_command_str_value() {
  command_str_value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_command_str_value();
}
 const ::std::string& ReqCommand::command_str_value() const {
  // @@protoc_insertion_point(field_get:AFMsg.ReqCommand.command_str_value)
  return command_str_value_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ReqCommand::set_command_str_value(const ::std::string& value) {
  set_has_command_str_value();
  command_str_value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:AFMsg.ReqCommand.command_str_value)
}
 void ReqCommand::set_command_str_value(const char* value) {
  set_has_command_str_value();
  command_str_value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:AFMsg.ReqCommand.command_str_value)
}
 void ReqCommand::set_command_str_value(const void* value, size_t size) {
  set_has_command_str_value();
  command_str_value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:AFMsg.ReqCommand.command_str_value)
}
 ::std::string* ReqCommand::mutable_command_str_value() {
  set_has_command_str_value();
  // @@protoc_insertion_point(field_mutable:AFMsg.ReqCommand.command_str_value)
  return command_str_value_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* ReqCommand::release_command_str_value() {
  // @@protoc_insertion_point(field_release:AFMsg.ReqCommand.command_str_value)
  clear_has_command_str_value();
  return command_str_value_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ReqCommand::set_allocated_command_str_value(::std::string* command_str_value) {
  if (command_str_value != NULL) {
    set_has_command_str_value();
  } else {
    clear_has_command_str_value();
  }
  command_str_value_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), command_str_value);
  // @@protoc_insertion_point(field_set_allocated:AFMsg.ReqCommand.command_str_value)
}

// optional int64 command_value_int = 4;
bool ReqCommand::has_command_value_int() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void ReqCommand::set_has_command_value_int() {
  _has_bits_[0] |= 0x00000008u;
}
void ReqCommand::clear_has_command_value_int() {
  _has_bits_[0] &= ~0x00000008u;
}
void ReqCommand::clear_command_value_int() {
  command_value_int_ = GOOGLE_LONGLONG(0);
  clear_has_command_value_int();
}
 ::google::protobuf::int64 ReqCommand::command_value_int() const {
  // @@protoc_insertion_point(field_get:AFMsg.ReqCommand.command_value_int)
  return command_value_int_;
}
 void ReqCommand::set_command_value_int(::google::protobuf::int64 value) {
  set_has_command_value_int();
  command_value_int_ = value;
  // @@protoc_insertion_point(field_set:AFMsg.ReqCommand.command_value_int)
}

// optional float command_value_float = 5;
bool ReqCommand::has_command_value_float() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void ReqCommand::set_has_command_value_float() {
  _has_bits_[0] |= 0x00000010u;
}
void ReqCommand::clear_has_command_value_float() {
  _has_bits_[0] &= ~0x00000010u;
}
void ReqCommand::clear_command_value_float() {
  command_value_float_ = 0;
  clear_has_command_value_float();
}
 float ReqCommand::command_value_float() const {
  // @@protoc_insertion_point(field_get:AFMsg.ReqCommand.command_value_float)
  return command_value_float_;
}
 void ReqCommand::set_command_value_float(float value) {
  set_has_command_value_float();
  command_value_float_ = value;
  // @@protoc_insertion_point(field_set:AFMsg.ReqCommand.command_value_float)
}

// optional bytes command_value_str = 6;
bool ReqCommand::has_command_value_str() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void ReqCommand::set_has_command_value_str() {
  _has_bits_[0] |= 0x00000020u;
}
void ReqCommand::clear_has_command_value_str() {
  _has_bits_[0] &= ~0x00000020u;
}
void ReqCommand::clear_command_value_str() {
  command_value_str_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_command_value_str();
}
 const ::std::string& ReqCommand::command_value_str() const {
  // @@protoc_insertion_point(field_get:AFMsg.ReqCommand.command_value_str)
  return command_value_str_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ReqCommand::set_command_value_str(const ::std::string& value) {
  set_has_command_value_str();
  command_value_str_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:AFMsg.ReqCommand.command_value_str)
}
 void ReqCommand::set_command_value_str(const char* value) {
  set_has_command_value_str();
  command_value_str_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:AFMsg.ReqCommand.command_value_str)
}
 void ReqCommand::set_command_value_str(const void* value, size_t size) {
  set_has_command_value_str();
  command_value_str_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:AFMsg.ReqCommand.command_value_str)
}
 ::std::string* ReqCommand::mutable_command_value_str() {
  set_has_command_value_str();
  // @@protoc_insertion_point(field_mutable:AFMsg.ReqCommand.command_value_str)
  return command_value_str_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* ReqCommand::release_command_value_str() {
  // @@protoc_insertion_point(field_release:AFMsg.ReqCommand.command_value_str)
  clear_has_command_value_str();
  return command_value_str_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ReqCommand::set_allocated_command_value_str(::std::string* command_value_str) {
  if (command_value_str != NULL) {
    set_has_command_value_str();
  } else {
    clear_has_command_value_str();
  }
  command_value_str_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), command_value_str);
  // @@protoc_insertion_point(field_set_allocated:AFMsg.ReqCommand.command_value_str)
}

// optional .AFMsg.Ident command_value_object = 7;
bool ReqCommand::has_command_value_object() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void ReqCommand::set_has_command_value_object() {
  _has_bits_[0] |= 0x00000040u;
}
void ReqCommand::clear_has_command_value_object() {
  _has_bits_[0] &= ~0x00000040u;
}
void ReqCommand::clear_command_value_object() {
  if (command_value_object_ != NULL) command_value_object_->::AFMsg::Ident::Clear();
  clear_has_command_value_object();
}
const ::AFMsg::Ident& ReqCommand::command_value_object() const {
  // @@protoc_insertion_point(field_get:AFMsg.ReqCommand.command_value_object)
  return command_value_object_ != NULL ? *command_value_object_ : *default_instance_->command_value_object_;
}
::AFMsg::Ident* ReqCommand::mutable_command_value_object() {
  set_has_command_value_object();
  if (command_value_object_ == NULL) {
    command_value_object_ = new ::AFMsg::Ident;
  }
  // @@protoc_insertion_point(field_mutable:AFMsg.ReqCommand.command_value_object)
  return command_value_object_;
}
::AFMsg::Ident* ReqCommand::release_command_value_object() {
  // @@protoc_insertion_point(field_release:AFMsg.ReqCommand.command_value_object)
  clear_has_command_value_object();
  ::AFMsg::Ident* temp = command_value_object_;
  command_value_object_ = NULL;
  return temp;
}
void ReqCommand::set_allocated_command_value_object(::AFMsg::Ident* command_value_object) {
  delete command_value_object_;
  command_value_object_ = command_value_object;
  if (command_value_object) {
    set_has_command_value_object();
  } else {
    clear_has_command_value_object();
  }
  // @@protoc_insertion_point(field_set_allocated:AFMsg.ReqCommand.command_value_object)
}

// optional int32 row = 8;
bool ReqCommand::has_row() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
void ReqCommand::set_has_row() {
  _has_bits_[0] |= 0x00000080u;
}
void ReqCommand::clear_has_row() {
  _has_bits_[0] &= ~0x00000080u;
}
void ReqCommand::clear_row() {
  row_ = 0;
  clear_has_row();
}
 ::google::protobuf::int32 ReqCommand::row() const {
  // @@protoc_insertion_point(field_get:AFMsg.ReqCommand.row)
  return row_;
}
 void ReqCommand::set_row(::google::protobuf::int32 value) {
  set_has_row();
  row_ = value;
  // @@protoc_insertion_point(field_set:AFMsg.ReqCommand.row)
}

// optional int32 col = 9;
bool ReqCommand::has_col() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
void ReqCommand::set_has_col() {
  _has_bits_[0] |= 0x00000100u;
}
void ReqCommand::clear_has_col() {
  _has_bits_[0] &= ~0x00000100u;
}
void ReqCommand::clear_col() {
  col_ = 0;
  clear_has_col();
}
 ::google::protobuf::int32 ReqCommand::col() const {
  // @@protoc_insertion_point(field_get:AFMsg.ReqCommand.col)
  return col_;
}
 void ReqCommand::set_col(::google::protobuf::int32 value) {
  set_has_col();
  col_ = value;
  // @@protoc_insertion_point(field_set:AFMsg.ReqCommand.col)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace AFMsg

// @@protoc_insertion_point(global_scope)
